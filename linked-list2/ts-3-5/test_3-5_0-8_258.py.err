import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from linked_list2 import Node, LinkedList

# Test cases for Node class
def test_node_init():
    new_node = Node(10)
    assert new_node.data == 10
    assert new_node.next is None

# Test cases for LinkedList class
def test_linked_list_init_empty():
    ll = LinkedList()
    assert ll.head is None
    assert ll.size() == 0

def test_linked_list_init_with_data():
    ll = LinkedList([1, 2, 3])
    assert ll.size() == 3

def test_linked_list_push():
    ll = LinkedList()
    ll.push(5)
    assert ll.head.data == 5
    assert ll.size() == 1

def test_linked_list_pop():
    ll = LinkedList([1, 2, 3])
    popped = ll.pop()
    assert popped == 1
    assert ll.size() == 2

def test_linked_list_size():
    ll = LinkedList([1, 2, 3])
    assert ll.size() == 3

def test_linked_list_search_found():
    ll = LinkedList([1, 2, 3])
    assert ll.search(2).data == 2

def test_linked_list_search_not_found():
    ll = LinkedList([1, 2, 3])
    assert ll.search(4) is None

def test_linked_list_remove():
    ll = LinkedList([1, 2, 3])
    ll.remove(2)
    assert ll.size() == 2
    assert ll.search(2) is None

def test_linked_list_display():
    ll = LinkedList([1, 'test', 3])
    assert ll.display() == '(1, test, 3)'