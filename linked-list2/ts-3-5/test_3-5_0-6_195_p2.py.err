import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from linked_list2 import Node, LinkedList

import pytest

@pytest.fixture
def empty_linked_list():
    return LinkedList()

@pytest.fixture
def linked_list_with_data():
    return LinkedList([1, 2, 3])

def test_push(empty_linked_list):
    empty_linked_list.push(10)
    assert empty_linked_list.size() == 1
    assert empty_linked_list.display() == "(10)"

def test_pop(linked_list_with_data):
    popped_val = linked_list_with_data.pop()
    assert popped_val == 3
    assert linked_list_with_data.size() == 2

def test_size(empty_linked_list, linked_list_with_data):
    assert empty_linked_list.size() == 0
    assert linked_list_with_data.size() == 3

def test_search(linked_list_with_data):
    assert linked_list_with_data.search(2).data == 2
    assert linked_list_with_data.search(4) is None

def test_remove(linked_list_with_data):
    linked_list_with_data.remove(2)
    assert linked_list_with_data.size() == 2
    assert linked_list_with_data.display() == "(1, 3)"

    linked_list_with_data.remove(1)
    assert linked_list_with_data.size() == 1
    assert linked_list_with_data.display() == "(3)"

def test_display(empty_linked_list, linked_list_with_data):
    assert empty_linked_list.display() == "()"
    assert linked_list_with_data.display() == "(1, 2, 3)"