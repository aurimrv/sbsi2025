import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from linked_list2 import Node, LinkedList

def test_node_creation():
    node = Node(5)
    assert node.data == 5
    assert node.next is None

def test_node_next_pointer():
    node1 = Node(10)
    node2 = Node(20, node1)
    assert node2.data == 20
    assert node2.next == node1

def test_linked_list_push():
    ll = LinkedList()
    ll.push(5)
    assert ll.head.data == 5

def test_linked_list_pop():
    ll = LinkedList([1, 2, 3])
    assert ll.pop() == 3
    assert ll.size() == 2

def test_linked_list_size():
    ll = LinkedList([1, 2, 3, 4, 5])
    assert ll.size() == 5

def test_linked_list_search_found():
    ll = LinkedList([1, 2, 3])
    assert ll.search(2).data == 2

def test_linked_list_search_not_found():
    ll = LinkedList([1, 2, 3])
    assert ll.search(4) is None

def test_linked_list_remove_head():
    ll = LinkedList([1, 2, 3])
    ll.remove(1)
    assert ll.size() == 2
    assert ll.head.data == 2

def test_linked_list_remove_middle():
    ll = LinkedList([1, 2, 3])
    ll.remove(2)
    assert ll.size() == 2
    assert ll.head.next.data == 3

def test_linked_list_remove_last():
    ll = LinkedList([1, 2, 3])
    ll.remove(3)
    assert ll.size() == 2
    assert ll.head.next is None

def test_linked_list_display():
    ll = LinkedList([1, 'hello', 3.14, 'world'])
    assert ll.display() == "(1, 'hello', 3.14, 'world')"