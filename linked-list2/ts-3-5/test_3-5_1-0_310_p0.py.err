import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from linked_list2 import Node, LinkedList

def test_node_initialization():
    node = Node(5)
    assert node.data == 5
    assert node.next is None

def test_node_creation_with_next():
    next_node = Node(10)
    node = Node(5, next_node)
    assert node.data == 5
    assert node.next == next_node

def test_empty_linked_list_creation():
    linked_list = LinkedList()
    assert linked_list.head is None
    assert linked_list.size() == 0

def test_linked_list_push():
    linked_list = LinkedList()
    linked_list.push(3)
    assert linked_list.head.data == 3
    assert linked_list.size() == 1

def test_linked_list_pop():
    linked_list = LinkedList([1, 2, 3])
    popped_value = linked_list.pop()
    assert popped_value == 3
    assert linked_list.size() == 2

def test_linked_list_size():
    linked_list = LinkedList([1, 2, 3, 4])
    assert linked_list.size() == 4

def test_linked_list_search():
    linked_list = LinkedList([1, 2, 3, 4])
    node = linked_list.search(3)
    assert node is not None
    assert node.data == 3

def test_linked_list_remove():
    linked_list = LinkedList([1, 2, 3, 4])
    linked_list.remove(3)
    assert linked_list.size() == 3
    assert linked_list.search(3) is None

def test_linked_list_display():
    linked_list = LinkedList([1, 'hello', 3, 'world'])
    assert linked_list.display() == "(1, hello, 3, world)" 