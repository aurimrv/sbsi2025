[*] Start mutation process:
   - targets: hamming_ops.py
   - tests: ts-3-5/test_3-5_0-7_238.py
[*] 2 tests passed:
   - test_3-5_0-7_238 [0.13543 s]
[*] Start mutants generation and execution:
   - [#   1] AOR hamming_ops: 
--------------------------------------------------------------------------------
  33:         
  34:         x = abs(x)
  35:         count = 1
  36:     while x:
- 37:         x &= x - 1
+ 37:         x &= x + 1
  38:         count += 1
  39:     return count
--------------------------------------------------------------------------------
[0.15942 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
        assert hamming_distance(0, 0) == 0
>       assert hamming_distance(1, 2) == 2
E       AssertionError

ts-3-5/test_3-5_0-7_238.py:13: AssertionError
   - [#   2] ASR hamming_ops: 
--------------------------------------------------------------------------------
  34:         x = abs(x)
  35:         count = 1
  36:     while x:
  37:         x &= x - 1
- 38:         count += 1
+ 38:         count -= 1
  39:     return count
--------------------------------------------------------------------------------
[0.16682 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
        assert hamming_distance(0, 0) == 0
>       assert hamming_distance(1, 2) == 2
E       AssertionError

ts-3-5/test_3-5_0-7_238.py:13: AssertionError
   - [#   3] COI hamming_ops: 
--------------------------------------------------------------------------------
  28:         Integer representing the number of bits
  29:         that are on (1).
  30:     '''
  31:     count = 0
- 32:     if x < 0:
+ 32:     if not (x < 0):
  33:         
  34:         x = abs(x)
  35:         count = 1
  36:     while x:
--------------------------------------------------------------------------------
[0.16309 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
>       assert hamming_distance(0, 0) == 0
E       AssertionError

ts-3-5/test_3-5_0-7_238.py:12: AssertionError
   - [#   4] COI hamming_ops: 
--------------------------------------------------------------------------------
  32:     if x < 0:
  33:         
  34:         x = abs(x)
  35:         count = 1
- 36:     while x:
+ 36:     while not x:
  37:         x &= x - 1
  38:         count += 1
  39:     return count
--------------------------------------------------------------------------------
[5.00662 s] timeout
   - [#   5] LOR hamming_ops: 
--------------------------------------------------------------------------------
  10:         An integer representing the number of bits that are different
  11:         in the two args.
  12:     '''
  13:     
- 14:     xor = x ^ y
+ 14:     xor = x & y
  15:     
  16:     
  17:     return hamming_weight(xor)
  18: 
--------------------------------------------------------------------------------
[0.15626 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
        assert hamming_distance(0, 0) == 0
>       assert hamming_distance(1, 2) == 2
E       AssertionError

ts-3-5/test_3-5_0-7_238.py:13: AssertionError
   - [#   6] LOR hamming_ops: 
--------------------------------------------------------------------------------
  33:         
  34:         x = abs(x)
  35:         count = 1
  36:     while x:
- 37:         x &= x - 1
+ 37:         x |= x - 1
  38:         count += 1
  39:     return count
--------------------------------------------------------------------------------
[5.00347 s] timeout
   - [#   7] OIL hamming_ops: 
--------------------------------------------------------------------------------
  35:         count = 1
  36:     while x:
  37:         x &= x - 1
  38:         count += 1
- 39:     return count
+ 39:         break
+ 40:     return count
--------------------------------------------------------------------------------
[0.15940 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
        assert hamming_distance(0, 0) == 0
>       assert hamming_distance(1, 2) == 2
E       AssertionError

ts-3-5/test_3-5_0-7_238.py:13: AssertionError
   - [#   8] ROR hamming_ops: 
--------------------------------------------------------------------------------
  28:         Integer representing the number of bits
  29:         that are on (1).
  30:     '''
  31:     count = 0
- 32:     if x < 0:
+ 32:     if x > 0:
  33:         
  34:         x = abs(x)
  35:         count = 1
  36:     while x:
--------------------------------------------------------------------------------
[0.15884 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
        assert hamming_distance(0, 0) == 0
>       assert hamming_distance(1, 2) == 2
E       AssertionError

ts-3-5/test_3-5_0-7_238.py:13: AssertionError
   - [#   9] ROR hamming_ops: 
--------------------------------------------------------------------------------
  28:         Integer representing the number of bits
  29:         that are on (1).
  30:     '''
  31:     count = 0
- 32:     if x < 0:
+ 32:     if x <= 0:
  33:         
  34:         x = abs(x)
  35:         count = 1
  36:     while x:
--------------------------------------------------------------------------------
[0.16264 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
>       assert hamming_distance(0, 0) == 0
E       AssertionError

ts-3-5/test_3-5_0-7_238.py:12: AssertionError
   - [#  10] SDL hamming_ops: 
--------------------------------------------------------------------------------
  10:         An integer representing the number of bits that are different
  11:         in the two args.
  12:     '''
  13:     
- 14:     xor = x ^ y
+ 14:     pass
  15:     
  16:     
  17:     return hamming_weight(xor)
  18: 
--------------------------------------------------------------------------------
[0.16381 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
>       assert hamming_distance(0, 0) == 0

ts-3-5/test_3-5_0-7_238.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = 0, y = 0

>   ???
E   NameError: name 'xor' is not defined

hamming_ops:17: NameError
   - [#  11] SDL hamming_ops: 
--------------------------------------------------------------------------------
  13:     
  14:     xor = x ^ y
  15:     
  16:     
- 17:     return hamming_weight(xor)
+ 17:     pass
  18: 
  19: 
  20: def hamming_weight(x: int):
  21:     '''
--------------------------------------------------------------------------------
[0.16158 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
>       assert hamming_distance(0, 0) == 0
E       AssertionError

ts-3-5/test_3-5_0-7_238.py:12: AssertionError
   - [#  12] SDL hamming_ops: 
--------------------------------------------------------------------------------
  27:     Returns:
  28:         Integer representing the number of bits
  29:         that are on (1).
  30:     '''
- 31:     count = 0
+ 31:     pass
  32:     if x < 0:
  33:         
  34:         x = abs(x)
  35:         count = 1
--------------------------------------------------------------------------------
[0.15305 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
>       assert hamming_distance(0, 0) == 0

ts-3-5/test_3-5_0-7_238.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
hamming_ops:17: in hamming_distance
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = 0

>   ???
E   UnboundLocalError: local variable 'count' referenced before assignment

hamming_ops:39: UnboundLocalError
   - [#  13] SDL hamming_ops: 
--------------------------------------------------------------------------------
  30:     '''
  31:     count = 0
  32:     if x < 0:
  33:         
- 34:         x = abs(x)
+ 34:         pass
  35:         count = 1
  36:     while x:
  37:         x &= x - 1
  38:         count += 1
--------------------------------------------------------------------------------
[0.13835 s] survived
   - [#  14] SDL hamming_ops: 
--------------------------------------------------------------------------------
  31:     count = 0
  32:     if x < 0:
  33:         
  34:         x = abs(x)
- 35:         count = 1
+ 35:         pass
  36:     while x:
  37:         x &= x - 1
  38:         count += 1
  39:     return count
--------------------------------------------------------------------------------
[0.14207 s] survived
   - [#  15] SDL hamming_ops: 
--------------------------------------------------------------------------------
  35:         count = 1
  36:     while x:
  37:         x &= x - 1
  38:         count += 1
- 39:     return count
+ 39:     pass
--------------------------------------------------------------------------------
[0.16161 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
>       assert hamming_distance(0, 0) == 0
E       AssertionError

ts-3-5/test_3-5_0-7_238.py:12: AssertionError
   - [#  16] ZIL hamming_ops: 
--------------------------------------------------------------------------------
  33:         
  34:         x = abs(x)
  35:         count = 1
  36:     while x:
- 37:         x &= x - 1
- 38:         count += 1
+ 37:         break
+ 38:     
  39:     return count
--------------------------------------------------------------------------------
[0.14518 s] killed by ts-3-5/test_3-5_0-7_238.py::test_hamming_distance

def test_hamming_distance():
        assert hamming_distance(0, 0) == 0
>       assert hamming_distance(1, 2) == 2
E       AssertionError

ts-3-5/test_3-5_0-7_238.py:13: AssertionError
[*] Mutation score [12.54831 s]: 87.5%
   - all: 16
   - killed: 12 (75.0%)
   - survived: 2 (12.5%)
   - incompetent: 0 (0.0%)
   - timeout: 2 (12.5%)
