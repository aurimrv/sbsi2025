import os
import sys
import itertools
from heapq import heappush, heappop

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

def test_add_task():
    pq = PriorityQueue()
    pq.add_task("Task1", 1)
    assert pq.pq == [[1, 0, 'Task1']]
    assert pq.mapper == {'Task1': [1, 0, 'Task1']}

    pq.add_task("Task2", 2)
    assert pq.pq == [[1, 0, 'Task1'], [2, 1, 'Task2']]
    assert pq.mapper == {'Task1': [1, 0, 'Task1'], 'Task2': [2, 1, 'Task2']}

def test_remove_task():
    pq = PriorityQueue()
    pq.add_task("Task1", 1)
    pq.remove_task("Task1")
    assert pq.pq == []
    assert pq.mapper == {}

def test_set_priority():
    pq = PriorityQueue()
    pq.add_task("Task1", 1)
    pq.add_task("Task2", 2)
    pq.set_priority("Task1", 3)
    assert pq.pq == [[2, 1, 'Task2'], [3, 2, 'Task1']]
    assert pq.mapper == {'Task1': [3, 2, 'Task1'], 'Task2': [2, 1, 'Task2']}

def test_pop_task():
    pq = PriorityQueue()
    pq.add_task("Task1", 1)
    pq.add_task("Task2", 2)
    assert pq.pop_task() == 'Task1'
    assert pq.pq == [[2, 1, 'Task2']]
    assert pq.mapper == {'Task2': [2, 1, 'Task2']}