import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

def test_add_task():
    pq = PriorityQueue()
    pq.add_task('task1', 3)
    assert len(pq.pq) == 1
    assert 'task1' in pq.mapper

    pq.add_task('task2', 1)
    assert len(pq.pq) == 2
    assert 'task2' in pq.mapper

def test_remove_task():
    pq = PriorityQueue()
    pq.add_task('task1', 3)
    pq.add_task('task2', 1)

    pq.remove_task('task1')
    assert 'task1' not in pq.mapper
    assert pq.pq[0][-1] == '__removed-task__'

def test_set_priority():
    pq = PriorityQueue()
    pq.add_task('task1', 3)
    pq.add_task('task2', 1)

    pq.set_priority('task1', 2)
    assert pq.pq[0][0] == 2

def test_pop_task():
    pq = PriorityQueue()
    pq.add_task('task1', 3)
    pq.add_task('task2', 1)

    task = pq.pop_task()
    assert task == 'task2'
    assert 'task2' not in pq.mapper
    assert len(pq.pq) == 1

    task = pq.pop_task()
    assert task == 'task1'
    assert 'task1' not in pq.mapper
    assert len(pq.pq) == 0

    with pytest.raises(KeyError):
        pq.pop_task()