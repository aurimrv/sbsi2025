import os
import sys
from priority_queue1 import PriorityQueue

def test_add_task():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    assert len(pq.pq) == 1
    assert pq.mapper['task1'][0] == 1

    pq.add_task('task2', 2)
    assert len(pq.pq) == 2
    assert pq.mapper['task2'][0] == 2

def test_remove_task():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    pq.remove_task('task1')
    assert 'task1' not in pq.mapper
    assert len(pq.pq) == 0

def test_set_priority():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    pq.set_priority('task1', 3)
    assert pq.mapper['task1'][0] == 3

def test_pop_task():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    pq.add_task('task2', 2)
    pq.add_task('task3', 3)

    task = pq.pop_task()
    assert task == 'task1'
    assert 'task1' not in pq.mapper

    task = pq.pop_task()
    assert task == 'task2'
    assert 'task2' not in pq.mapper

    task = pq.pop_task()
    assert task == 'task3'
    assert 'task3' not in pq.mapper

    try:
        pq.pop_task()
    except KeyError as e:
        assert str(e) == 'Pop from empty priority queue.'