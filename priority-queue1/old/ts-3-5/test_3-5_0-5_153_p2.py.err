import os
import sys
import itertools
from heapq import heappush, heappop

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

import pytest

@pytest.fixture
def priority_queue():
    return PriorityQueue()

def test_add_task(priority_queue):
    priority_queue.add_task('task1', 1)
    assert priority_queue.pq == [[1, 0, 'task1']]
    assert priority_queue.mapper == {'task1': [1, 0, 'task1']}

def test_remove_task(priority_queue):
    priority_queue.add_task('task1', 1)
    priority_queue.remove_task('task1')
    assert priority_queue.pq == []
    assert priority_queue.mapper == {}

def test_set_priority(priority_queue):
    priority_queue.add_task('task1', 1)
    priority_queue.set_priority('task1', 2)
    assert priority_queue.pq == [[2, 0, 'task1']]
    assert priority_queue.mapper == {'task1': [2, 0, 'task1']}

def test_pop_task(priority_queue):
    priority_queue.add_task('task1', 1)
    task = priority_queue.pop_task()
    assert task == 'task1'
    assert priority_queue.pq == []
    assert priority_queue.mapper == {}

def test_multiple_tasks(priority_queue):
    priority_queue.add_task('task1', 1)
    priority_queue.add_task('task2', 2)
    priority_queue.add_task('task3', 1)
    assert priority_queue.pq == [[1, 0, 'task1'], [2, 1, 'task2'], [1, 2, 'task3']]
    assert priority_queue.mapper == {'task1': [1, 0, 'task1'], 'task2': [2, 1, 'task2'], 'task3': [1, 2, 'task3']}