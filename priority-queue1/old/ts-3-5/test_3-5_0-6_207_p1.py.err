import os
import sys
import itertools
from heapq import heappush, heappop

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

def test_add_task():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    assert pq.pq == [[1, 0, 'task1']]
    assert pq.mapper == {'task1': [1, 0, 'task1']}

    pq.add_task('task2', 3)
    assert pq.pq == [[1, 0, 'task1'], [3, 1, 'task2']]
    assert pq.mapper == {'task1': [1, 0, 'task1'], 'task2': [3, 1, 'task2']}

def test_remove_task():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    pq.add_task('task2', 3)

    pq.remove_task('task1')
    assert pq.pq == [[3, 1, 'task2']]
    assert pq.mapper == {'task2': [3, 1, 'task2']}

def test_set_priority():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    pq.add_task('task2', 3)

    pq.set_priority('task1', 2)
    assert pq.pq == [[2, 0, 'task1'], [3, 1, 'task2']]
    assert pq.mapper == {'task1': [2, 0, 'task1'], 'task2': [3, 1, 'task2']}

    pq.set_priority('task2', 4)
    assert pq.pq == [[2, 0, 'task1'], [4, 1, 'task2']]
    assert pq.mapper == {'task1': [2, 0, 'task1'], 'task2': [4, 1, 'task2']}

def test_pop_task():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    pq.add_task('task2', 3)

    assert pq.pop_task() == 'task1'
    assert pq.pq == [[3, 1, 'task2']]
    assert pq.mapper == {'task2': [3, 1, 'task2']} 