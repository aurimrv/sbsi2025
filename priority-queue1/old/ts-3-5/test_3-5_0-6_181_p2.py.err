import os
import sys
import pytest
from priority_queue1 import PriorityQueue

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

@pytest.fixture
def priority_queue():
    return PriorityQueue()

def test_add_task(priority_queue):
    priority_queue.add_task("Task1", 2)
    assert len(priority_queue.pq) == 1
    assert "Task1" in priority_queue.mapper

    priority_queue.add_task("Task2", 1)
    assert len(priority_queue.pq) == 2
    assert "Task2" in priority_queue.mapper

def test_remove_task(priority_queue):
    priority_queue.add_task("Task1", 2)
    priority_queue.add_task("Task2", 1)

    priority_queue.remove_task("Task1")
    assert len(priority_queue.pq) == 1
    assert "Task1" not in priority_queue.mapper

    priority_queue.remove_task("Task2")
    assert len(priority_queue.pq) == 0
    assert "Task2" not in priority_queue.mapper

def test_set_priority(priority_queue):
    priority_queue.add_task("Task1", 2)
    priority_queue.add_task("Task2", 1)

    priority_queue.set_priority("Task1", 3)
    assert priority_queue.pq[0][0] == 3

    priority_queue.set_priority("Task2", 0)
    assert priority_queue.pq[0][0] == 0

def test_pop_task(priority_queue):
    priority_queue.add_task("Task1", 2)
    priority_queue.add_task("Task2", 1)

    task = priority_queue.pop_task()
    assert task == "Task2"
    assert len(priority_queue.pq) == 1

    task = priority_queue.pop_task()
    assert task == "Task1"
    assert len(priority_queue.pq) == 0

    with pytest.raises(KeyError):
        priority_queue.pop_task()