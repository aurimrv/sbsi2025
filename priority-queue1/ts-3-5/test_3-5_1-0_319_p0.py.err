import os
import sys
import itertools
from heapq import heappush, heappop

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

def test_priority_queue_add_task():
    pq = PriorityQueue()
    pq.add_task("task1", 5)
    assert len(pq.pq) == 1
    assert pq.pq[0][2] == "task1"

    pq.add_task("task2", 3)
    assert len(pq.pq) == 2
    assert pq.pq[1][2] == "task2"

def test_priority_queue_remove_task():
    pq = PriorityQueue()
    pq.add_task("task1")
    pq.add_task("task2", 3)
    
    pq.remove_task("task1")
    assert pq.mapper.get("task1") is None
    assert pq.pq[0][2] == "__removed-task__"

def test_priority_queue_set_priority():
    pq = PriorityQueue()
    pq.add_task("task1")
    pq.add_task("task2", 3)
    
    pq.set_priority("task1", 1)
    assert pq.mapper["task1"][0] == 1

    pq.set_priority("task2", -1)
    assert pq.mapper["task2"][0] == -1

def test_priority_queue_pop_task():
    pq = PriorityQueue()
    pq.add_task("task1")
    pq.add_task("task2", 3)
    
    task = pq.pop_task()
    assert task == "task2"
    assert pq.mapper.get("task2") is None