import os
import sys
import itertools

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

class TestPriorityQueue:

    def setup_method(self):
        self.pq = PriorityQueue()

    def test_add_task(self):
        self.pq.add_task('Task1', 2)
        self.pq.add_task('Task2', 1)
        assert len(self.pq.pq) == 2

    def test_remove_task(self):
        self.pq.add_task('Task1', 2)
        self.pq.remove_task('Task1')
        assert 'Task1' not in self.pq.mapper

    def test_set_priority(self):
        self.pq.add_task('Task1', 3)
        self.pq.set_priority('Task1', 5)
        assert self.pq.mapper['Task1'][0] == 5

    def test_pop_task(self):
        self.pq.add_task('Task1', 3)
        self.pq.add_task('Task2', 1)
        task = self.pq.pop_task()
        assert task == 'Task2'

    def test_pop_task_empty_queue(self):
        self.pq.add_task('Task1', 3)
        self.pq.pop_task()
        try:
            self.pq.pop_task()
        except KeyError as e:
            assert str(e) == 'Pop from empty priority queue.'
