import os
import sys
import itertools
from heapq import heappush, heappop

# Add project directory to sys.path
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

def test_add_task():
    pq = PriorityQueue()
    
    pq.add_task("task1", 0)
    assert len(pq.pq) == 1
    assert "task1" in pq.mapper

    pq.add_task("task2", 2)
    assert len(pq.pq) == 2
    assert "task2" in pq.mapper

def test_remove_task():
    pq = PriorityQueue()
    
    pq.add_task("task1", 0)
    pq.remove_task("task1")
    assert len(pq.pq) == 0
    assert "task1" not in pq.mapper

def test_set_priority():
    pq = PriorityQueue()
    
    pq.add_task("task1", 0)
    pq.set_priority("task1", 2)
    assert pq.mapper["task1"][0] == 2

def test_pop_task():
    pq = PriorityQueue()
    
    pq.add_task("task1", 0)
    pq.add_task("task2", 1)
    
    popped_task = pq.pop_task()
    assert popped_task == "task1"
    assert len(pq.pq) == 1
    assert popped_task not in pq.mapper