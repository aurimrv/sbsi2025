import os
import sys
import itertools
from heapq import heappush, heappop

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

def test_add_task():
    pq = PriorityQueue()
    pq.add_task('task1', 3)
    assert ('task1' in pq.mapper) == True
    assert len(pq.pq) == 1

def test_remove_task():
    pq = PriorityQueue()
    pq.add_task('task2', 2)
    pq.add_task('task3', 1)
    pq.remove_task('task2')
    assert ('task2' not in pq.mapper) == True
    assert len(pq.pq) == 1

def test_set_priority():
    pq = PriorityQueue()
    pq.add_task('task4', 4)
    pq.add_task('task5', 5)
    pq.set_priority('task4', 3)
    assert pq.mapper['task4'][0] == 3
    pq.set_priority('task5')
    assert pq.mapper['task5'][0] == 2

def test_pop_task():
    pq = PriorityQueue()
    pq.add_task('task6', 1)
    pq.add_task('task7', 2)
    task = pq.pop_task()
    assert task == 'task6'
    task = pq.pop_task()
    assert task == 'task7'
    empty = pq.pop_task
    assert callable(empty)