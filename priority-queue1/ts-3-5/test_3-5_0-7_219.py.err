import os
import sys
import itertools
from heapq import heappush, heappop

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

def test_priority_queue_add_task():
    pq = PriorityQueue()
    pq.add_task('Task1', 2)
    assert pq.pq == [[2, 0, 'Task1']]
    assert pq.mapper == {'Task1': [2, 0, 'Task1']}

    pq.add_task('Task2', 1)
    assert pq.pq == [[1, 1, 'Task2'], [2, 0, 'Task1']]
    assert pq.mapper == {'Task1': [2, 0, 'Task1'], 'Task2': [1, 1, 'Task2']}

def test_priority_queue_remove_task():
    pq = PriorityQueue()
    pq.add_task('Task1')
    pq.remove_task('Task1')
    assert pq.pq == []
    assert pq.mapper == {}

def test_priority_queue_set_priority():
    pq = PriorityQueue()
    pq.add_task('Task1', 2)
    pq.set_priority('Task1', 1)
    assert pq.pq == [[1, 1, 'Task1']]
    assert pq.mapper == {'Task1': [1, 1, 'Task1']}

def test_priority_queue_pop_task():
    pq = PriorityQueue()
    pq.add_task('Task1', 2)
    pq.add_task('Task2', 1)
    task = pq.pop_task()
    assert task == 'Task2'
    assert pq.mapper == {'Task1': [2, 0, 'Task1']}
    assert pq.pq == [[2, 0, 'Task1']]

    task = pq.pop_task()
    assert task == 'Task1'
    assert pq.mapper == {}
    assert pq.pq == []

    try:
        pq.pop_task()
    except KeyError as e:
        assert str(e) == 'Pop from empty priority queue.'
