import os
import sys
import itertools
from heapq import heappush, heappop

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

def test_priority_queue():
    pq = PriorityQueue()

    # Test add_task method
    pq.add_task('task1', 1)
    assert pq.pq == [[1, 0, 'task1']]
    assert pq.mapper == {'task1': [1, 0, 'task1']}

    pq.add_task('task2', 0)
    pq.add_task('task3', 2)
    assert pq.pq == [[0, 1, 'task2'], [1, 0, 'task1'], [2, 2, 'task3']]
    assert pq.mapper == {'task1': [1, 0, 'task1'], 'task2': [0, 1, 'task2'], 'task3': [2, 2, 'task3']}

    # Test remove_task method
    pq.remove_task('task2')
    assert pq.pq == [[1, 0, 'task1'], [2, 2, 'task3']]
    assert pq.mapper == {'task1': [1, 0, 'task1'], 'task3': [2, 2, 'task3']}

    # Test set_priority method
    pq.set_priority('task3', 0)
    assert pq.pq == [[0, 3, 'task3'], [1, 0, 'task1']]
    assert pq.mapper == {'task1': [1, 0, 'task1'], 'task3': [0, 3, 'task3']}

    pq.set_priority('task1')
    assert pq.pq == [[0, 3, 'task3'], [-1, 4, 'task1']]
    assert pq.mapper == {'task1': [-1, 4, 'task1'], 'task3': [0, 3, 'task3']}

    # Test pop_task method
    assert pq.pop_task() == 'task3'
    assert pq.pq == [[-1, 4, 'task1']]
    assert pq.mapper == {'task1': [-1, 4, 'task1']}

    assert pq.pop_task() == 'task1'
    assert pq.pq == []
    assert pq.mapper == {}

    try:
        pq.pop_task()
    except KeyError as e:
        assert str(e) == 'Pop from empty priority queue.'

    # Additional test for empty queue
    pq.add_task('task4', 0)
    pq.add_task('task5', 1)
    assert pq.pop_task() == 'task4'
    assert pq.pop_task() == 'task5'
    assert pq.pq == []
    assert pq.mapper == {}

if __name__ == "__main__":
    test_priority_queue()