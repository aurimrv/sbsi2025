import os
import sys
import itertools
from heapq import heappush, heappop

# Add project directory to import the code
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

class TestPriorityQueue:
    
    def test_add_task(self):
        pq = PriorityQueue()
        pq.add_task("task1", 1)
        assert len(pq.pq) == 1
        assert pq.mapper["task1"] == [1, 0, "task1"]
        
        pq.add_task("task2", 2)
        assert len(pq.pq) == 2
        assert pq.mapper["task2"] == [2, 1, "task2"]
        
    def test_remove_task(self):
        pq = PriorityQueue()
        pq.add_task("task1", 1)
        pq.remove_task("task1")
        
        assert "task1" not in pq.mapper
        assert len(pq.pq) == 0
        
    def test_set_priority(self):
        pq = PriorityQueue()
        pq.add_task("task1", 1)
        pq.set_priority("task1", 5)
        
        assert pq.mapper["task1"] == [5, 1, "task1"]
        
    def test_pop_task(self):
        pq = PriorityQueue()
        pq.add_task("task1", 3)
        pq.add_task("task2", 1)
        pq.add_task("task3", 5)
        
        assert pq.pop_task() == "task3"
        assert pq.pop_task() == "task1"
        assert pq.pop_task() == "task2"