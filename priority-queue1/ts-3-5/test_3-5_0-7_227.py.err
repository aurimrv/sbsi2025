import os
import sys
import itertools
from heapq import heappush, heappop

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

def test_priority_queue_initialization():
    pq = PriorityQueue()
    assert pq.pq == []
    assert pq.mapper == {}
    assert pq.REMOVED == '__removed-task__'

def test_add_task():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    assert pq.pq == [[1, 0, 'task1']]
    assert pq.mapper == {'task1': [1, 0, 'task1']}

def test_remove_task():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    pq.remove_task('task1')
    assert pq.mapper == {}
    assert pq.pq == [[0, 1, '__removed-task__']]

def test_set_priority():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    pq.set_priority('task1', 2)
    assert pq.mapper == {'task1': [2, 2, 'task1']}
    assert pq.pq == [[2, 2, 'task1']]

def test_pop_task():
    pq = PriorityQueue()
    pq.add_task('task1', 1)
    task = pq.pop_task()
    assert task == 'task1'
    assert pq.mapper == {}
    assert pq.pq == []

def test_pop_task_empty_queue():
    pq = PriorityQueue()
    try:
        pq.pop_task()
        assert False, "Expected KeyError but pop_task did not raise it for empty queue"
    except KeyError:
        pass