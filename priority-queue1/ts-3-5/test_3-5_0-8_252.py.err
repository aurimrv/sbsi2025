import os
import sys

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

import pytest

@pytest.fixture
def priority_queue():
    return PriorityQueue()

def test_add_task(priority_queue):
    priority_queue.add_task("Task1", 1)
    assert priority_queue.pq == [[1, 0, 'Task1']]
    assert priority_queue.mapper == {'Task1': [1, 0, 'Task1']}

    priority_queue.add_task("Task2", 2)
    assert priority_queue.pq == [[1, 0, 'Task1'], [2, 1, 'Task2']]
    assert priority_queue.mapper == {'Task1': [1, 0, 'Task1'], 'Task2': [2, 1, 'Task2']}

def test_remove_task(priority_queue):
    priority_queue.add_task("Task1", 1)
    priority_queue.add_task("Task2", 2)
    
    priority_queue.remove_task("Task1")
    assert priority_queue.pq == [[2, 1, 'Task2']]
    assert priority_queue.mapper == {'Task2': [2, 1, 'Task2']}

def test_set_priority(priority_queue):
    priority_queue.add_task("Task1", 1)
    priority_queue.add_task("Task2", 2)

    priority_queue.set_priority("Task1", 3)
    assert priority_queue.pq == [[2, 1, 'Task2'], [3, 2, 'Task1']]
    assert priority_queue.mapper == {'Task1': [3, 2, 'Task1'], 'Task2': [2, 1, 'Task2']}

def test_pop_task(priority_queue):
    priority_queue.add_task("Task1", 1)
    priority_queue.add_task("Task2", 2)

    assert priority_queue.pop_task() == 'Task1'
    assert priority_queue.pq == [[2, 1, 'Task2']]
    assert priority_queue.mapper == {'Task2': [2, 1, 'Task2']}

    assert priority_queue.pop_task() == 'Task2'

def test_pop_task_empty_queue(priority_queue):
    with pytest.raises(KeyError):
        priority_queue.pop_task()