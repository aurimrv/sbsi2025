import os
import sys
import itertools
from heapq import heappush, heappop

# Importing the file priority_queue1.py and its modules being tested
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

def test_priority_queue_add_task():
    pq = PriorityQueue()
    
    pq.add_task("task1", 2)
    assert len(pq.pq) == 1
    
    pq.add_task("task2", 1)
    pq.add_task("task3", 3)
    assert len(pq.pq) == 3
    assert pq.pq[0][2] == "task2"

def test_priority_queue_remove_task():
    pq = PriorityQueue()
    
    pq.add_task("task1", 2)
    pq.add_task("task2", 1)
    
    pq.remove_task("task1")
    assert len(pq.pq) == 1
    assert pq.mapper.get("task1") is None

def test_priority_queue_set_priority():
    pq = PriorityQueue()
    
    pq.add_task("task1", 2)
    
    pq.set_priority("task1", 5)
    assert pq.pq[0][0] == 5
    
    pq.set_priority("task1")
    assert pq.pq[0][0] == 4

def test_priority_queue_pop_task():
    pq = PriorityQueue()
    
    pq.add_task("task1", 2)
    pq.add_task("task2", 1)
    pq.add_task("task3", 3)
    
    assert pq.pop_task() == "task2"
    assert pq.pop_task() == "task1"
    assert pq.pop_task() == "task3"
    try:
        pq.pop_task()
    except KeyError:
        assert True