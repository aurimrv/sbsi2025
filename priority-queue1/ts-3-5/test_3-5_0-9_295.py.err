import os
import sys
import itertools
from heapq import heappush, heappop

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from priority_queue1 import PriorityQueue

def test_add_task():
    pq = PriorityQueue()
    pq.add_task("Task1", 1)
    assert len(pq.pq) == 1
    assert pq.mapper["Task1"] == [1, 0, "Task1"]

def test_remove_task():
    pq = PriorityQueue()
    pq.add_task("Task1", 1)
    pq.remove_task("Task1")
    assert "Task1" not in pq.mapper

def test_set_priority():
    pq = PriorityQueue()
    pq.add_task("Task1", 1)
    pq.set_priority("Task1", 3)
    assert pq.mapper["Task1"] == [3, 1, "Task1"]

def test_set_priority_no_priority():
    pq = PriorityQueue()
    pq.add_task("Task1", 1)
    pq.set_priority("Task1")
    assert pq.mapper["Task1"] == [0, 0, "Task1"]

def test_pop_task():
    pq = PriorityQueue()
    pq.add_task("Task1", 1)
    task = pq.pop_task()
    assert task == "Task1"
    assert "Task1" not in pq.mapper