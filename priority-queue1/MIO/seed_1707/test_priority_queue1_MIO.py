# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import priority_queue1 as module_0
import builtins as module_1


def test_case_0():
    priority_queue_0 = module_0.PriorityQueue()
    assert len(module_0.PriorityQueue.pq) == 2
    assert len(module_0.PriorityQueue.mapper) == 2
    assert module_0.PriorityQueue.REMOVED == "__removed-task__"
    none_type_0 = None
    var_0 = priority_queue_0.add_task(none_type_0)
    assert len(module_0.PriorityQueue.pq) == 3
    assert len(module_0.PriorityQueue.mapper) == 3


def test_case_1():
    int_0 = 193
    priority_queue_0 = module_0.PriorityQueue()
    assert module_0.PriorityQueue.REMOVED == "__removed-task__"
    var_0 = priority_queue_0.set_priority(int_0)
    var_1 = priority_queue_0.add_task(priority_queue_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    bool_1 = True
    priority_queue_0 = module_0.PriorityQueue()
    assert module_0.PriorityQueue.REMOVED == "__removed-task__"
    var_0 = priority_queue_0.set_priority(bool_1, bool_1)
    var_0.add_task(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    priority_queue_0 = module_0.PriorityQueue()
    assert module_0.PriorityQueue.REMOVED == "__removed-task__"
    var_0 = priority_queue_0.add_task(object_0)
    priority_queue_1 = module_0.PriorityQueue()
    none_type_0 = None
    var_1 = priority_queue_1.set_priority(object_0)
    var_1.set_priority(object_0, none_type_0)


def test_case_4():
    int_0 = -541
    priority_queue_0 = module_0.PriorityQueue()
    assert module_0.PriorityQueue.REMOVED == "__removed-task__"
    var_0 = priority_queue_0.set_priority(int_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -541
    priority_queue_0 = module_0.PriorityQueue()
    assert module_0.PriorityQueue.REMOVED == "__removed-task__"
    var_0 = priority_queue_0.pop_task()
    var_0.remove_task(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    priority_queue_0 = module_0.PriorityQueue()
    assert module_0.PriorityQueue.REMOVED == "__removed-task__"
    var_0 = priority_queue_0.pop_task()
    var_0.pop_task()


def test_case_7():
    priority_queue_0 = module_0.PriorityQueue()
    assert module_0.PriorityQueue.REMOVED == "__removed-task__"
    var_0 = priority_queue_0.pop_task()


def test_case_8():
    priority_queue_0 = module_0.PriorityQueue()
    assert len(module_0.PriorityQueue.pq) == 3
    assert len(module_0.PriorityQueue.mapper) == 3
    assert module_0.PriorityQueue.REMOVED == "__removed-task__"
    priority_queue_0.pop_task()
    assert len(module_0.PriorityQueue.pq) == 2
    assert len(module_0.PriorityQueue.mapper) == 2


def test_case_9():
    priority_queue_0 = module_0.PriorityQueue()
    assert len(module_0.PriorityQueue.mapper) == 2
    assert module_0.PriorityQueue.REMOVED == "__removed-task__"


@pytest.mark.xfail(strict=True)
def test_case_10():
    priority_queue_0 = module_0.PriorityQueue()
    assert len(module_0.PriorityQueue.mapper) == 2
    assert module_0.PriorityQueue.REMOVED == "__removed-task__"
    priority_queue_0.remove_task(priority_queue_0)
