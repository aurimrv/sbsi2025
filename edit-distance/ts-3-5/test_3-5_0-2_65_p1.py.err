import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from edit_distance import calculate_edit_distance

import pytest

def test_calculate_edit_distance_empty_strings():
    str1 = ""
    str2 = ""
    assert calculate_edit_distance(str1, str2) == []

def test_calculate_edit_distance_same_strings():
    str1 = "abc"
    str2 = "abc"
    assert calculate_edit_distance(str1, str2) == []

def test_calculate_edit_distance_insertion():
    str1 = "abc"
    str2 = "abdc"
    assert calculate_edit_distance(str1, str2) == ['Insert d']

def test_calculate_edit_distance_deletion():
    str1 = "abc"
    str2 = "ac"
    assert calculate_edit_distance(str1, str2) == ['Delete b']

def test_calculate_edit_distance_substitution():
    str1 = "abc"
    str2 = "adc"
    assert calculate_edit_distance(str1, str2) == ['Substitute b']

def test_calculate_edit_distance_complex_case():
    str1 = "kitten"
    str2 = "sitting"
    assert calculate_edit_distance(str1, str2) == ['Substitute k', 'Substitute i', 'Insert s', 'Insert i', 'Insert t', 'Insert t', 'Insert i', 'Insert n']

def test_calculate_edit_distance_long_strings():
    str1 = "This is a long string for testing purposes"
    str2 = "This is a longer string for testing purposes"
    assert calculate_edit_distance(str1, str2) == ['Insert l', 'Insert o', 'Insert n', 'Insert g', 'Insert e', 'Insert r']