import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from edit_distance import calculate_edit_distance

def test_calculate_edit_distance():
    # Test case for empty strings
    assert calculate_edit_distance("", "") == []

    # Test case for identical strings
    assert calculate_edit_distance("abc", "abc") == []

    # Test case for strings with only insertions
    assert calculate_edit_distance("", "abc") == ['Insert a', 'Insert b', 'Insert c']

    # Test case for strings with only deletions
    assert calculate_edit_distance("abc", "") == ['Delete a', 'Delete b', 'Delete c']

    # Test case for strings with substitutions
    assert calculate_edit_distance("kitten", "sitting") == ['Substitute k', 'Substitute i', 'Substitute t']

    # Test case for mixed operations
    assert calculate_edit_distance("Saturday", "Sunday") == ['Substitute a', 'Substitute t', 'Insert n', 'Insert d']

    # Test case for long strings
    assert calculate_edit_distance("This is a long string", "This is another long string") == ['Insert a', 'Insert n', 'Insert o', 'Insert t', 'Insert h', 'Insert e', 'Insert r']

    # Test case for special characters
    assert calculate_edit_distance("123!@#", "123$@!") == ['Substitute !', 'Substitute #', 'Substitute $']

    # Test case for strings with spaces
    assert calculate_edit_distance("hello world", "hello   world") == ['Insert ', 'Insert ', 'Insert ']

    # Test case for strings with leading spaces
    assert calculate_edit_distance("  test", "test") == ['Delete  ', 'Delete  ']

    # Test case for strings with trailing spaces
    assert calculate_edit_distance("test  ", "test") == ['Delete  ', 'Delete  ']