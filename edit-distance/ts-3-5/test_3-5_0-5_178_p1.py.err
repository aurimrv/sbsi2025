import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from edit_distance import calculate_edit_distance

def test_calculate_edit_distance():
    assert calculate_edit_distance("abc", "abc") == []
    assert calculate_edit_distance("abc", "abd") == ['Substitute d']
    assert calculate_edit_distance("kitten", "sitting") == ['Substitute s', 'Substitute i', 'Substitute t', 'Insert g']
    assert calculate_edit_distance("", "") == []
    assert calculate_edit_distance("abc", "") == ['Delete a', 'Delete b', 'Delete c']
    assert calculate_edit_distance("", "xyz") == ['Insert x', 'Insert y', 'Insert z']
    assert calculate_edit_distance("This is a long string for testing", "This is a long string for testing purposes") == ['Insert  p', 'Insert  u', 'Insert  r', 'Insert  p', 'Insert  o', 'Insert  s', 'Insert  e', 'Insert  s']
    assert calculate_edit_distance("abcdef", "azced") == ['Substitute z', 'Substitute z', 'Substitute e', 'Insert d']
    assert calculate_edit_distance("1234", "5678") == ['Substitute 5', 'Substitute 6', 'Substitute 7', 'Insert 7', 'Insert 8']
    assert calculate_edit_distance("abc", "def") == ['Substitute d', 'Substitute e', 'Substitute f']
    assert calculate_edit_distance("hello", "hallo") == ['Substitute a', 'Substitute l']
    assert calculate_edit_distance("programming", "gramming") == ['Delete p', 'Delete r', 'Delete o']
    assert calculate_edit_distance("apple", "ample") == ['Delete p', 'Delete p']
    assert calculate_edit_distance("abcdef", "bcd") == ['Delete a', 'Substitute b', 'Substitute c', 'Substitute d']
    assert calculate_edit_distance("This is a long string for testing purposes", "This is a short string") == ['Delete f', 'Delete o', 'Delete r', 'Delete  ', 'Delete t', 'Delete e', 'Delete s', 'Delete t', 'Delete i', 'Delete n', 'Delete g', 'Delete  ', 'Delete p', 'Delete u', 'Delete r', 'Delete p', 'Delete o', 'Delete s', 'Delete e', 'Delete s']
    assert calculate_edit_distance("same", "same") == []
    assert calculate_edit_distance("abc", "cba") == ['Substitute c', 'Substitute b', 'Substitute a']
    assert calculate_edit_distance("abcdef", "badcfe") == ['Substitute b', 'Substitute a', 'Substitute d', 'Substitute c', 'Substitute f', 'Substitute e']
    assert calculate_edit_distance("!@#$", "$#@!") == ['Substitute $', 'Substitute #', 'Substitute @', 'Substitute !']
    assert calculate_edit_distance("hello world", "world hello") == ['Substitute w', 'Substitute o', 'Substitute r', 'Substitute l', 'Substitute d', 'Substitute h']
    assert calculate_edit_distance("1234", "4321") == ['Substitute 4', 'Substitute 3', 'Substitute 2']
    assert calculate_edit_distance("abc123", "123abc") == ['Substitute 1', 'Substitute 2', 'Substitute 3', 'Substitute a', 'Substitute b', 'Substitute c']
    assert calculate_edit_distance("aaabbbccc", "abcabcabc") == ['Substitute a', 'Substitute b', 'Substitute c', 'Substitute a', 'Substitute b', 'Substitute c', 'Substitute a', 'Substitute b', 'Substitute c']
    assert calculate_edit_distance("a" * 1000, "b" * 1000) == ['Substitute b'] * 1000
    assert calculate_edit_distance("a" * 1000, "") == ['Delete a'] * 1000
    assert calculate_edit_distance("", "b" * 1000) == ['Insert b'] * 1000