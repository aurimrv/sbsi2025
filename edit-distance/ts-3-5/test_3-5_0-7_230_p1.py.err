import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from edit_distance import calculate_edit_distance

def test_calculate_edit_distance_same_strings():
    str1 = "abc"
    str2 = "abc"
    result = calculate_edit_distance(str1, str2)
    assert result == []

def test_calculate_edit_distance_insertion():
    str1 = "abc"
    str2 = "abdc"
    result = calculate_edit_distance(str1, str2)
    assert result == ['Insert d']

def test_calculate_edit_distance_deletion():
    str1 = "abc"
    str2 = "ac"
    result = calculate_edit_distance(str1, str2)
    assert result == ['Delete b']

def test_calculate_edit_distance_substitution():
    str1 = "abc"
    str2 = "axc"
    result = calculate_edit_distance(str1, str2)
    assert result == ['Substitute x']

def test_calculate_edit_distance_complex():
    str1 = "kitten"
    str2 = "sitting"
    result = calculate_edit_distance(str1, str2)
    assert result == ['Substitute s', 'Substitute k', 'Insert s', 'Substitute i', 'Substitute t', 'Substitute t', 'Substitute e']

def test_calculate_edit_distance_empty_strings():
    str1 = ""
    str2 = ""
    result = calculate_edit_distance(str1, str2)
    assert result == []

def test_calculate_edit_distance_one_empty_string():
    str1 = "abc"
    str2 = ""
    result = calculate_edit_distance(str1, str2)
    assert result == ['Delete a', 'Delete b', 'Delete c']

def test_calculate_edit_distance_long_strings():
    str1 = "This is a very long string that needs editing"
    str2 = "This is a very long string that is edited"
    result = calculate_edit_distance(str1, str2)
    assert result == ['Substitute i', 'Substitute s', 'Substitute e', 'Substitute d', 'Substitute e', 'Substitute d']