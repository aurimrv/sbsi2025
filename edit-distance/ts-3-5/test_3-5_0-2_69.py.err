import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from edit_distance import calculate_edit_distance

def test_calculate_edit_distance():
    # Test case for empty strings
    assert calculate_edit_distance("", "") == []

    # Test case for identical strings
    assert calculate_edit_distance("abc", "abc") == []

    # Test case for strings with one character difference
    assert calculate_edit_distance("abc", "abd") == ['Substitute d']

    # Test case for strings with one character addition
    assert calculate_edit_distance("abc", "abcd") == ['Insert d']

    # Test case for strings with one character deletion
    assert calculate_edit_distance("abcd", "abc") == ['Delete d']

    # Test case for strings with multiple differences
    assert calculate_edit_distance("kitten", "sitting") == ['Substitute s', 'Substitute i', 'Substitute t', 'Insert t', 'Substitute e', 'Substitute n']

    # Test case for long strings with multiple operations
    assert calculate_edit_distance("intention", "execution") == ['Substitute e', 'Substitute x', 'Substitute c', 'Substitute u', 'Insert t', 'Substitute i', 'Substitute n']

    # Test case for strings with no common characters
    assert calculate_edit_distance("abc", "def") == ['Substitute d', 'Insert e', 'Insert f']

    # Test case for strings with all characters different
    assert calculate_edit_distance("12345", "abcde") == ['Substitute a', 'Substitute b', 'Substitute c', 'Substitute d', 'Substitute e']

    # Test case for strings with same length but different characters
    assert calculate_edit_distance("apple", "orange") == ['Substitute o', 'Substitute r', 'Substitute a', 'Substitute n', 'Substitute g', 'Substitute e']

    # Test case for strings with one character common
    assert calculate_edit_distance("python", "pycharm") == ['Substitute c', 'Substitute h', 'Substitute a', 'Substitute r', 'Substitute m']

    # Test case for strings with all characters common
    assert calculate_edit_distance("hello", "hello") == []

    # Test case for long strings with no differences
    assert calculate_edit_distance("abcdefghijklmnopqrstuvwxyz", "abcdefghijklmnopqrstuvwxyz") == []

    # Test case for strings with spaces
    assert calculate_edit_distance("hello world", "hello  world") == ['Insert  ']

    # Test case for strings with special characters
    assert calculate_edit_distance("!@#$%", "$#@!") == ['Substitute $', 'Substitute #', 'Substitute @', 'Substitute !']

    # Test case for strings with numbers
    assert calculate_edit_distance("12345", "54321") == ['Substitute 5', 'Substitute 4', 'Substitute 3', 'Substitute 2', 'Substitute 1']

    # Test case for strings with mixed characters
    assert calculate_edit_distance("a1b2c3", "d4e5f6") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 6', 'Substitute 5', 'Substitute 4', 'Substitute 3', 'Substitute 2', 'Substitute 1', 'Substitute b', 'Substitute c', 'Substitute a']

    # Test case for strings with repeated characters
    assert calculate_edit_distance("aaaaa", "bbbbb") == ['Substitute b', 'Substitute b', 'Substitute b', 'Substitute b']

    # Test case for strings with different lengths
    assert calculate_edit_distance("short", "longer") == ['Insert l', 'Insert o', 'Insert n', 'Insert g', 'Insert e', 'Insert r']

    # Test case for strings with one empty string
    assert calculate_edit_distance("abc", "") == ['Delete a', 'Delete b', 'Delete c']

    # Test case for strings with both empty strings
    assert calculate_edit_distance("", "") == []

    # Test case for strings with one empty string and one character
    assert calculate_edit_distance("", "a") == ['Insert a']

    # Test case for strings with one character and one empty string
    assert calculate_edit_distance("a", "") == ['Delete a']

    # Test case for strings with one empty string and multiple characters
    assert calculate_edit_distance("", "abc") == ['Insert a', 'Insert b', 'Insert c']

    # Test case for strings with multiple characters and one empty string
    assert calculate_edit_distance("abc", "") == ['Delete a', 'Delete b', 'Delete c']

    # Test case for strings with special characters and spaces
    assert calculate_edit_distance("hello world!", "hello  world?") == ['Substitute ?', 'Insert ?']

    # Test case for strings with special characters and numbers
    assert calculate_edit_distance("!@#$%", "$#@!123") == ['Insert 1', 'Insert 2', 'Insert 3']

    # Test case for strings with special characters and mixed characters
    assert calculate_edit_distance("!@#$%", "123abc") == ['Substitute 1', 'Substitute 2', 'Substitute 3', 'Substitute a', 'Substitute b', 'Substitute c']

    # Test case for strings with mixed characters and numbers
    assert calculate_edit_distance("abc123", "456def") == ['Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with repeated characters and numbers
    assert calculate_edit_distance("11111", "22222") == ['Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2']

    # Test case for strings with repeated characters and special characters
    assert calculate_edit_distance("%%%%%", "####") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #']

    # Test case for strings with repeated characters and mixed characters
    assert calculate_edit_distance("aaaaa11111", "bbbbb22222") == ['Substitute b', 'Substitute b', 'Substitute b', 'Substitute b', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2']

    # Test case for strings with mixed characters and special characters
    assert calculate_edit_distance("abc!@#", "def$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with mixed characters, special characters, and numbers
    assert calculate_edit_distance("abc123!@#", "def456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, and numbers
    assert calculate_edit_distance("%%%%%11111", "####22222") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2']

    # Test case for strings with mixed characters, repeated characters, and special characters
    assert calculate_edit_distance("abcabc!@#", "defdef$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #', 'Substitute #', 'Substitute #', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute 2', 'Substitute d', 'Substitute e', 'Substitute f']

    # Test case for strings with mixed characters, repeated characters, special characters, and numbers
    assert calculate_edit_distance("abcabc123!@#", "defdef456$%^") == ['Substitute d', 'Substitute e', 'Substitute f', 'Substitute 4', 'Substitute 5', 'Substitute 6', 'Substitute $', 'Substitute %', 'Substitute ^']

    # Test case for strings with repeated characters, special characters, numbers, and mixed characters
    assert calculate_edit_distance("%%%%%11111abc", "####22222def") == ['Substitute #', 'Substitute #