import os
import sys
import edit_distance

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

def test_calculate_edit_distance():
    # Test case for empty strings
    assert edit_distance.calculate_edit_distance("", "") == []

    # Test case for identical strings
    assert edit_distance.calculate_edit_distance("abc", "abc") == []

    # Test case for adding a character
    assert edit_distance.calculate_edit_distance("cat", "cats") == ['Insert s']

    # Test case for deleting a character
    assert edit_distance.calculate_edit_distance("kitten", "kiten") == ['Delete t']

    # Test case for substituting a character
    assert edit_distance.calculate_edit_distance("kitten", "kitten") == []

    # Test case for multiple edits
    assert edit_distance.calculate_edit_distance("intention", "execution") == ['Substitute i', 'Substitute n', 'Substitute t', 'Substitute e', 'Insert x', 'Substitute n', 'Insert c']

    # Test case for long strings
    assert edit_distance.calculate_edit_distance("This is a long string.", "This is a longer string!") == ['Insert e', 'Insert r', 'Delete .', 'Insert !']

    # Add more test cases as needed