[34m[*][0m Start mutation process:
[36m   -[0m targets: quicksort.py
[36m   -[0m tests: ./0-ts
[34m[*][0m 1 tests passed:
[36m   -[0m test_quicksort [0.16220 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] AOR quicksort: 
--------------------------------------------------------------------------------
  19:         if lo < hi:
  20:             
  21:             partition_index = partition(ar, lo, hi)
  22:             
[34m- 23:             sort(ar, lo, partition_index - 1)[0m
[32m+ 23:             sort(ar, lo, partition_index + 1)[0m
  24:             sort(ar, partition_index + 1, hi)
  25:     
  26:     def partition(ar, lo, hi):
  27:         
--------------------------------------------------------------------------------
[0.13518 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d4800ac0>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list

0-ts/test_quicksort.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
quicksort:42: in quicksort
    ???
quicksort:23: in sort
    ???
quicksort:21: in sort
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

ar = [2, 3, 3, 4, 4, 4, ...], lo = 0, hi = 16

>   ???
E   IndexError: list index out of range

quicksort:28: IndexError
[36m   -[0m [#   2] AOR quicksort: 
--------------------------------------------------------------------------------
  20:             
  21:             partition_index = partition(ar, lo, hi)
  22:             
  23:             sort(ar, lo, partition_index - 1)
[34m- 24:             sort(ar, partition_index + 1, hi)[0m
[32m+ 24:             sort(ar, partition_index - 1, hi)[0m
  25:     
  26:     def partition(ar, lo, hi):
  27:         
  28:         pivot = ar[hi]
--------------------------------------------------------------------------------
[0.12714 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d47d3130>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list

0-ts/test_quicksort.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
quicksort:42: in quicksort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:23: in sort
    ???
quicksort:24: in sort
    ???
quicksort:24: in sort
    ???
E   RecursionError: maximum recursion depth exceeded in comparison
!!! Recursion detected (same locals & position)
[36m   -[0m [#   3] AOR quicksort: 
--------------------------------------------------------------------------------
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
  39:         
  40:         return i
  41:     
[34m- 42:     sort(ar, 0, len(ar) - 1)[0m
[32m+ 42:     sort(ar, 0, len(ar) + 1)[0m
  43:     
  44:     return ar
--------------------------------------------------------------------------------
[0.12484 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d47fa080>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list

0-ts/test_quicksort.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
quicksort:42: in quicksort
    ???
quicksort:21: in sort
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

ar = [2, 3, 3, 4, 4, 4, ...], lo = 0, hi = 17

>   ???
E   IndexError: list index out of range

quicksort:28: IndexError
[36m   -[0m [#   4] ASR quicksort: 
--------------------------------------------------------------------------------
  32:         for j in range(lo, hi):
  33:             
  34:             if ar[j] <= pivot:
  35:                 (ar[i], ar[j]) = (ar[j], ar[i])
[34m- 36:                 i += 1[0m
[32m+ 36:                 i -= 1[0m
  37:         
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
  39:         
  40:         return i
--------------------------------------------------------------------------------
[0.10182 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d479edd0>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list

0-ts/test_quicksort.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
quicksort:42: in quicksort
    ???
quicksort:24: in sort
    ???
quicksort:21: in sort
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

ar = [4, 4, 3, 3, 2, 4, ...], lo = -14, hi = 15

>   ???
E   IndexError: list index out of range

quicksort:35: IndexError
[36m   -[0m [#   5] COI quicksort: 
--------------------------------------------------------------------------------
  15:         The input list sorted.
  16:     '''
  17:     def sort(ar, lo, hi):
  18:         
[34m- 19:         if lo < hi:[0m
[32m+ 19:         if not (lo < hi):[0m
  20:             
  21:             partition_index = partition(ar, lo, hi)
  22:             
  23:             sort(ar, lo, partition_index - 1)
--------------------------------------------------------------------------------
[0.08366 s] [31msurvived[0m
[36m   -[0m [#   6] COI quicksort: 
--------------------------------------------------------------------------------
  30:         
  31:         i = lo
  32:         for j in range(lo, hi):
  33:             
[34m- 34:             if ar[j] <= pivot:[0m
[32m+ 34:             if not (ar[j] <= pivot):[0m
  35:                 (ar[i], ar[j]) = (ar[j], ar[i])
  36:                 i += 1
  37:         
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
--------------------------------------------------------------------------------
[0.12138 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d4660eb0>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list
E       AssertionError

0-ts/test_quicksort.py:10: AssertionError
[36m   -[0m [#   7] CRP quicksort: 
--------------------------------------------------------------------------------
  19:         if lo < hi:
  20:             
  21:             partition_index = partition(ar, lo, hi)
  22:             
[34m- 23:             sort(ar, lo, partition_index - 1)[0m
[32m+ 23:             sort(ar, lo, partition_index - 2)[0m
  24:             sort(ar, partition_index + 1, hi)
  25:     
  26:     def partition(ar, lo, hi):
  27:         
--------------------------------------------------------------------------------
[0.07802 s] [31msurvived[0m
[36m   -[0m [#   8] CRP quicksort: 
--------------------------------------------------------------------------------
  20:             
  21:             partition_index = partition(ar, lo, hi)
  22:             
  23:             sort(ar, lo, partition_index - 1)
[34m- 24:             sort(ar, partition_index + 1, hi)[0m
[32m+ 24:             sort(ar, partition_index + 2, hi)[0m
  25:     
  26:     def partition(ar, lo, hi):
  27:         
  28:         pivot = ar[hi]
--------------------------------------------------------------------------------
[0.10792 s] [31msurvived[0m
[36m   -[0m [#   9] CRP quicksort: 
--------------------------------------------------------------------------------
  32:         for j in range(lo, hi):
  33:             
  34:             if ar[j] <= pivot:
  35:                 (ar[i], ar[j]) = (ar[j], ar[i])
[34m- 36:                 i += 1[0m
[32m+ 36:                 i += 2[0m
  37:         
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
  39:         
  40:         return i
--------------------------------------------------------------------------------
[0.13173 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d4705d20>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list

0-ts/test_quicksort.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
quicksort:42: in quicksort
    ???
quicksort:21: in sort
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

ar = [2, 3, 4, 7, 9, 20, ...], lo = 0, hi = 15

>   ???
E   IndexError: list index out of range

quicksort:35: IndexError
[36m   -[0m [#  10] CRP quicksort: 
--------------------------------------------------------------------------------
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
  39:         
  40:         return i
  41:     
[34m- 42:     sort(ar, 0, len(ar) - 1)[0m
[32m+ 42:     sort(ar, 1, len(ar) - 1)[0m
  43:     
  44:     return ar
--------------------------------------------------------------------------------
[0.07745 s] [31msurvived[0m
[36m   -[0m [#  11] CRP quicksort: 
--------------------------------------------------------------------------------
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
  39:         
  40:         return i
  41:     
[34m- 42:     sort(ar, 0, len(ar) - 1)[0m
[32m+ 42:     sort(ar, 0, len(ar) - 2)[0m
  43:     
  44:     return ar
--------------------------------------------------------------------------------
[0.10145 s] [31msurvived[0m
[36m   -[0m [#  12] OIL quicksort: 
--------------------------------------------------------------------------------
  33:             
  34:             if ar[j] <= pivot:
  35:                 (ar[i], ar[j]) = (ar[j], ar[i])
  36:                 i += 1
[34m- 37:         [0m
[32m+ 37:             break[0m
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
  39:         
  40:         return i
  41:     
--------------------------------------------------------------------------------
[0.11990 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d46601c0>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list
E       AssertionError

0-ts/test_quicksort.py:10: AssertionError
[36m   -[0m [#  13] RIL quicksort: 
--------------------------------------------------------------------------------
  28:         pivot = ar[hi]
  29:         
  30:         
  31:         i = lo
[34m- 32:         for j in range(lo, hi):[0m
[32m+ 32:         for j in reversed(range(lo, hi)):[0m
  33:             
  34:             if ar[j] <= pivot:
  35:                 (ar[i], ar[j]) = (ar[j], ar[i])
  36:                 i += 1
--------------------------------------------------------------------------------
[0.07854 s] [31msurvived[0m
[36m   -[0m [#  14] ROR quicksort: 
--------------------------------------------------------------------------------
  15:         The input list sorted.
  16:     '''
  17:     def sort(ar, lo, hi):
  18:         
[34m- 19:         if lo < hi:[0m
[32m+ 19:         if lo > hi:[0m
  20:             
  21:             partition_index = partition(ar, lo, hi)
  22:             
  23:             sort(ar, lo, partition_index - 1)
--------------------------------------------------------------------------------
[0.07744 s] [31msurvived[0m
[36m   -[0m [#  15] ROR quicksort: 
--------------------------------------------------------------------------------
  15:         The input list sorted.
  16:     '''
  17:     def sort(ar, lo, hi):
  18:         
[34m- 19:         if lo < hi:[0m
[32m+ 19:         if lo <= hi:[0m
  20:             
  21:             partition_index = partition(ar, lo, hi)
  22:             
  23:             sort(ar, lo, partition_index - 1)
--------------------------------------------------------------------------------
[0.09936 s] [31msurvived[0m
[36m   -[0m [#  16] ROR quicksort: 
--------------------------------------------------------------------------------
  30:         
  31:         i = lo
  32:         for j in range(lo, hi):
  33:             
[34m- 34:             if ar[j] <= pivot:[0m
[32m+ 34:             if ar[j] >= pivot:[0m
  35:                 (ar[i], ar[j]) = (ar[j], ar[i])
  36:                 i += 1
  37:         
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
--------------------------------------------------------------------------------
[0.11985 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d47f9f90>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list
E       AssertionError

0-ts/test_quicksort.py:10: AssertionError
[36m   -[0m [#  17] ROR quicksort: 
--------------------------------------------------------------------------------
  30:         
  31:         i = lo
  32:         for j in range(lo, hi):
  33:             
[34m- 34:             if ar[j] <= pivot:[0m
[32m+ 34:             if ar[j] < pivot:[0m
  35:                 (ar[i], ar[j]) = (ar[j], ar[i])
  36:                 i += 1
  37:         
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
--------------------------------------------------------------------------------
[0.10221 s] [31msurvived[0m
[36m   -[0m [#  18] SDL quicksort: 
--------------------------------------------------------------------------------
  17:     def sort(ar, lo, hi):
  18:         
  19:         if lo < hi:
  20:             
[34m- 21:             partition_index = partition(ar, lo, hi)[0m
[32m+ 21:             pass[0m
  22:             
  23:             sort(ar, lo, partition_index - 1)
  24:             sort(ar, partition_index + 1, hi)
  25:     
--------------------------------------------------------------------------------
[0.13199 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d47d3a60>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list

0-ts/test_quicksort.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
quicksort:42: in quicksort
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

ar = [2, 3, 3, 4, 4, 4, ...], lo = 0, hi = 15

>   ???
E   NameError: name 'partition_index' is not defined

quicksort:23: NameError
[36m   -[0m [#  19] SDL quicksort: 
--------------------------------------------------------------------------------
  19:         if lo < hi:
  20:             
  21:             partition_index = partition(ar, lo, hi)
  22:             
[34m- 23:             sort(ar, lo, partition_index - 1)[0m
[32m+ 23:             pass[0m
  24:             sort(ar, partition_index + 1, hi)
  25:     
  26:     def partition(ar, lo, hi):
  27:         
--------------------------------------------------------------------------------
[0.10813 s] [31msurvived[0m
[36m   -[0m [#  20] SDL quicksort: 
--------------------------------------------------------------------------------
  20:             
  21:             partition_index = partition(ar, lo, hi)
  22:             
  23:             sort(ar, lo, partition_index - 1)
[34m- 24:             sort(ar, partition_index + 1, hi)[0m
[32m+ 24:             pass[0m
  25:     
  26:     def partition(ar, lo, hi):
  27:         
  28:         pivot = ar[hi]
--------------------------------------------------------------------------------
[0.09935 s] [31msurvived[0m
[36m   -[0m [#  21] SDL quicksort: 
--------------------------------------------------------------------------------
  24:             sort(ar, partition_index + 1, hi)
  25:     
  26:     def partition(ar, lo, hi):
  27:         
[34m- 28:         pivot = ar[hi][0m
[32m+ 28:         pass[0m
  29:         
  30:         
  31:         i = lo
  32:         for j in range(lo, hi):
--------------------------------------------------------------------------------
[0.09793 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d4705e40>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list

0-ts/test_quicksort.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
quicksort:42: in quicksort
    ???
quicksort:21: in sort
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

ar = [2, 3, 3, 4, 4, 4, ...], lo = 0, hi = 15

>   ???
E   NameError: name 'pivot' is not defined

quicksort:34: NameError
[36m   -[0m [#  22] SDL quicksort: 
--------------------------------------------------------------------------------
  27:         
  28:         pivot = ar[hi]
  29:         
  30:         
[34m- 31:         i = lo[0m
[32m+ 31:         pass[0m
  32:         for j in range(lo, hi):
  33:             
  34:             if ar[j] <= pivot:
  35:                 (ar[i], ar[j]) = (ar[j], ar[i])
--------------------------------------------------------------------------------
[0.13248 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d46601c0>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list

0-ts/test_quicksort.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
quicksort:42: in quicksort
    ???
quicksort:21: in sort
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

ar = [2, 3, 3, 4, 4, 4, ...], lo = 0, hi = 15

>   ???
E   UnboundLocalError: local variable 'i' referenced before assignment

quicksort:35: UnboundLocalError
[36m   -[0m [#  23] SDL quicksort: 
--------------------------------------------------------------------------------
  31:         i = lo
  32:         for j in range(lo, hi):
  33:             
  34:             if ar[j] <= pivot:
[34m- 35:                 (ar[i], ar[j]) = (ar[j], ar[i])[0m
[32m+ 35:                 pass[0m
  36:                 i += 1
  37:         
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
  39:         
--------------------------------------------------------------------------------
[0.10095 s] [31msurvived[0m
[36m   -[0m [#  24] SDL quicksort: 
--------------------------------------------------------------------------------
  34:             if ar[j] <= pivot:
  35:                 (ar[i], ar[j]) = (ar[j], ar[i])
  36:                 i += 1
  37:         
[34m- 38:         (ar[i], ar[hi]) = (ar[hi], ar[i])[0m
[32m+ 38:         pass[0m
  39:         
  40:         return i
  41:     
  42:     sort(ar, 0, len(ar) - 1)
--------------------------------------------------------------------------------
[0.10220 s] [31msurvived[0m
[36m   -[0m [#  25] SDL quicksort: 
--------------------------------------------------------------------------------
  36:                 i += 1
  37:         
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
  39:         
[34m- 40:         return i[0m
[32m+ 40:         pass[0m
  41:     
  42:     sort(ar, 0, len(ar) - 1)
  43:     
  44:     return ar
--------------------------------------------------------------------------------
[0.09923 s] [36mincompetent[0m

TypeError: quicksort:23: TypeError: unsupported operand type(s) for -: 'NoneType' and 'int'

[36m   -[0m [#  26] SDL quicksort: 
--------------------------------------------------------------------------------
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
  39:         
  40:         return i
  41:     
[34m- 42:     sort(ar, 0, len(ar) - 1)[0m
[32m+ 42:     pass[0m
  43:     
  44:     return ar
--------------------------------------------------------------------------------
[0.07852 s] [31msurvived[0m
[36m   -[0m [#  27] SDL quicksort: 
--------------------------------------------------------------------------------
  40:         return i
  41:     
  42:     sort(ar, 0, len(ar) - 1)
  43:     
[34m- 44:     return ar[0m
[32m+ 44:     pass[0m
--------------------------------------------------------------------------------
[0.14871 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d45d2dd0>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list
E       AssertionError

0-ts/test_quicksort.py:10: AssertionError
[36m   -[0m [#  28] ZIL quicksort: 
--------------------------------------------------------------------------------
  30:         
  31:         i = lo
  32:         for j in range(lo, hi):
  33:             
[34m- 34:             if ar[j] <= pivot:[0m
[34m- 35:                 (ar[i], ar[j]) = (ar[j], ar[i])[0m
[34m- 36:                 i += 1[0m
[32m+ 34:             break[0m
[32m+ 35:         [0m
[32m+ 36:         [0m
  37:         
  38:         (ar[i], ar[hi]) = (ar[hi], ar[i])
  39:         
  40:         return i
--------------------------------------------------------------------------------
[0.14651 s] [32mkilled[0m by 0-ts/test_quicksort.py::TestQuickSort::test_quicksort

self = <test_quicksort.TestQuickSort object at 0x7f90d45d0f70>

    def test_quicksort(self):
>       assert quicksort(self.random_list) == self.sorted_list
E       AssertionError

0-ts/test_quicksort.py:10: AssertionError
[34m[*][0m Mutation score [4.41084 s]: [1m[34m48.1%[0m
[36m   -[0m all: 28
[36m   -[0m killed: 13 (46.4%)
[36m   -[0m survived: 14 (50.0%)
[36m   -[0m incompetent: 1 (3.6%)
[36m   -[0m timeout: 0 (0.0%)
