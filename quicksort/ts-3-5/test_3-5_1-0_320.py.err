import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)
sys.setrecursionlimit(15000)

from quicksort import quicksort

def test_quicksort():
    # Test case 1: Test sorting an already sorted list
    ar = [1, 2, 3, 4, 5]
    assert quicksort(ar) == [1, 2, 3, 4, 5]

    # Test case 2: Test sorting a reverse sorted list
    ar = [5, 4, 3, 2, 1]
    assert quicksort(ar) == [1, 2, 3, 4, 5]

    # Test case 3: Test sorting a list with duplicate elements
    ar = [5, 3, 2, 5, 1, 2]
    assert quicksort(ar) == [1, 2, 2, 3, 5, 5]

def test_sort():
    # Test case 1: Test sorting a list with only one element
    ar = [1]
    quicksort.sort(ar, 0, 0)
    assert ar == [1]

    # Test case 2: Test sorting a list with multiple elements
    ar = [3, 1, 4, 1, 5, 9, 2, 6, 5, 4]
    quicksort.sort(ar, 0, len(ar) - 1)
    assert ar == [1, 1, 2, 3, 4, 4, 5, 5, 6, 9]

def test_partition():
    # Test case 1: Test partitioning a list with elements less than pivot
    ar = [3, 1, 4, 1, 5]
    assert quicksort.partition(ar, 0, len(ar) - 1) == 2
    assert ar == [1, 1, 3, 4, 5]

    # Test case 2: Test partitioning a list with elements greater than pivot
    ar = [10, 30, 20, 40, 50]
    assert quicksort.partition(ar, 0, len(ar) - 1) == 4
    assert ar == [10, 20, 30, 40, 50]