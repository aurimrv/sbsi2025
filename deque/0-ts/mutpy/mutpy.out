/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_deque[2]._container.head.data is 5
/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:29: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_deque[2]._container.tail.data is 1
/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:35: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_deque[0]._container.tail.data is 3
/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:41: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_deque[1]._container.tail.data is 2
/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:47: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_deque[1]._container.tail.prev.data is 3
/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:53: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_deque[2]._container._length is 6
/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:59: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_deque[0]._container._length is 1
/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:65: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_deque[1]._container.head.data is 6
/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:98: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_deque[1]._container._length is 0
/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:123: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert poped_data is 9
/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:149: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_deque[1]._container._length is 0
/home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:176: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert poplefted_data is 9
[34m[*][0m Start mutation process:
[36m   -[0m targets: deque.py
[36m   -[0m tests: ./0-ts
[34m[*][0m 34 tests passed:
[36m   -[0m test_deque [0.20700 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] CDI deque: 
--------------------------------------------------------------------------------
  20:     size(): returns the count of items in the queue (returns 0 if the queue
  21:     is empty).
  22:     '''
  23:     
[34m- 24:     def __init__(self, data=None):[0m
[34m- 25:         '''Initialize deque.'''[0m
[34m- 26:         self._container = DoubleLinkedList(data)[0m
[34m- 27:     [0m
[32m+ 24:     @classmethod[0m
[32m+ 25:     def __init__(self, data=None):[0m
[32m+ 26:         '''Initialize deque.'''[0m
[32m+ 27:         self._container = DoubleLinkedList(data)[0m
  28:     def append(self, val):
  29:         '''Add value to the end of the deque.'''
  30:         self._container.append(val)
  31:     
--------------------------------------------------------------------------------
[0.13652 s] [32mkilled[0m by 0-ts/test_deque.py::test_append_adds_data_to_tail_and_points_to_prev

test_deque = (<deque.Deque object at 0x7f84779fc2b0>, <deque.Deque object at 0x7f84779fdf90>, <deque.Deque object at 0x7f84779fc700>)

    def test_append_adds_data_to_tail_and_points_to_prev(test_deque):
        """Test append adds to the tail and point to prev tail."""
        test_deque[1].append(2)
>       assert test_deque[1]._container.tail.prev.data is 3
E       AssertionError

0-ts/test_deque.py:47: AssertionError
[36m   -[0m [#   2] CDI deque: 
--------------------------------------------------------------------------------
  24:     def __init__(self, data=None):
  25:         '''Initialize deque.'''
  26:         self._container = DoubleLinkedList(data)
  27:     
[34m- 28:     def append(self, val):[0m
[34m- 29:         '''Add value to the end of the deque.'''[0m
[34m- 30:         self._container.append(val)[0m
[34m- 31:     [0m
[32m+ 28:     @classmethod[0m
[32m+ 29:     def append(self, val):[0m
[32m+ 30:         '''Add value to the end of the deque.'''[0m
[32m+ 31:         self._container.append(val)[0m
  32:     def appendleft(self, val):
  33:         '''Add a value to the front of the deque.'''
  34:         self._container.push(val)
  35:     
--------------------------------------------------------------------------------
[0.13094 s] [32mkilled[0m by 0-ts/test_deque.py::test_append_adds_data

test_deque = (<deque.Deque object at 0x7f8477b66c50>, <deque.Deque object at 0x7f8477b64a60>, <deque.Deque object at 0x7f8477b65f00>)

    def test_append_adds_data(test_deque):
        """Test append adds data to the tail."""
>       test_deque[0].append(3)

0-ts/test_deque.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'deque.Deque'>, val = 3

>   ???
E   AttributeError: type object 'Deque' has no attribute '_container'

deque:31: AttributeError
[36m   -[0m [#   3] CDI deque: 
--------------------------------------------------------------------------------
  28:     def append(self, val):
  29:         '''Add value to the end of the deque.'''
  30:         self._container.append(val)
  31:     
[34m- 32:     def appendleft(self, val):[0m
[34m- 33:         '''Add a value to the front of the deque.'''[0m
[34m- 34:         self._container.push(val)[0m
[34m- 35:     [0m
[32m+ 32:     @classmethod[0m
[32m+ 33:     def appendleft(self, val):[0m
[32m+ 34:         '''Add a value to the front of the deque.'''[0m
[32m+ 35:         self._container.push(val)[0m
  36:     def pop(self):
  37:         '''Remove a value from the end of the deque and returns it.'''
  38:         return self._container.shift()
  39:     
--------------------------------------------------------------------------------
[0.12864 s] [32mkilled[0m by 0-ts/test_deque.py::test_appendleft_increases_length

test_deque = (<deque.Deque object at 0x7f8477b66f80>, <deque.Deque object at 0x7f8477b67340>, <deque.Deque object at 0x7f8477b679a0>)

    def test_appendleft_increases_length(test_deque):
        """Test appendleft increases length."""
>       test_deque[0].appendleft(2)

0-ts/test_deque.py:58: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'deque.Deque'>, val = 2

>   ???
E   AttributeError: type object 'Deque' has no attribute '_container'

deque:35: AttributeError
[36m   -[0m [#   4] CDI deque: 
--------------------------------------------------------------------------------
  32:     def appendleft(self, val):
  33:         '''Add a value to the front of the deque.'''
  34:         self._container.push(val)
  35:     
[34m- 36:     def pop(self):[0m
[34m- 37:         '''Remove a value from the end of the deque and returns it.'''[0m
[34m- 38:         return self._container.shift()[0m
[34m- 39:     [0m
[32m+ 36:     @classmethod[0m
[32m+ 37:     def pop(self):[0m
[32m+ 38:         '''Remove a value from the end of the deque and returns it.'''[0m
[32m+ 39:         return self._container.shift()[0m
  40:     def popleft(self):
  41:         '''Remove a value from the front of the deque and returns it.'''
  42:         return self._container.pop()
  43:     
--------------------------------------------------------------------------------
[0.13947 s] [32mkilled[0m by 0-ts/test_deque.py::test_pop_reduces_length

test_deque = (<deque.Deque object at 0x7f84779fcdf0>, <deque.Deque object at 0x7f84779fca60>, <deque.Deque object at 0x7f84779fd090>)

    def test_pop_reduces_length(test_deque):
        """Test pop reduces lists."""
        old_length = test_deque[2]._container._length
>       test_deque[2].pop()

0-ts/test_deque.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'deque.Deque'>

>   ???
E   AttributeError: type object 'Deque' has no attribute '_container'

deque:39: AttributeError
[36m   -[0m [#   5] CDI deque: 
--------------------------------------------------------------------------------
  36:     def pop(self):
  37:         '''Remove a value from the end of the deque and returns it.'''
  38:         return self._container.shift()
  39:     
[34m- 40:     def popleft(self):[0m
[34m- 41:         '''Remove a value from the front of the deque and returns it.'''[0m
[34m- 42:         return self._container.pop()[0m
[34m- 43:     [0m
[32m+ 40:     @classmethod[0m
[32m+ 41:     def popleft(self):[0m
[32m+ 42:         '''Remove a value from the front of the deque and returns it.'''[0m
[32m+ 43:         return self._container.pop()[0m
  44:     def peek(self):
  45:         '''Return the next value that would be returned by pop.'''
  46:         if self._container.head:
  47:             return self._container.head.data
--------------------------------------------------------------------------------
[0.14378 s] [32mkilled[0m by 0-ts/test_deque.py::test_popleft_reduces_length

test_deque = (<deque.Deque object at 0x7f84779fe680>, <deque.Deque object at 0x7f84779ffd30>, <deque.Deque object at 0x7f84779ff610>)

    def test_popleft_reduces_length(test_deque):
        """Test popleft reduces lists."""
        old_length = test_deque[2]._container._length
>       test_deque[2].popleft()

0-ts/test_deque.py:129: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'deque.Deque'>

>   ???
E   AttributeError: type object 'Deque' has no attribute '_container'

deque:43: AttributeError
[36m   -[0m [#   6] CDI deque: 
--------------------------------------------------------------------------------
  40:     def popleft(self):
  41:         '''Remove a value from the front of the deque and returns it.'''
  42:         return self._container.pop()
  43:     
[34m- 44:     def peek(self):[0m
[34m- 45:         '''Return the next value that would be returned by pop.'''[0m
[34m- 46:         if self._container.head:[0m
[34m- 47:             return self._container.head.data[0m
[34m- 48:         return None[0m
[34m- 49:     [0m
[32m+ 44:     @classmethod[0m
[32m+ 45:     def peek(self):[0m
[32m+ 46:         '''Return the next value that would be returned by pop.'''[0m
[32m+ 47:         if self._container.head:[0m
[32m+ 48:             return self._container.head.data[0m
[32m+ 49:         return None[0m
  50:     def peekleft(self):
  51:         '''Return the next value from the front of the deque.'''
  52:         if self._container.tail:
  53:             return self._container.tail.data
--------------------------------------------------------------------------------
[0.14429 s] [32mkilled[0m by 0-ts/test_deque.py::test_peek

test_deque = (<deque.Deque object at 0x7f8477a8a230>, <deque.Deque object at 0x7f8477a8b820>, <deque.Deque object at 0x7f8477a8aaa0>)

    def test_peek(test_deque):
        """Test peek method."""
>       peek = test_deque[2].peek()

0-ts/test_deque.py:205: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'deque.Deque'>

>   ???
E   AttributeError: type object 'Deque' has no attribute '_container'

deque:47: AttributeError
[36m   -[0m [#   7] CDI deque: 
--------------------------------------------------------------------------------
  46:         if self._container.head:
  47:             return self._container.head.data
  48:         return None
  49:     
[34m- 50:     def peekleft(self):[0m
[34m- 51:         '''Return the next value from the front of the deque.'''[0m
[34m- 52:         if self._container.tail:[0m
[34m- 53:             return self._container.tail.data[0m
[34m- 54:         return None[0m
[34m- 55:     [0m
[32m+ 50:     @classmethod[0m
[32m+ 51:     def peekleft(self):[0m
[32m+ 52:         '''Return the next value from the front of the deque.'''[0m
[32m+ 53:         if self._container.tail:[0m
[32m+ 54:             return self._container.tail.data[0m
[32m+ 55:         return None[0m
  56:     def size(self):
  57:         '''Return the count of items in the queue.'''
  58:         return self._container._length
--------------------------------------------------------------------------------
[0.14238 s] [32mkilled[0m by 0-ts/test_deque.py::test_peekleft

test_deque = (<deque.Deque object at 0x7f8477b67f70>, <deque.Deque object at 0x7f8477b66bf0>, <deque.Deque object at 0x7f8477a44850>)

    def test_peekleft(test_deque):
        """Test peekleft method."""
>       peekleft = test_deque[2].peekleft()

0-ts/test_deque.py:224: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'deque.Deque'>

>   ???
E   AttributeError: type object 'Deque' has no attribute '_container'

deque:53: AttributeError
[36m   -[0m [#   8] CDI deque: 
--------------------------------------------------------------------------------
  52:         if self._container.tail:
  53:             return self._container.tail.data
  54:         return None
  55:     
[34m- 56:     def size(self):[0m
[34m- 57:         '''Return the count of items in the queue.'''[0m
[34m- 58:         return self._container._length[0m
[32m+ 56:     @classmethod[0m
[32m+ 57:     def size(self):[0m
[32m+ 58:         '''Return the count of items in the queue.'''[0m
[32m+ 59:         return self._container._length[0m
--------------------------------------------------------------------------------
[0.14103 s] [32mkilled[0m by 0-ts/test_deque.py::test_size_method_append

test_deque = (<deque.Deque object at 0x7f8477b689d0>, <deque.Deque object at 0x7f8477b68cd0>, <deque.Deque object at 0x7f8477b68430>)

    def test_size_method_append(test_deque):
        """Append and test size."""
        test_deque[0].append(2)
>       assert test_deque[0].size() == 1

0-ts/test_deque.py:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'deque.Deque'>

>   ???
E   AttributeError: type object 'Deque' has no attribute '_container'

deque:59: AttributeError
[36m   -[0m [#   9] COI deque: 
--------------------------------------------------------------------------------
  42:         return self._container.pop()
  43:     
  44:     def peek(self):
  45:         '''Return the next value that would be returned by pop.'''
[34m- 46:         if self._container.head:[0m
[32m+ 46:         if not (self._container.head):[0m
  47:             return self._container.head.data
  48:         return None
  49:     
  50:     def peekleft(self):
--------------------------------------------------------------------------------
[0.15017 s] [32mkilled[0m by 0-ts/test_deque.py::test_peek

test_deque = (<deque.Deque object at 0x7f8477a89180>, <deque.Deque object at 0x7f8477a89930>, <deque.Deque object at 0x7f8477b666e0>)

    def test_peek(test_deque):
        """Test peek method."""
        peek = test_deque[2].peek()
>       assert peek == test_deque[2]._container.head.data
E       AssertionError

0-ts/test_deque.py:206: AssertionError
[36m   -[0m [#  10] COI deque: 
--------------------------------------------------------------------------------
  48:         return None
  49:     
  50:     def peekleft(self):
  51:         '''Return the next value from the front of the deque.'''
[34m- 52:         if self._container.tail:[0m
[32m+ 52:         if not (self._container.tail):[0m
  53:             return self._container.tail.data
  54:         return None
  55:     
  56:     def size(self):
--------------------------------------------------------------------------------
[0.14510 s] [32mkilled[0m by 0-ts/test_deque.py::test_peekleft

test_deque = (<deque.Deque object at 0x7f84779fc730>, <deque.Deque object at 0x7f84779fcbe0>, <deque.Deque object at 0x7f84779fe4a0>)

    def test_peekleft(test_deque):
        """Test peekleft method."""
        peekleft = test_deque[2].peekleft()
>       assert peekleft == test_deque[2]._container.tail.data
E       AssertionError

0-ts/test_deque.py:225: AssertionError
[36m   -[0m [#  11] SDI deque: 
--------------------------------------------------------------------------------
  20:     size(): returns the count of items in the queue (returns 0 if the queue
  21:     is empty).
  22:     '''
  23:     
[34m- 24:     def __init__(self, data=None):[0m
[34m- 25:         '''Initialize deque.'''[0m
[34m- 26:         self._container = DoubleLinkedList(data)[0m
[34m- 27:     [0m
[32m+ 24:     @staticmethod[0m
[32m+ 25:     def __init__(self, data=None):[0m
[32m+ 26:         '''Initialize deque.'''[0m
[32m+ 27:         self._container = DoubleLinkedList(data)[0m
  28:     def append(self, val):
  29:         '''Add value to the end of the deque.'''
  30:         self._container.append(val)
  31:     
--------------------------------------------------------------------------------
[0.11297 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:11: TypeError: Deque.__init__() missing 1 required positional argument: 'self'

[36m   -[0m [#  12] SDI deque: 
--------------------------------------------------------------------------------
  24:     def __init__(self, data=None):
  25:         '''Initialize deque.'''
  26:         self._container = DoubleLinkedList(data)
  27:     
[34m- 28:     def append(self, val):[0m
[34m- 29:         '''Add value to the end of the deque.'''[0m
[34m- 30:         self._container.append(val)[0m
[34m- 31:     [0m
[32m+ 28:     @staticmethod[0m
[32m+ 29:     def append(self, val):[0m
[32m+ 30:         '''Add value to the end of the deque.'''[0m
[32m+ 31:         self._container.append(val)[0m
  32:     def appendleft(self, val):
  33:         '''Add a value to the front of the deque.'''
  34:         self._container.push(val)
  35:     
--------------------------------------------------------------------------------
[0.12286 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:34: TypeError: Deque.append() missing 1 required positional argument: 'val'

[36m   -[0m [#  13] SDI deque: 
--------------------------------------------------------------------------------
  28:     def append(self, val):
  29:         '''Add value to the end of the deque.'''
  30:         self._container.append(val)
  31:     
[34m- 32:     def appendleft(self, val):[0m
[34m- 33:         '''Add a value to the front of the deque.'''[0m
[34m- 34:         self._container.push(val)[0m
[34m- 35:     [0m
[32m+ 32:     @staticmethod[0m
[32m+ 33:     def appendleft(self, val):[0m
[32m+ 34:         '''Add a value to the front of the deque.'''[0m
[32m+ 35:         self._container.push(val)[0m
  36:     def pop(self):
  37:         '''Remove a value from the end of the deque and returns it.'''
  38:         return self._container.shift()
  39:     
--------------------------------------------------------------------------------
[0.12545 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:58: TypeError: Deque.appendleft() missing 1 required positional argument: 'val'

[36m   -[0m [#  14] SDI deque: 
--------------------------------------------------------------------------------
  32:     def appendleft(self, val):
  33:         '''Add a value to the front of the deque.'''
  34:         self._container.push(val)
  35:     
[34m- 36:     def pop(self):[0m
[34m- 37:         '''Remove a value from the end of the deque and returns it.'''[0m
[34m- 38:         return self._container.shift()[0m
[34m- 39:     [0m
[32m+ 36:     @staticmethod[0m
[32m+ 37:     def pop(self):[0m
[32m+ 38:         '''Remove a value from the end of the deque and returns it.'''[0m
[32m+ 39:         return self._container.shift()[0m
  40:     def popleft(self):
  41:         '''Remove a value from the front of the deque and returns it.'''
  42:         return self._container.pop()
  43:     
--------------------------------------------------------------------------------
[0.12802 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:78: TypeError: Deque.pop() missing 1 required positional argument: 'self'

[36m   -[0m [#  15] SDI deque: 
--------------------------------------------------------------------------------
  36:     def pop(self):
  37:         '''Remove a value from the end of the deque and returns it.'''
  38:         return self._container.shift()
  39:     
[34m- 40:     def popleft(self):[0m
[34m- 41:         '''Remove a value from the front of the deque and returns it.'''[0m
[34m- 42:         return self._container.pop()[0m
[34m- 43:     [0m
[32m+ 40:     @staticmethod[0m
[32m+ 41:     def popleft(self):[0m
[32m+ 42:         '''Remove a value from the front of the deque and returns it.'''[0m
[32m+ 43:         return self._container.pop()[0m
  44:     def peek(self):
  45:         '''Return the next value that would be returned by pop.'''
  46:         if self._container.head:
  47:             return self._container.head.data
--------------------------------------------------------------------------------
[0.13326 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:129: TypeError: Deque.popleft() missing 1 required positional argument: 'self'

[36m   -[0m [#  16] SDI deque: 
--------------------------------------------------------------------------------
  40:     def popleft(self):
  41:         '''Remove a value from the front of the deque and returns it.'''
  42:         return self._container.pop()
  43:     
[34m- 44:     def peek(self):[0m
[34m- 45:         '''Return the next value that would be returned by pop.'''[0m
[34m- 46:         if self._container.head:[0m
[34m- 47:             return self._container.head.data[0m
[34m- 48:         return None[0m
[34m- 49:     [0m
[32m+ 44:     @staticmethod[0m
[32m+ 45:     def peek(self):[0m
[32m+ 46:         '''Return the next value that would be returned by pop.'''[0m
[32m+ 47:         if self._container.head:[0m
[32m+ 48:             return self._container.head.data[0m
[32m+ 49:         return None[0m
  50:     def peekleft(self):
  51:         '''Return the next value from the front of the deque.'''
  52:         if self._container.tail:
  53:             return self._container.tail.data
--------------------------------------------------------------------------------
[0.14321 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:205: TypeError: Deque.peek() missing 1 required positional argument: 'self'

[36m   -[0m [#  17] SDI deque: 
--------------------------------------------------------------------------------
  46:         if self._container.head:
  47:             return self._container.head.data
  48:         return None
  49:     
[34m- 50:     def peekleft(self):[0m
[34m- 51:         '''Return the next value from the front of the deque.'''[0m
[34m- 52:         if self._container.tail:[0m
[34m- 53:             return self._container.tail.data[0m
[34m- 54:         return None[0m
[34m- 55:     [0m
[32m+ 50:     @staticmethod[0m
[32m+ 51:     def peekleft(self):[0m
[32m+ 52:         '''Return the next value from the front of the deque.'''[0m
[32m+ 53:         if self._container.tail:[0m
[32m+ 54:             return self._container.tail.data[0m
[32m+ 55:         return None[0m
  56:     def size(self):
  57:         '''Return the count of items in the queue.'''
  58:         return self._container._length
--------------------------------------------------------------------------------
[0.14167 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:224: TypeError: Deque.peekleft() missing 1 required positional argument: 'self'

[36m   -[0m [#  18] SDI deque: 
--------------------------------------------------------------------------------
  52:         if self._container.tail:
  53:             return self._container.tail.data
  54:         return None
  55:     
[34m- 56:     def size(self):[0m
[34m- 57:         '''Return the count of items in the queue.'''[0m
[34m- 58:         return self._container._length[0m
[32m+ 56:     @staticmethod[0m
[32m+ 57:     def size(self):[0m
[32m+ 58:         '''Return the count of items in the queue.'''[0m
[32m+ 59:         return self._container._length[0m
--------------------------------------------------------------------------------
[0.14950 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/deque/0-ts/test_deque.py:182: TypeError: Deque.size() missing 1 required positional argument: 'self'

[36m   -[0m [#  19] SDL deque: 
--------------------------------------------------------------------------------
  22:     '''
  23:     
  24:     def __init__(self, data=None):
  25:         '''Initialize deque.'''
[34m- 26:         self._container = DoubleLinkedList(data)[0m
[32m+ 26:         pass[0m
  27:     
  28:     def append(self, val):
  29:         '''Add value to the end of the deque.'''
  30:         self._container.append(val)
--------------------------------------------------------------------------------
[0.13656 s] [32mkilled[0m by 0-ts/test_deque.py::test_init_deque_has_data

test_deque = (<deque.Deque object at 0x7f84779fee90>, <deque.Deque object at 0x7f84779fd4b0>, <deque.Deque object at 0x7f84779fe680>)

    def test_init_deque_has_data(test_deque):
        """Test deque has data."""
>       assert test_deque[2]._container
E       AttributeError: 'Deque' object has no attribute '_container'

0-ts/test_deque.py:19: AttributeError
[36m   -[0m [#  20] SDL deque: 
--------------------------------------------------------------------------------
  26:         self._container = DoubleLinkedList(data)
  27:     
  28:     def append(self, val):
  29:         '''Add value to the end of the deque.'''
[34m- 30:         self._container.append(val)[0m
[32m+ 30:         pass[0m
  31:     
  32:     def appendleft(self, val):
  33:         '''Add a value to the front of the deque.'''
  34:         self._container.push(val)
--------------------------------------------------------------------------------
[0.10828 s] [32mkilled[0m by 0-ts/test_deque.py::test_append_adds_data

test_deque = (<deque.Deque object at 0x7f8477b64a30>, <deque.Deque object at 0x7f8477b655a0>, <deque.Deque object at 0x7f8477b64a90>)

    def test_append_adds_data(test_deque):
        """Test append adds data to the tail."""
        test_deque[0].append(3)
>       assert test_deque[0]._container.tail.data is 3
E       AttributeError: 'NoneType' object has no attribute 'data'

0-ts/test_deque.py:35: AttributeError
[36m   -[0m [#  21] SDL deque: 
--------------------------------------------------------------------------------
  30:         self._container.append(val)
  31:     
  32:     def appendleft(self, val):
  33:         '''Add a value to the front of the deque.'''
[34m- 34:         self._container.push(val)[0m
[32m+ 34:         pass[0m
  35:     
  36:     def pop(self):
  37:         '''Remove a value from the end of the deque and returns it.'''
  38:         return self._container.shift()
--------------------------------------------------------------------------------
[0.10688 s] [32mkilled[0m by 0-ts/test_deque.py::test_appendleft_increases_length

test_deque = (<deque.Deque object at 0x7f8477cc2aa0>, <deque.Deque object at 0x7f8477cc35b0>, <deque.Deque object at 0x7f8477cc2500>)

    def test_appendleft_increases_length(test_deque):
        """Test appendleft increases length."""
        test_deque[0].appendleft(2)
>       assert test_deque[0]._container._length is 1
E       AssertionError

0-ts/test_deque.py:59: AssertionError
[36m   -[0m [#  22] SDL deque: 
--------------------------------------------------------------------------------
  34:         self._container.push(val)
  35:     
  36:     def pop(self):
  37:         '''Remove a value from the end of the deque and returns it.'''
[34m- 38:         return self._container.shift()[0m
[32m+ 38:         pass[0m
  39:     
  40:     def popleft(self):
  41:         '''Remove a value from the front of the deque and returns it.'''
  42:         return self._container.pop()
--------------------------------------------------------------------------------
[0.11577 s] [32mkilled[0m by 0-ts/test_deque.py::test_pop_reduces_length

test_deque = (<deque.Deque object at 0x7f84779fe950>, <deque.Deque object at 0x7f84779ff880>, <deque.Deque object at 0x7f84779fd300>)

    def test_pop_reduces_length(test_deque):
        """Test pop reduces lists."""
        old_length = test_deque[2]._container._length
        test_deque[2].pop()
>       assert test_deque[2]._container._length is old_length - 1
E       AssertionError

0-ts/test_deque.py:79: AssertionError
[36m   -[0m [#  23] SDL deque: 
--------------------------------------------------------------------------------
  38:         return self._container.shift()
  39:     
  40:     def popleft(self):
  41:         '''Remove a value from the front of the deque and returns it.'''
[34m- 42:         return self._container.pop()[0m
[32m+ 42:         pass[0m
  43:     
  44:     def peek(self):
  45:         '''Return the next value that would be returned by pop.'''
  46:         if self._container.head:
--------------------------------------------------------------------------------
[0.12215 s] [32mkilled[0m by 0-ts/test_deque.py::test_popleft_reduces_length

test_deque = (<deque.Deque object at 0x7f84779fe920>, <deque.Deque object at 0x7f84779fd840>, <deque.Deque object at 0x7f84779fd2d0>)

    def test_popleft_reduces_length(test_deque):
        """Test popleft reduces lists."""
        old_length = test_deque[2]._container._length
        test_deque[2].popleft()
>       assert test_deque[2]._container._length is old_length - 1
E       AssertionError

0-ts/test_deque.py:130: AssertionError
[36m   -[0m [#  24] SDL deque: 
--------------------------------------------------------------------------------
  43:     
  44:     def peek(self):
  45:         '''Return the next value that would be returned by pop.'''
  46:         if self._container.head:
[34m- 47:             return self._container.head.data[0m
[32m+ 47:             pass[0m
  48:         return None
  49:     
  50:     def peekleft(self):
  51:         '''Return the next value from the front of the deque.'''
--------------------------------------------------------------------------------
[0.14240 s] [32mkilled[0m by 0-ts/test_deque.py::test_peek

test_deque = (<deque.Deque object at 0x7f8477bc8190>, <deque.Deque object at 0x7f8477bcab90>, <deque.Deque object at 0x7f8477bc9d80>)

    def test_peek(test_deque):
        """Test peek method."""
        peek = test_deque[2].peek()
>       assert peek == test_deque[2]._container.head.data
E       AssertionError

0-ts/test_deque.py:206: AssertionError
[36m   -[0m [#  25] SDL deque: 
--------------------------------------------------------------------------------
  44:     def peek(self):
  45:         '''Return the next value that would be returned by pop.'''
  46:         if self._container.head:
  47:             return self._container.head.data
[34m- 48:         return None[0m
[32m+ 48:         pass[0m
  49:     
  50:     def peekleft(self):
  51:         '''Return the next value from the front of the deque.'''
  52:         if self._container.tail:
--------------------------------------------------------------------------------
[0.13086 s] [31msurvived[0m
[36m   -[0m [#  26] SDL deque: 
--------------------------------------------------------------------------------
  49:     
  50:     def peekleft(self):
  51:         '''Return the next value from the front of the deque.'''
  52:         if self._container.tail:
[34m- 53:             return self._container.tail.data[0m
[32m+ 53:             pass[0m
  54:         return None
  55:     
  56:     def size(self):
  57:         '''Return the count of items in the queue.'''
--------------------------------------------------------------------------------
[0.14436 s] [32mkilled[0m by 0-ts/test_deque.py::test_peekleft

test_deque = (<deque.Deque object at 0x7f8477a472e0>, <deque.Deque object at 0x7f8477a46980>, <deque.Deque object at 0x7f8477916470>)

    def test_peekleft(test_deque):
        """Test peekleft method."""
        peekleft = test_deque[2].peekleft()
>       assert peekleft == test_deque[2]._container.tail.data
E       AssertionError

0-ts/test_deque.py:225: AssertionError
[36m   -[0m [#  27] SDL deque: 
--------------------------------------------------------------------------------
  50:     def peekleft(self):
  51:         '''Return the next value from the front of the deque.'''
  52:         if self._container.tail:
  53:             return self._container.tail.data
[34m- 54:         return None[0m
[32m+ 54:         pass[0m
  55:     
  56:     def size(self):
  57:         '''Return the count of items in the queue.'''
  58:         return self._container._length
--------------------------------------------------------------------------------
[0.10310 s] [31msurvived[0m
[36m   -[0m [#  28] SDL deque: 
--------------------------------------------------------------------------------
  54:         return None
  55:     
  56:     def size(self):
  57:         '''Return the count of items in the queue.'''
[34m- 58:         return self._container._length[0m
[32m+ 58:         pass[0m
--------------------------------------------------------------------------------
[0.13989 s] [32mkilled[0m by 0-ts/test_deque.py::test_size_method_append

test_deque = (<deque.Deque object at 0x7f8477a9a3e0>, <deque.Deque object at 0x7f8477a9a350>, <deque.Deque object at 0x7f8477a9ab00>)

    def test_size_method_append(test_deque):
        """Append and test size."""
        test_deque[0].append(2)
>       assert test_deque[0].size() == 1
E       AssertionError

0-ts/test_deque.py:182: AssertionError
[36m   -[0m [#  29] SVD deque: 
--------------------------------------------------------------------------------
  22:     '''
  23:     
  24:     def __init__(self, data=None):
  25:         '''Initialize deque.'''
[34m- 26:         self._container = DoubleLinkedList(data)[0m
[32m+ 26:         _container = DoubleLinkedList(data)[0m
  27:     
  28:     def append(self, val):
  29:         '''Add value to the end of the deque.'''
  30:         self._container.append(val)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  30] SVD deque: 
--------------------------------------------------------------------------------
  26:         self._container = DoubleLinkedList(data)
  27:     
  28:     def append(self, val):
  29:         '''Add value to the end of the deque.'''
[34m- 30:         self._container.append(val)[0m
[32m+ 30:         _container.append(val)[0m
  31:     
  32:     def appendleft(self, val):
  33:         '''Add a value to the front of the deque.'''
  34:         self._container.push(val)
--------------------------------------------------------------------------------
[0.15474 s] [32mkilled[0m by 0-ts/test_deque.py::test_append_adds_data

test_deque = (<deque.Deque object at 0x7f8477a46440>, <deque.Deque object at 0x7f8477a44610>, <deque.Deque object at 0x7f8477a47df0>)

    def test_append_adds_data(test_deque):
        """Test append adds data to the tail."""
>       test_deque[0].append(3)

0-ts/test_deque.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <deque.Deque object at 0x7f8477a46440>, val = 3

>   ???
E   NameError: name '_container' is not defined

deque:30: NameError
[36m   -[0m [#  31] SVD deque: 
--------------------------------------------------------------------------------
  30:         self._container.append(val)
  31:     
  32:     def appendleft(self, val):
  33:         '''Add a value to the front of the deque.'''
[34m- 34:         self._container.push(val)[0m
[32m+ 34:         _container.push(val)[0m
  35:     
  36:     def pop(self):
  37:         '''Remove a value from the end of the deque and returns it.'''
  38:         return self._container.shift()
--------------------------------------------------------------------------------
[0.12900 s] [32mkilled[0m by 0-ts/test_deque.py::test_appendleft_increases_length

test_deque = (<deque.Deque object at 0x7f8477ae4b50>, <deque.Deque object at 0x7f8477ae4730>, <deque.Deque object at 0x7f8477a99b70>)

    def test_appendleft_increases_length(test_deque):
        """Test appendleft increases length."""
>       test_deque[0].appendleft(2)

0-ts/test_deque.py:58: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <deque.Deque object at 0x7f8477ae4b50>, val = 2

>   ???
E   NameError: name '_container' is not defined

deque:34: NameError
[36m   -[0m [#  32] SVD deque: 
--------------------------------------------------------------------------------
  34:         self._container.push(val)
  35:     
  36:     def pop(self):
  37:         '''Remove a value from the end of the deque and returns it.'''
[34m- 38:         return self._container.shift()[0m
[32m+ 38:         return _container.shift()[0m
  39:     
  40:     def popleft(self):
  41:         '''Remove a value from the front of the deque and returns it.'''
  42:         return self._container.pop()
--------------------------------------------------------------------------------
[0.12860 s] [32mkilled[0m by 0-ts/test_deque.py::test_pop_reduces_length

test_deque = (<deque.Deque object at 0x7f8477914f70>, <deque.Deque object at 0x7f8477915780>, <deque.Deque object at 0x7f8477914c40>)

    def test_pop_reduces_length(test_deque):
        """Test pop reduces lists."""
        old_length = test_deque[2]._container._length
>       test_deque[2].pop()

0-ts/test_deque.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <deque.Deque object at 0x7f8477914c40>

>   ???
E   NameError: name '_container' is not defined

deque:38: NameError
[36m   -[0m [#  33] SVD deque: 
--------------------------------------------------------------------------------
  38:         return self._container.shift()
  39:     
  40:     def popleft(self):
  41:         '''Remove a value from the front of the deque and returns it.'''
[34m- 42:         return self._container.pop()[0m
[32m+ 42:         return _container.pop()[0m
  43:     
  44:     def peek(self):
  45:         '''Return the next value that would be returned by pop.'''
  46:         if self._container.head:
--------------------------------------------------------------------------------
[0.16481 s] [32mkilled[0m by 0-ts/test_deque.py::test_popleft_reduces_length

test_deque = (<deque.Deque object at 0x7f8477a460b0>, <deque.Deque object at 0x7f8477a46020>, <deque.Deque object at 0x7f8477b65f60>)

    def test_popleft_reduces_length(test_deque):
        """Test popleft reduces lists."""
        old_length = test_deque[2]._container._length
>       test_deque[2].popleft()

0-ts/test_deque.py:129: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <deque.Deque object at 0x7f8477b65f60>

>   ???
E   NameError: name '_container' is not defined

deque:42: NameError
[36m   -[0m [#  34] SVD deque: 
--------------------------------------------------------------------------------
  42:         return self._container.pop()
  43:     
  44:     def peek(self):
  45:         '''Return the next value that would be returned by pop.'''
[34m- 46:         if self._container.head:[0m
[32m+ 46:         if _container.head:[0m
  47:             return self._container.head.data
  48:         return None
  49:     
  50:     def peekleft(self):
--------------------------------------------------------------------------------
[0.17050 s] [32mkilled[0m by 0-ts/test_deque.py::test_peek

test_deque = (<deque.Deque object at 0x7f8477a46500>, <deque.Deque object at 0x7f8477a44430>, <deque.Deque object at 0x7f8477a45000>)

    def test_peek(test_deque):
        """Test peek method."""
>       peek = test_deque[2].peek()

0-ts/test_deque.py:205: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <deque.Deque object at 0x7f8477a45000>

>   ???
E   NameError: name '_container' is not defined

deque:46: NameError
[36m   -[0m [#  35] SVD deque: 
--------------------------------------------------------------------------------
  43:     
  44:     def peek(self):
  45:         '''Return the next value that would be returned by pop.'''
  46:         if self._container.head:
[34m- 47:             return self._container.head.data[0m
[32m+ 47:             return _container.head.data[0m
  48:         return None
  49:     
  50:     def peekleft(self):
  51:         '''Return the next value from the front of the deque.'''
--------------------------------------------------------------------------------
[0.15036 s] [32mkilled[0m by 0-ts/test_deque.py::test_peek

test_deque = (<deque.Deque object at 0x7f84779144f0>, <deque.Deque object at 0x7f8477915210>, <deque.Deque object at 0x7f8477914700>)

    def test_peek(test_deque):
        """Test peek method."""
>       peek = test_deque[2].peek()

0-ts/test_deque.py:205: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <deque.Deque object at 0x7f8477914700>

>   ???
E   NameError: name '_container' is not defined

deque:47: NameError
[36m   -[0m [#  36] SVD deque: 
--------------------------------------------------------------------------------
  48:         return None
  49:     
  50:     def peekleft(self):
  51:         '''Return the next value from the front of the deque.'''
[34m- 52:         if self._container.tail:[0m
[32m+ 52:         if _container.tail:[0m
  53:             return self._container.tail.data
  54:         return None
  55:     
  56:     def size(self):
--------------------------------------------------------------------------------
[0.12126 s] [32mkilled[0m by 0-ts/test_deque.py::test_peekleft

test_deque = (<deque.Deque object at 0x7f84779ff1c0>, <deque.Deque object at 0x7f84779fdd50>, <deque.Deque object at 0x7f84779fc8b0>)

    def test_peekleft(test_deque):
        """Test peekleft method."""
>       peekleft = test_deque[2].peekleft()

0-ts/test_deque.py:224: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <deque.Deque object at 0x7f84779fc8b0>

>   ???
E   NameError: name '_container' is not defined

deque:52: NameError
[36m   -[0m [#  37] SVD deque: 
--------------------------------------------------------------------------------
  49:     
  50:     def peekleft(self):
  51:         '''Return the next value from the front of the deque.'''
  52:         if self._container.tail:
[34m- 53:             return self._container.tail.data[0m
[32m+ 53:             return _container.tail.data[0m
  54:         return None
  55:     
  56:     def size(self):
  57:         '''Return the count of items in the queue.'''
--------------------------------------------------------------------------------
[0.12183 s] [32mkilled[0m by 0-ts/test_deque.py::test_peekleft

test_deque = (<deque.Deque object at 0x7f8477b64df0>, <deque.Deque object at 0x7f8477b64460>, <deque.Deque object at 0x7f8477b65000>)

    def test_peekleft(test_deque):
        """Test peekleft method."""
>       peekleft = test_deque[2].peekleft()

0-ts/test_deque.py:224: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <deque.Deque object at 0x7f8477b65000>

>   ???
E   NameError: name '_container' is not defined

deque:53: NameError
[36m   -[0m [#  38] SVD deque: 
--------------------------------------------------------------------------------
  54:         return None
  55:     
  56:     def size(self):
  57:         '''Return the count of items in the queue.'''
[34m- 58:         return self._container._length[0m
[32m+ 58:         return _container._length[0m
--------------------------------------------------------------------------------
[0.14776 s] [32mkilled[0m by 0-ts/test_deque.py::test_size_method_append

test_deque = (<deque.Deque object at 0x7f8477cc0ee0>, <deque.Deque object at 0x7f8477cc1cc0>, <deque.Deque object at 0x7f8477cc17b0>)

    def test_size_method_append(test_deque):
        """Append and test size."""
        test_deque[0].append(2)
>       assert test_deque[0].size() == 1

0-ts/test_deque.py:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <deque.Deque object at 0x7f8477cc0ee0>

>   ???
E   NameError: name '_container' is not defined

deque:58: NameError
[34m[*][0m Mutation score [6.83151 s]: [1m[34m93.1%[0m
[36m   -[0m all: 38
[36m   -[0m killed: 27 (71.1%)
[36m   -[0m survived: 2 (5.3%)
[36m   -[0m incompetent: 9 (23.7%)
[36m   -[0m timeout: 0 (0.0%)
