import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from deque import Deque

def test_append():
    deque = Deque()
    deque.append(1)
    assert deque.peek() == 1

def test_append_multiple():
    deque = Deque()
    deque.append(1)
    deque.append(2)
    assert deque.peek() == 2

def test_appendleft():
    deque = Deque()
    deque.appendleft(1)
    assert deque.peekleft() == 1

def test_appendleft_multiple():
    deque = Deque()
    deque.appendleft(1)
    deque.appendleft(2)
    assert deque.peekleft() == 2

def test_pop():
    deque = Deque([1, 2, 3])
    assert deque.pop() == 3

def test_pop_empty():
    deque = Deque()
    with pytest.raises(Exception):
        deque.pop()

def test_popleft():
    deque = Deque([1, 2, 3])
    assert deque.popleft() == 1

def test_popleft_empty():
    deque = Deque()
    with pytest.raises(Exception):
        deque.popleft()

def test_peek():
    deque = Deque([1, 2, 3])
    assert deque.peek() == 3

def test_peek_empty():
    deque = Deque()
    assert deque.peek() == None

def test_peekleft():
    deque = Deque([1, 2, 3])
    assert deque.peekleft() == 1

def test_peekleft_empty():
    deque = Deque()
    assert deque.peekleft() == None

def test_size():
    deque = Deque([1, 2, 3])
    assert deque.size() == 3

def test_size_empty():
    deque = Deque()
    assert deque.size() == 0