import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from deque import Deque

import pytest

def test_init():
    d = Deque()
    assert d.size() == 0

def test_append():
    d = Deque()
    d.append(1)
    assert d.size() == 1
    assert d.peek() == 1

def test_append_multiple():
    d = Deque()
    d.append(1)
    d.append(2)
    assert d.size() == 2
    assert d.peek() == 1

def test_append_left():
    d = Deque()
    d.appendleft(1)
    assert d.size() == 1
    assert d.peekleft() == 1

def test_pop():
    d = Deque([1, 2, 3])
    assert d.pop() == 3
    assert d.size() == 2

def test_pop_empty():
    d = Deque()
    with pytest.raises(Exception):
        d.pop()

def test_popleft():
    d = Deque([1, 2, 3])
    assert d.popleft() == 1
    assert d.size() == 2

def test_popleft_empty():
    d = Deque()
    with pytest.raises(Exception):
        d.popleft()

def test_peek():
    d = Deque([1, 2, 3])
    assert d.peek() == 3

def test_peek_empty():
    d = Deque()
    assert d.peek() == None

def test_peekleft():
    d = Deque([1, 2, 3])
    assert d.peekleft() == 1

def test_peekleft_empty():
    d = Deque()
    assert d.peekleft() == None

def test_size():
    d = Deque([1, 2, 3])
    assert d.size() == 3

def test_size_empty():
    d = Deque()
    assert d.size() == 0