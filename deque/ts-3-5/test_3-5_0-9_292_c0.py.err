import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)) + '/../src')

import pytest
from deque import Deque

class TestDeque:
    
    def test_append(self):
        d = Deque()
        d.append(1)
        assert d.peek() == 1
        assert d.size() == 1
    
    def test_append_multiple_values(self):
        d = Deque()
        d.append(1)
        d.append(2)
        d.append(3)
        assert d.peek() == 3
        assert d.size() == 3
    
    def test_appendleft(self):
        d = Deque()
        d.appendleft(1)
        assert d.peekleft() == 1
        assert d.size() == 1
    
    def test_appendleft_multiple_values(self):
        d = Deque()
        d.appendleft(1)
        d.appendleft(2)
        d.appendleft(3)
        assert d.peekleft() == 3
        assert d.size() == 3
    
    def test_pop(self):
        d = Deque()
        d.append(1)
        assert d.pop() == 1
        assert d.size() == 0
    
    def test_pop_multiple_values(self):
        d = Deque()
        d.append(1)
        d.append(2)
        d.append(3)
        assert d.pop() == 3
        assert d.size() == 2
    
    def test_popleft(self):
        d = Deque()
        d.appendleft(1)
        assert d.popleft() == 1
        assert d.size() == 0
    
    def test_popleft_multiple_values(self):
        d = Deque()
        d.appendleft(1)
        d.appendleft(2)
        d.appendleft(3)
        assert d.popleft() == 3
        assert d.size() == 2
    
    def test_peek_empty_deque(self):
        d = Deque()
        assert d.peek() is None
    
    def test_peekleft_empty_deque(self):
        d = Deque()
        assert d.peekleft() is None
    
    def test_size_empty_deque(self):
        d = Deque()
        assert d.size() == 0