import os
import sys
from collections import deque

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

import pytest

class TestDeque:
    
    def test_append(self):
        d = deque()
        d.append(1)
        assert d[-1] == 1
        assert len(d) == 1
    
    def test_append_multiple_values(self):
        d = deque()
        d.append(1)
        d.append(2)
        d.append(3)
        assert d[-1] == 3
        assert len(d) == 3
    
    def test_appendleft(self):
        d = deque()
        d.appendleft(1)
        assert d[0] == 1
        assert len(d) == 1
    
    def test_appendleft_multiple_values(self):
        d = deque()
        d.appendleft(1)
        d.appendleft(2)
        d.appendleft(3)
        assert d[0] == 3
        assert len(d) == 3
    
    def test_pop(self):
        d = deque()
        d.append(1)
        assert d.pop() == 1
        assert len(d) == 0
    
    def test_pop_multiple_values(self):
        d = deque()
        d.append(1)
        d.append(2)
        d.append(3)
        assert d.pop() == 3
        assert len(d) == 2
    
    def test_popleft(self):
        d = deque()
        d.appendleft(1)
        assert d.popleft() == 1
        assert len(d) == 0
    
    def test_popleft_multiple_values(self):
        d = deque()
        d.appendleft(1)
        d.appendleft(2)
        d.appendleft(3)
        assert d.popleft() == 3
        assert len(d) == 2
    
    def test_peek_empty_deque(self):
        d = deque()
        assert d[-1] == None
    
    def test_peekleft_empty_deque(self):
        d = deque()
        assert d[0] == None
    
    def test_size_empty_deque(self):
        d = deque()
        assert len(d) == 0