import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from deque import Deque

@pytest.fixture
def empty_deque():
    return Deque()

@pytest.fixture
def filled_deque():
    return Deque([1, 2, 3])

def test_append(empty_deque, filled_deque):
    empty_deque.append(5)
    assert empty_deque.peek() == 5

    filled_deque.append(4)
    assert filled_deque.peek() == 3

def test_appendleft(empty_deque, filled_deque):
    empty_deque.appendleft(10)
    assert empty_deque.peekleft() == 10

    filled_deque.appendleft(11)
    assert filled_deque.peekleft() == 11

def test_pop(empty_deque, filled_deque):
    with pytest.raises(Exception):
        empty_deque.pop()

    assert filled_deque.pop() == 3

def test_popleft(empty_deque, filled_deque):
    with pytest.raises(Exception):
        empty_deque.popleft()

    assert filled_deque.popleft() == 1

def test_peek(empty_deque, filled_deque):
    assert empty_deque.peek() is None

    assert filled_deque.peek() == 3

def test_peekleft(empty_deque, filled_deque):
    assert empty_deque.peekleft() is None

    assert filled_deque.peekleft() == 1

def test_size(empty_deque, filled_deque):
    assert empty_deque.size() == 0

    assert filled_deque.size() == 3