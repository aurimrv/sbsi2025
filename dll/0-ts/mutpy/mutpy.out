/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:20: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert node.data is 5
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:36: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[2].head.data is 5
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:37: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[2].tail.data is 1
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:42: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[2].tail.prev.data is 2
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:47: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[2].head.next.data is 4
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:53: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[0]._length is 1
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:59: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[1].head.data is 6
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:92: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[1]._length is 0
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:97: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[2].pop() is 5
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:109: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[0]._length is 1
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:115: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[1].tail.data is 6
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:128: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[0].tail.data is 6
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:129: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[0].head.data is 6
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:154: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert popped_data is 9
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:180: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[1]._length is 0
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:205: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert shifted_data is 9
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:229: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[2]._length is 4
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:235: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[2]._length is 4
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:241: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[2]._length is 4
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:247: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[2].head.next.next.data is 2
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:253: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[2].head.data is 4
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:260: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[2].tail.data is 2
/home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:267: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_lists[1]._length is 0
[34m[*][0m Start mutation process:
[36m   -[0m targets: dll.py
[36m   -[0m tests: ./0-ts
[34m[*][0m 42 tests passed:
[36m   -[0m test_dll [0.21117 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] ASR dll: 
--------------------------------------------------------------------------------
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
[34m-  50:         self._length += 1[0m
[32m+  50:         self._length -= 1[0m
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
--------------------------------------------------------------------------------
[0.13761 s] [32mkilled[0m by 0-ts/test_dll.py::test_push_increases_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bff30d90>, <dll.DoubleLinkedList object at 0x7f33bff302e0>, <dll.DoubleLinkedList object at 0x7f33bff30b50>)

    def test_push_increases_length(test_lists):
        """Test push increases length."""
        test_lists[0].push(2)
>       assert test_lists[0]._length is 1
E       AssertionError

0-ts/test_dll.py:53: AssertionError
[36m   -[0m [#   2] ASR dll: 
--------------------------------------------------------------------------------
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
[34m-  62:         self._length -= 1[0m
[32m+  62:         self._length += 1[0m
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
--------------------------------------------------------------------------------
[0.13590 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfdbe620>, <dll.DoubleLinkedList object at 0x7f33bfdbef50>, <dll.DoubleLinkedList object at 0x7f33bfdbe6b0>)

    def test_pop_reduces_length(test_lists):
        """Test pop reduces lists."""
        old_length = test_lists[2]._length
        test_lists[2].pop()
>       assert test_lists[2]._length is old_length - 1
E       AssertionError

0-ts/test_dll.py:73: AssertionError
[36m   -[0m [#   3] ASR dll: 
--------------------------------------------------------------------------------
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
[34m-  75:         self._length += 1[0m
[32m+  75:         self._length -= 1[0m
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
--------------------------------------------------------------------------------
[0.14677 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_increases_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe11e10>, <dll.DoubleLinkedList object at 0x7f33bfe116c0>, <dll.DoubleLinkedList object at 0x7f33bfe10790>)

    def test_append_increases_length(test_lists):
        """Test append increases length."""
        test_lists[0].append(2)
>       assert test_lists[0]._length is 1
E       AssertionError

0-ts/test_dll.py:109: AssertionError
[36m   -[0m [#   4] ASR dll: 
--------------------------------------------------------------------------------
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
[34m-  87:         self._length -= 1[0m
[32m+  87:         self._length += 1[0m
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
--------------------------------------------------------------------------------
[0.15123 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd056c0>, <dll.DoubleLinkedList object at 0x7f33bfd05e40>, <dll.DoubleLinkedList object at 0x7f33bfd04bb0>)

    def test_shift_reduces_length(test_lists):
        """Test shift reduces lists."""
        old_length = test_lists[2]._length
        test_lists[2].shift()
>       assert test_lists[2]._length is old_length - 1
E       AssertionError

0-ts/test_dll.py:161: AssertionError
[36m   -[0m [#   5] ASR dll: 
--------------------------------------------------------------------------------
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
[34m- 105:                 self._length -= 1[0m
[32m+ 105:                 self._length += 1[0m
  106:                 return
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
--------------------------------------------------------------------------------
[0.13956 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfcea5f0>, <dll.DoubleLinkedList object at 0x7f33bfcea0b0>, <dll.DoubleLinkedList object at 0x7f33bfceab90>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]

0-ts/test_dll.py:211: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:116: in _repr
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfceab90>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

dll:58: AttributeError
[36m   -[0m [#   6] BCR dll: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
[34m- 119:                 break[0m
[32m+ 119:                 continue[0m
  120:         return l
--------------------------------------------------------------------------------
[5.00663 s] [33mtimeout[0m
[36m   -[0m [#   7] CDI dll: 
--------------------------------------------------------------------------------
    3: 
    4: class Node(object):
    5:     '''Node class for data storage.'''
    6:     
[34m-   7:     def __init__(self, data=None, next_node=None, prev=None):[0m
[34m-   8:         '''Initialize Node.'''[0m
[34m-   9:         self.data = data[0m
[34m-  10:         self.next = next_node[0m
[34m-  11:         self.prev = prev[0m
[34m-  12:     [0m
[32m+   7:     @classmethod[0m
[32m+   8:     def __init__(self, data=None, next_node=None, prev=None):[0m
[32m+   9:         '''Initialize Node.'''[0m
[32m+  10:         self.data = data[0m
[32m+  11:         self.next = next_node[0m
[32m+  12:         self.prev = prev[0m
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
   16: 
--------------------------------------------------------------------------------
[0.13033 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_five

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfcc53c0>, <dll.DoubleLinkedList object at 0x7f33bfcc6260>, <dll.DoubleLinkedList object at 0x7f33bfcc54b0>)

    def test_list_of_five(test_lists):
        """Test list of five."""
        assert test_lists[2].head.data is 5
>       assert test_lists[2].tail.data is 1
E       AssertionError

0-ts/test_dll.py:37: AssertionError
[36m   -[0m [#   8] CDI dll: 
--------------------------------------------------------------------------------
    9:         self.data = data
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
[34m-  13:     def __repr__(self):[0m
[34m-  14:         '''String representation.'''[0m
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[34m-  16: [0m
[32m+  13:     @classmethod[0m
[32m+  14:     def __repr__(self):[0m
[32m+  15:         '''String representation.'''[0m
[32m+  16:         return 'Value: {}'.format(self.data)[0m
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
   20: 
--------------------------------------------------------------------------------
[0.16492 s] [31msurvived[0m
[36m   -[0m [#   9] CDI dll: 
--------------------------------------------------------------------------------
   26:     remove(val) - will remove the first instance of (val) found in the list,
   27:     starting from the head.
   28:     '''
   29:     
[34m-  30:     def __init__(self, data=None):[0m
[34m-  31:         '''Initialize list.'''[0m
[34m-  32:         self.head = None[0m
[34m-  33:         self.tail = None[0m
[34m-  34:         self._length = 0[0m
[34m-  35:         try:[0m
[34m-  36:             for val in data:[0m
[34m-  37:                 self.push(val)[0m
[34m-  38:         except TypeError:[0m
[34m-  39:             if data:[0m
[34m-  40:                 self.push(data)[0m
[34m-  41:     [0m
[32m+  30:     @classmethod[0m
[32m+  31:     def __init__(self, data=None):[0m
[32m+  32:         '''Initialize list.'''[0m
[32m+  33:         self.head = None[0m
[32m+  34:         self.tail = None[0m
[32m+  35:         self._length = 0[0m
[32m+  36:         try:[0m
[32m+  37:             for val in data:[0m
[32m+  38:                 self.push(val)[0m
[32m+  39:         except TypeError:[0m
[32m+  40:             if data:[0m
[32m+  41:                 self.push(data)[0m
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
--------------------------------------------------------------------------------
[0.13345 s] [36mincompetent[0m

TypeError: dll:41: TypeError: DoubleLinkedList.push() missing 1 required positional argument: 'val'

[36m   -[0m [#  10] CDI dll: 
--------------------------------------------------------------------------------
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
[34m-  42:     def push(self, val):[0m
[34m-  43:         '''Add val to the head of the list.'''[0m
[34m-  44:         old_head = self.head[0m
[34m-  45:         self.head = Node(val, next_node=old_head)[0m
[34m-  46:         if old_head:[0m
[34m-  47:             old_head.prev = self.head[0m
[34m-  48:         if not (self.tail):[0m
[34m-  49:             self.tail = self.head[0m
[34m-  50:         self._length += 1[0m
[34m-  51:     [0m
[32m+  42:     @classmethod[0m
[32m+  43:     def push(self, val):[0m
[32m+  44:         '''Add val to the head of the list.'''[0m
[32m+  45:         old_head = self.head[0m
[32m+  46:         self.head = Node(val, next_node=old_head)[0m
[32m+  47:         if old_head:[0m
[32m+  48:             old_head.prev = self.head[0m
[32m+  49:         if not (self.tail):[0m
[32m+  50:             self.tail = self.head[0m
[32m+  51:         self._length += 1[0m
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
--------------------------------------------------------------------------------
[0.12718 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

self = <dll.DoubleLinkedList object at 0x7f33bfcc4280>, data = 3

>   ???
E   TypeError: 'int' object is not iterable

dll:36: TypeError

During handling of the above exception, another exception occurred:

    @pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
>       one = DoubleLinkedList(3)

0-ts/test_dll.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:40: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'dll.DoubleLinkedList'>, val = 3

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'head'

dll:45: AttributeError
[36m   -[0m [#  11] CDI dll: 
--------------------------------------------------------------------------------
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
[34m-  52:     def pop(self):[0m
[34m-  53:         '''Remove the val from the head of the list.'''[0m
[34m-  54:         to_return = self.head[0m
[34m-  55:         if self._length < 1:[0m
[34m-  56:             raise IndexError('Cannot pop from an empty list.')[0m
[34m-  57:         [0m
[34m-  58:         new_head = self.head.next[0m
[34m-  59:         if new_head:[0m
[34m-  60:             new_head.prev = None[0m
[34m-  61:         self.head = new_head[0m
[34m-  62:         self._length -= 1[0m
[34m-  63:         if self._length < 1:[0m
[34m-  64:             self.tail = None[0m
[34m-  65:         return to_return.data[0m
[34m-  66:     [0m
[32m+  52:     @classmethod[0m
[32m+  53:     def pop(self):[0m
[32m+  54:         '''Remove the val from the head of the list.'''[0m
[32m+  55:         to_return = self.head[0m
[32m+  56:         if self._length < 1:[0m
[32m+  57:             raise IndexError('Cannot pop from an empty list.')[0m
[32m+  58:         [0m
[32m+  59:         new_head = self.head.next[0m
[32m+  60:         if new_head:[0m
[32m+  61:             new_head.prev = None[0m
[32m+  62:         self.head = new_head[0m
[32m+  63:         self._length -= 1[0m
[32m+  64:         if self._length < 1:[0m
[32m+  65:             self.tail = None[0m
[32m+  66:         return to_return.data[0m
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
--------------------------------------------------------------------------------
[0.13970 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33c01218d0>, <dll.DoubleLinkedList object at 0x7f33c0121b10>, <dll.DoubleLinkedList object at 0x7f33c01229e0>)

    def test_pop_reduces_length(test_lists):
        """Test pop reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].pop()

0-ts/test_dll.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'dll.DoubleLinkedList'>

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'head'

dll:55: AttributeError
[36m   -[0m [#  12] CDI dll: 
--------------------------------------------------------------------------------
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
[34m-  67:     def append(self, val):[0m
[34m-  68:         '''Add val to the tail of the list.'''[0m
[34m-  69:         old_tail = self.tail[0m
[34m-  70:         self.tail = Node(val, prev=old_tail)[0m
[34m-  71:         if old_tail:[0m
[34m-  72:             old_tail.next = self.tail[0m
[34m-  73:         if self._length < 1:[0m
[34m-  74:             self.head = self.tail[0m
[34m-  75:         self._length += 1[0m
[34m-  76:     [0m
[32m+  67:     @classmethod[0m
[32m+  68:     def append(self, val):[0m
[32m+  69:         '''Add val to the tail of the list.'''[0m
[32m+  70:         old_tail = self.tail[0m
[32m+  71:         self.tail = Node(val, prev=old_tail)[0m
[32m+  72:         if old_tail:[0m
[32m+  73:             old_tail.next = self.tail[0m
[32m+  74:         if self._length < 1:[0m
[32m+  75:             self.head = self.tail[0m
[32m+  76:         self._length += 1[0m
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
--------------------------------------------------------------------------------
[0.13539 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_increases_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd4f3d0>, <dll.DoubleLinkedList object at 0x7f33bfd4e1d0>, <dll.DoubleLinkedList object at 0x7f33bfd4d000>)

    def test_append_increases_length(test_lists):
        """Test append increases length."""
>       test_lists[0].append(2)

0-ts/test_dll.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'dll.DoubleLinkedList'>, val = 2

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'tail'

dll:70: AttributeError
[36m   -[0m [#  13] CDI dll: 
--------------------------------------------------------------------------------
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
[34m-  77:     def shift(self):[0m
[34m-  78:         '''Remove the val from the tail of the list.'''[0m
[34m-  79:         to_return = self.tail[0m
[34m-  80:         if self._length < 1:[0m
[34m-  81:             raise IndexError('Cannot shift from an empty list.')[0m
[34m-  82:         [0m
[34m-  83:         new_tail = self.tail.prev[0m
[34m-  84:         if new_tail:[0m
[34m-  85:             new_tail.next = None[0m
[34m-  86:         self.tail = new_tail[0m
[34m-  87:         self._length -= 1[0m
[34m-  88:         if self._length < 1:[0m
[34m-  89:             self.tail = None[0m
[34m-  90:         return to_return.data[0m
[34m-  91:     [0m
[32m+  77:     @classmethod[0m
[32m+  78:     def shift(self):[0m
[32m+  79:         '''Remove the val from the tail of the list.'''[0m
[32m+  80:         to_return = self.tail[0m
[32m+  81:         if self._length < 1:[0m
[32m+  82:             raise IndexError('Cannot shift from an empty list.')[0m
[32m+  83:         [0m
[32m+  84:         new_tail = self.tail.prev[0m
[32m+  85:         if new_tail:[0m
[32m+  86:             new_tail.next = None[0m
[32m+  87:         self.tail = new_tail[0m
[32m+  88:         self._length -= 1[0m
[32m+  89:         if self._length < 1:[0m
[32m+  90:             self.tail = None[0m
[32m+  91:         return to_return.data[0m
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
--------------------------------------------------------------------------------
[0.15010 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfdd0760>, <dll.DoubleLinkedList object at 0x7f33bfdd0ee0>, <dll.DoubleLinkedList object at 0x7f33bfdd0be0>)

    def test_shift_reduces_length(test_lists):
        """Test shift reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].shift()

0-ts/test_dll.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'dll.DoubleLinkedList'>

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'tail'

dll:80: AttributeError
[36m   -[0m [#  14] CDI dll: 
--------------------------------------------------------------------------------
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
[34m-  92:     def remove(self, val):[0m
[34m-  93:         '''Remove first occurance of val from list.'''[0m
[34m-  94:         curr = self.head[0m
[34m-  95:         while curr:[0m
[34m-  96:             if curr.data is val:[0m
[34m-  97:                 if self._length == 1:[0m
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[34m- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[34m- 101:                 elif curr is self.head:[0m
[34m- 102:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[34m- 103:                 elif curr is self.tail:[0m
[34m- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[34m- 105:                 self._length -= 1[0m
[34m- 106:                 return[0m
[34m- 107:             curr = curr.next[0m
[34m- 108:         [0m
[34m- 109:         raise ValueError('{} is not in the list'.format(val))[0m
[34m- 110:     [0m
[32m+  92:     @classmethod[0m
[32m+  93:     def remove(self, val):[0m
[32m+  94:         '''Remove first occurance of val from list.'''[0m
[32m+  95:         curr = self.head[0m
[32m+  96:         while curr:[0m
[32m+  97:             if curr.data is val:[0m
[32m+  98:                 if self._length == 1:[0m
[32m+  99:                     (self.head, self.tail) = (None, None)[0m
[32m+ 100:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+ 101:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[32m+ 102:                 elif curr is self.head:[0m
[32m+ 103:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[32m+ 104:                 elif curr is self.tail:[0m
[32m+ 105:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[32m+ 106:                 self._length -= 1[0m
[32m+ 107:                 return[0m
[32m+ 108:             curr = curr.next[0m
[32m+ 109:         [0m
[32m+ 110:         raise ValueError('{} is not in the list'.format(val))[0m
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
--------------------------------------------------------------------------------
[0.15592 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfb7a470>, <dll.DoubleLinkedList object at 0x7f33bfb79450>, <dll.DoubleLinkedList object at 0x7f33bfb7a830>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
>       test_lists[2].remove(3)

0-ts/test_dll.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'dll.DoubleLinkedList'>, val = 3

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'head'

dll:95: AttributeError
[36m   -[0m [#  15] CDI dll: 
--------------------------------------------------------------------------------
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
[34m- 111:     def _repr(self):[0m
[34m- 112:         '''Return list representation of dll.'''[0m
[34m- 113:         l = [][0m
[34m- 114:         while True:[0m
[34m- 115:             try:[0m
[34m- 116:                 popped_data = self.pop()[0m
[34m- 117:                 l.append(popped_data)[0m
[34m- 118:             except IndexError:[0m
[34m- 119:                 break[0m
[34m- 120:         return l[0m
[32m+ 111:     @classmethod[0m
[32m+ 112:     def _repr(self):[0m
[32m+ 113:         '''Return list representation of dll.'''[0m
[32m+ 114:         l = [][0m
[32m+ 115:         while True:[0m
[32m+ 116:             try:[0m
[32m+ 117:                 popped_data = self.pop()[0m
[32m+ 118:                 l.append(popped_data)[0m
[32m+ 119:             except IndexError:[0m
[32m+ 120:                 break[0m
[32m+ 121:         return l[0m
--------------------------------------------------------------------------------
[0.15558 s] [36mincompetent[0m

TypeError: dll:117: TypeError: DoubleLinkedList.pop() missing 1 required positional argument: 'self'

[36m   -[0m [#  16] COD dll: 
--------------------------------------------------------------------------------
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
[34m-  48:         if not (self.tail):[0m
[32m+  48:         if self.tail:[0m
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
   52:     def pop(self):
--------------------------------------------------------------------------------
[0.16284 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_one

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfaa75b0>, <dll.DoubleLinkedList object at 0x7f33bfaa77c0>, <dll.DoubleLinkedList object at 0x7f33bfaa74c0>)

    def test_list_of_one(test_lists):
        """Test list of one, head is tail."""
>       assert test_lists[1].head is test_lists[1].tail
E       AssertionError

0-ts/test_dll.py:31: AssertionError
[36m   -[0m [#  17] COI dll: 
--------------------------------------------------------------------------------
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
[34m-  39:             if data:[0m
[32m+  39:             if not data:[0m
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
--------------------------------------------------------------------------------
[0.13211 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfecab00>, <dll.DoubleLinkedList object at 0x7f33bfecad40>, <dll.DoubleLinkedList object at 0x7f33bfeca1a0>)

    def test_list_of_none(test_lists):
        """Test list of none head and tail is none."""
>       assert test_lists[0].head is None
E       AssertionError

0-ts/test_dll.py:25: AssertionError
[36m   -[0m [#  18] COI dll: 
--------------------------------------------------------------------------------
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
[34m-  46:         if old_head:[0m
[32m+  46:         if not old_head:[0m
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
--------------------------------------------------------------------------------
[0.13014 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

self = <dll.DoubleLinkedList object at 0x7f33bfde71f0>, data = 3

>   ???
E   TypeError: 'int' object is not iterable

dll:36: TypeError

During handling of the above exception, another exception occurred:

    @pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
>       one = DoubleLinkedList(3)

0-ts/test_dll.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:40: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfde71f0>, val = 3

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

dll:47: AttributeError
[36m   -[0m [#  19] COI dll: 
--------------------------------------------------------------------------------
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
[34m-  48:         if not (self.tail):[0m
[32m+  48:         if not ((not (self.tail))):[0m
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
   52:     def pop(self):
--------------------------------------------------------------------------------
[0.12967 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_one

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfdbeb30>, <dll.DoubleLinkedList object at 0x7f33bfdbded0>, <dll.DoubleLinkedList object at 0x7f33bfdbc820>)

    def test_list_of_one(test_lists):
        """Test list of one, head is tail."""
>       assert test_lists[1].head is test_lists[1].tail
E       AssertionError

0-ts/test_dll.py:31: AssertionError
[36m   -[0m [#  20] COI dll: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
[34m-  55:         if self._length < 1:[0m
[32m+  55:         if not (self._length < 1):[0m
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.11199 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfa87370>, <dll.DoubleLinkedList object at 0x7f33bfa864a0>, <dll.DoubleLinkedList object at 0x7f33bfa86c50>)

    def test_pop_reduces_length(test_lists):
        """Test pop reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].pop()

0-ts/test_dll.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfa86c50>

>   ???
E   IndexError: Cannot pop from an empty list.

dll:56: IndexError
[36m   -[0m [#  21] COI dll: 
--------------------------------------------------------------------------------
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
[34m-  59:         if new_head:[0m
[32m+  59:         if not new_head:[0m
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
--------------------------------------------------------------------------------
[0.11546 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_removes_prev_pointer

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfa917e0>, <dll.DoubleLinkedList object at 0x7f33bfa927a0>, <dll.DoubleLinkedList object at 0x7f33bfa905b0>)

    def test_pop_removes_prev_pointer(test_lists):
        """Test pop changes prev pointer."""
        test_lists[2].pop()
>       assert test_lists[2].head.prev is None
E       AssertionError

0-ts/test_dll.py:86: AssertionError
[36m   -[0m [#  22] COI dll: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
[34m-  63:         if self._length < 1:[0m
[32m+  63:         if not (self._length < 1):[0m
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.12970 s] [31msurvived[0m
[36m   -[0m [#  23] COI dll: 
--------------------------------------------------------------------------------
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
[34m-  71:         if old_tail:[0m
[32m+  71:         if not old_tail:[0m
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
--------------------------------------------------------------------------------
[0.13638 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_increases_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfc8eb90>, <dll.DoubleLinkedList object at 0x7f33bfc8f700>, <dll.DoubleLinkedList object at 0x7f33bfc8eaa0>)

    def test_append_increases_length(test_lists):
        """Test append increases length."""
>       test_lists[0].append(2)

0-ts/test_dll.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfc8eb90>, val = 2

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

dll:72: AttributeError
[36m   -[0m [#  24] COI dll: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
[34m-  73:         if self._length < 1:[0m
[32m+  73:         if not (self._length < 1):[0m
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.14999 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_on_empty_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd3add0>, <dll.DoubleLinkedList object at 0x7f33bfd3b910>, <dll.DoubleLinkedList object at 0x7f33bfd38490>)

    def test_append_on_empty_list(test_lists):
        """Test append updates tail."""
        test_lists[0].append(6)
        assert test_lists[0].tail.data is 6
>       assert test_lists[0].head.data is 6
E       AttributeError: 'NoneType' object has no attribute 'data'

0-ts/test_dll.py:129: AttributeError
[36m   -[0m [#  25] COI dll: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
[34m-  80:         if self._length < 1:[0m
[32m+  80:         if not (self._length < 1):[0m
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.15453 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfeedf00>, <dll.DoubleLinkedList object at 0x7f33bfeecd30>, <dll.DoubleLinkedList object at 0x7f33bfeed7b0>)

    def test_shift_reduces_length(test_lists):
        """Test shift reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].shift()

0-ts/test_dll.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfeed7b0>

>   ???
E   IndexError: Cannot shift from an empty list.

dll:81: IndexError
[36m   -[0m [#  26] COI dll: 
--------------------------------------------------------------------------------
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
[34m-  84:         if new_tail:[0m
[32m+  84:         if not new_tail:[0m
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
--------------------------------------------------------------------------------
[0.14385 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_removes_next_pointer

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfde7070>, <dll.DoubleLinkedList object at 0x7f33bfde5fc0>, <dll.DoubleLinkedList object at 0x7f33bfde5cc0>)

    def test_shift_removes_next_pointer(test_lists):
        """Test shift changes prev pointer."""
        test_lists[2].shift()
>       assert test_lists[2].tail.next is None
E       AssertionError

0-ts/test_dll.py:174: AssertionError
[36m   -[0m [#  27] COI dll: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
[34m-  88:         if self._length < 1:[0m
[32m+  88:         if not (self._length < 1):[0m
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.14437 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_removes_tail

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfee1a50>, <dll.DoubleLinkedList object at 0x7f33bfee1510>, <dll.DoubleLinkedList object at 0x7f33bfee04f0>)

    def test_shift_removes_tail(test_lists):
        """Test shift removes tail."""
        new_tail = test_lists[2].tail.prev.data
        test_lists[2].shift()
>       assert test_lists[2].tail.data is new_tail
E       AttributeError: 'NoneType' object has no attribute 'data'

0-ts/test_dll.py:168: AttributeError
[36m   -[0m [#  28] COI dll: 
--------------------------------------------------------------------------------
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
[34m-  95:         while curr:[0m
[32m+  95:         while not curr:[0m
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
--------------------------------------------------------------------------------
[0.15437 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfbf3940>, <dll.DoubleLinkedList object at 0x7f33bfbf3100>, <dll.DoubleLinkedList object at 0x7f33bfbf2050>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
>       test_lists[2].remove(3)

0-ts/test_dll.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfbf2050>, val = 3

>   ???
E   ValueError: 3 is not in the list

dll:109: ValueError
[36m   -[0m [#  29] COI dll: 
--------------------------------------------------------------------------------
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
[34m-  96:             if curr.data is val:[0m
[32m+  96:             if not (curr.data is val):[0m
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
--------------------------------------------------------------------------------
[0.15369 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfc63850>, <dll.DoubleLinkedList object at 0x7f33bfc600a0>, <dll.DoubleLinkedList object at 0x7f33bfc632e0>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]
E       AssertionError

0-ts/test_dll.py:211: AssertionError
[36m   -[0m [#  30] COI dll: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
[34m-  97:                 if self._length == 1:[0m
[32m+  97:                 if not (self._length == 1):[0m
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.15194 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe847c0>, <dll.DoubleLinkedList object at 0x7f33bfe84340>, <dll.DoubleLinkedList object at 0x7f33bfe84d60>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]

0-ts/test_dll.py:211: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:116: in _repr
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfe84d60>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

dll:58: AttributeError
[36m   -[0m [#  31] COI dll: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+  99:                 elif not ((curr is not self.head and curr is not self.tail)):[0m
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.15726 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfc63eb0>, <dll.DoubleLinkedList object at 0x7f33bfc628f0>, <dll.DoubleLinkedList object at 0x7f33bfc63b50>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]
E       AssertionError

0-ts/test_dll.py:211: AssertionError
[36m   -[0m [#  32] COI dll: 
--------------------------------------------------------------------------------
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
[34m- 101:                 elif curr is self.head:[0m
[32m+ 101:                 elif not (curr is self.head):[0m
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
--------------------------------------------------------------------------------
[0.17402 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_head_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfbfdb10>, <dll.DoubleLinkedList object at 0x7f33bfbfe8c0>, <dll.DoubleLinkedList object at 0x7f33bfbffbe0>)

    def test_remove_head_of_list(test_lists):
        """Test remove from head of list."""
        test_lists[2].remove(5)
>       assert test_lists[2]._repr() == [4, 3, 2, 1]
E       AssertionError

0-ts/test_dll.py:217: AssertionError
[36m   -[0m [#  33] COI dll: 
--------------------------------------------------------------------------------
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
[34m- 103:                 elif curr is self.tail:[0m
[32m+ 103:                 elif not (curr is self.tail):[0m
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
--------------------------------------------------------------------------------
[0.16016 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_tail_pointers

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfee0d60>, <dll.DoubleLinkedList object at 0x7f33bfee0dc0>, <dll.DoubleLinkedList object at 0x7f33bfee03d0>)

    def test_remove_tail_pointers(test_lists):
        """Test remove from tail of list changes pointers."""
        test_lists[2].remove(1)
>       assert test_lists[2].tail.data is 2
E       AssertionError

0-ts/test_dll.py:260: AssertionError
[36m   -[0m [#  34] COI dll: 
--------------------------------------------------------------------------------
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
[34m- 114:         while True:[0m
[32m+ 114:         while not True:[0m
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
--------------------------------------------------------------------------------
[0.12981 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfa93070>, <dll.DoubleLinkedList object at 0x7f33bfa936a0>, <dll.DoubleLinkedList object at 0x7f33bfa91d50>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]
E       AssertionError

0-ts/test_dll.py:211: AssertionError
[36m   -[0m [#  35] CRP dll: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[32m+  15:         return 'mutpy'.format(self.data)[0m
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.11338 s] [31msurvived[0m
[36m   -[0m [#  36] CRP dll: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[32m+  15:         return ''.format(self.data)[0m
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.14138 s] [31msurvived[0m
[36m   -[0m [#  37] CRP dll: 
--------------------------------------------------------------------------------
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
   33:         self.tail = None
[34m-  34:         self._length = 0[0m
[32m+  34:         self._length = 1[0m
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
--------------------------------------------------------------------------------
[0.11420 s] [32mkilled[0m by 0-ts/test_dll.py::test_push_increases_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfbf14e0>, <dll.DoubleLinkedList object at 0x7f33bfbf0640>, <dll.DoubleLinkedList object at 0x7f33bfbf0d60>)

    def test_push_increases_length(test_lists):
        """Test push increases length."""
        test_lists[0].push(2)
>       assert test_lists[0]._length is 1
E       AssertionError

0-ts/test_dll.py:53: AssertionError
[36m   -[0m [#  38] CRP dll: 
--------------------------------------------------------------------------------
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
[34m-  50:         self._length += 1[0m
[32m+  50:         self._length += 2[0m
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
--------------------------------------------------------------------------------
[0.11399 s] [32mkilled[0m by 0-ts/test_dll.py::test_push_increases_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfedeef0>, <dll.DoubleLinkedList object at 0x7f33bfedc7f0>, <dll.DoubleLinkedList object at 0x7f33bfedceb0>)

    def test_push_increases_length(test_lists):
        """Test push increases length."""
        test_lists[0].push(2)
>       assert test_lists[0]._length is 1
E       AssertionError

0-ts/test_dll.py:53: AssertionError
[36m   -[0m [#  39] CRP dll: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
[34m-  55:         if self._length < 1:[0m
[32m+  55:         if self._length < 2:[0m
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.13804 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_list_one

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfedc9d0>, <dll.DoubleLinkedList object at 0x7f33bfedd030>, <dll.DoubleLinkedList object at 0x7f33bfedf970>)

    def test_pop_list_one(test_lists):
        """Test pop decreases length."""
>       test_lists[1].pop()

0-ts/test_dll.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfedd030>

>   ???
E   IndexError: Cannot pop from an empty list.

dll:56: IndexError
[36m   -[0m [#  40] CRP dll: 
--------------------------------------------------------------------------------
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
[34m-  56:             raise IndexError('Cannot pop from an empty list.')[0m
[32m+  56:             raise IndexError('mutpy')[0m
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
--------------------------------------------------------------------------------
[0.14559 s] [32mkilled[0m by 0-ts/test_dll.py::test_cant_pop_on_empty_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfc961d0>, <dll.DoubleLinkedList object at 0x7f33bfc96da0>, <dll.DoubleLinkedList object at 0x7f33bfc965f0>)

    def test_cant_pop_on_empty_list(test_lists):
        """Test pop on an empty list raises error."""
        with pytest.raises(IndexError, match='Cannot pop from an empty list'):
>           test_lists[0].pop()

0-ts/test_dll.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfc961d0>

>   ???
E   IndexError: mutpy

dll:56: IndexError

During handling of the above exception, another exception occurred:

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfc961d0>, <dll.DoubleLinkedList object at 0x7f33bfc96da0>, <dll.DoubleLinkedList object at 0x7f33bfc965f0>)

    def test_cant_pop_on_empty_list(test_lists):
        """Test pop on an empty list raises error."""
>       with pytest.raises(IndexError, match='Cannot pop from an empty list'):
E       AssertionError: Regex pattern 'Cannot pop from an empty list' does not match 'mutpy'.

0-ts/test_dll.py:102: AssertionError
[36m   -[0m [#  41] CRP dll: 
--------------------------------------------------------------------------------
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
[34m-  56:             raise IndexError('Cannot pop from an empty list.')[0m
[32m+  56:             raise IndexError('')[0m
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
--------------------------------------------------------------------------------
[0.15104 s] [32mkilled[0m by 0-ts/test_dll.py::test_cant_pop_on_empty_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfc70670>, <dll.DoubleLinkedList object at 0x7f33bfc70820>, <dll.DoubleLinkedList object at 0x7f33bfc707f0>)

    def test_cant_pop_on_empty_list(test_lists):
        """Test pop on an empty list raises error."""
        with pytest.raises(IndexError, match='Cannot pop from an empty list'):
>           test_lists[0].pop()

0-ts/test_dll.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfc70670>

>   ???
E   IndexError

dll:56: IndexError

During handling of the above exception, another exception occurred:

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfc70670>, <dll.DoubleLinkedList object at 0x7f33bfc70820>, <dll.DoubleLinkedList object at 0x7f33bfc707f0>)

    def test_cant_pop_on_empty_list(test_lists):
        """Test pop on an empty list raises error."""
>       with pytest.raises(IndexError, match='Cannot pop from an empty list'):
E       AssertionError: Regex pattern 'Cannot pop from an empty list' does not match ''.

0-ts/test_dll.py:102: AssertionError
[36m   -[0m [#  42] CRP dll: 
--------------------------------------------------------------------------------
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
[34m-  62:         self._length -= 1[0m
[32m+  62:         self._length -= 2[0m
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
--------------------------------------------------------------------------------
[0.14470 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bff61a20>, <dll.DoubleLinkedList object at 0x7f33bff631c0>, <dll.DoubleLinkedList object at 0x7f33bff616c0>)

    def test_pop_reduces_length(test_lists):
        """Test pop reduces lists."""
        old_length = test_lists[2]._length
        test_lists[2].pop()
>       assert test_lists[2]._length is old_length - 1
E       AssertionError

0-ts/test_dll.py:73: AssertionError
[36m   -[0m [#  43] CRP dll: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
[34m-  63:         if self._length < 1:[0m
[32m+  63:         if self._length < 2:[0m
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.13216 s] [31msurvived[0m
[36m   -[0m [#  44] CRP dll: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
[34m-  73:         if self._length < 1:[0m
[32m+  73:         if self._length < 2:[0m
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.11047 s] [31msurvived[0m
[36m   -[0m [#  45] CRP dll: 
--------------------------------------------------------------------------------
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
[34m-  75:         self._length += 1[0m
[32m+  75:         self._length += 2[0m
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
--------------------------------------------------------------------------------
[0.14866 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_increases_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bffe59f0>, <dll.DoubleLinkedList object at 0x7f33bffe4700>, <dll.DoubleLinkedList object at 0x7f33bffe5420>)

    def test_append_increases_length(test_lists):
        """Test append increases length."""
        test_lists[0].append(2)
>       assert test_lists[0]._length is 1
E       AssertionError

0-ts/test_dll.py:109: AssertionError
[36m   -[0m [#  46] CRP dll: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
[34m-  80:         if self._length < 1:[0m
[32m+  80:         if self._length < 2:[0m
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.15391 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_list_one

test_lists = (<dll.DoubleLinkedList object at 0x7f33bff60fd0>, <dll.DoubleLinkedList object at 0x7f33bff60af0>, <dll.DoubleLinkedList object at 0x7f33bff62080>)

    def test_shift_list_one(test_lists):
        """Test shift decreases length."""
>       test_lists[1].shift()

0-ts/test_dll.py:179: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bff60af0>

>   ???
E   IndexError: Cannot shift from an empty list.

dll:81: IndexError
[36m   -[0m [#  47] CRP dll: 
--------------------------------------------------------------------------------
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
[34m-  81:             raise IndexError('Cannot shift from an empty list.')[0m
[32m+  81:             raise IndexError('mutpy')[0m
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
--------------------------------------------------------------------------------
[0.15122 s] [32mkilled[0m by 0-ts/test_dll.py::test_cant_shift_on_empty_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfde6e90>, <dll.DoubleLinkedList object at 0x7f33bfde6890>, <dll.DoubleLinkedList object at 0x7f33bfde5870>)

    def test_cant_shift_on_empty_list(test_lists):
        """Test shift on an empty list raises error."""
        with pytest.raises(IndexError, match='Cannot shift from an empty list'):
>           test_lists[0].shift()

0-ts/test_dll.py:186: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfde6e90>

>   ???
E   IndexError: mutpy

dll:81: IndexError

During handling of the above exception, another exception occurred:

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfde6e90>, <dll.DoubleLinkedList object at 0x7f33bfde6890>, <dll.DoubleLinkedList object at 0x7f33bfde5870>)

    def test_cant_shift_on_empty_list(test_lists):
        """Test shift on an empty list raises error."""
>       with pytest.raises(IndexError, match='Cannot shift from an empty list'):
E       AssertionError: Regex pattern 'Cannot shift from an empty list' does not match 'mutpy'.

0-ts/test_dll.py:185: AssertionError
[36m   -[0m [#  48] CRP dll: 
--------------------------------------------------------------------------------
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
[34m-  81:             raise IndexError('Cannot shift from an empty list.')[0m
[32m+  81:             raise IndexError('')[0m
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
--------------------------------------------------------------------------------
[0.12535 s] [32mkilled[0m by 0-ts/test_dll.py::test_cant_shift_on_empty_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd5cc70>, <dll.DoubleLinkedList object at 0x7f33bfd5c0a0>, <dll.DoubleLinkedList object at 0x7f33bfd5d0c0>)

    def test_cant_shift_on_empty_list(test_lists):
        """Test shift on an empty list raises error."""
        with pytest.raises(IndexError, match='Cannot shift from an empty list'):
>           test_lists[0].shift()

0-ts/test_dll.py:186: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfd5cc70>

>   ???
E   IndexError

dll:81: IndexError

During handling of the above exception, another exception occurred:

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd5cc70>, <dll.DoubleLinkedList object at 0x7f33bfd5c0a0>, <dll.DoubleLinkedList object at 0x7f33bfd5d0c0>)

    def test_cant_shift_on_empty_list(test_lists):
        """Test shift on an empty list raises error."""
>       with pytest.raises(IndexError, match='Cannot shift from an empty list'):
E       AssertionError: Regex pattern 'Cannot shift from an empty list' does not match ''.

0-ts/test_dll.py:185: AssertionError
[36m   -[0m [#  49] CRP dll: 
--------------------------------------------------------------------------------
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
[34m-  87:         self._length -= 1[0m
[32m+  87:         self._length -= 2[0m
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
--------------------------------------------------------------------------------
[0.15185 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfdb2080>, <dll.DoubleLinkedList object at 0x7f33bfdb2800>, <dll.DoubleLinkedList object at 0x7f33bfdb0a60>)

    def test_shift_reduces_length(test_lists):
        """Test shift reduces lists."""
        old_length = test_lists[2]._length
        test_lists[2].shift()
>       assert test_lists[2]._length is old_length - 1
E       AssertionError

0-ts/test_dll.py:161: AssertionError
[36m   -[0m [#  50] CRP dll: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
[34m-  88:         if self._length < 1:[0m
[32m+  88:         if self._length < 2:[0m
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.15557 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_sequence

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfdbcd00>, <dll.DoubleLinkedList object at 0x7f33bfdbd3f0>, <dll.DoubleLinkedList object at 0x7f33bfdbd1b0>)

    def test_shift_sequence(test_lists):
        """Test that entire sequence is returned by successive shifts."""
        l = []
        while True:
            try:
>               shifted_data = test_lists[2].shift()

0-ts/test_dll.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfdbd1b0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

dll:83: AttributeError
[36m   -[0m [#  51] CRP dll: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
[34m-  97:                 if self._length == 1:[0m
[32m+  97:                 if self._length == 2:[0m
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.14990 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_list_of_one_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe1bd60>, <dll.DoubleLinkedList object at 0x7f33bfe1b3a0>, <dll.DoubleLinkedList object at 0x7f33bfe1a800>)

    def test_remove_list_of_one_length(test_lists):
        """Test remove on list of one."""
>       test_lists[1].remove(3)

0-ts/test_dll.py:266: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfe1b3a0>, val = 3

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

dll:102: AttributeError
[36m   -[0m [#  52] CRP dll: 
--------------------------------------------------------------------------------
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
[34m- 105:                 self._length -= 1[0m
[32m+ 105:                 self._length -= 2[0m
  106:                 return
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
--------------------------------------------------------------------------------
[0.14738 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd560e0>, <dll.DoubleLinkedList object at 0x7f33bfd55ed0>, <dll.DoubleLinkedList object at 0x7f33bfd562f0>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]
E       AssertionError

0-ts/test_dll.py:211: AssertionError
[36m   -[0m [#  53] CRP dll: 
--------------------------------------------------------------------------------
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
[34m- 109:         raise ValueError('{} is not in the list'.format(val))[0m
[32m+ 109:         raise ValueError('mutpy'.format(val))[0m
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
--------------------------------------------------------------------------------
[0.14017 s] [31msurvived[0m
[36m   -[0m [#  54] CRP dll: 
--------------------------------------------------------------------------------
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
[34m- 109:         raise ValueError('{} is not in the list'.format(val))[0m
[32m+ 109:         raise ValueError(''.format(val))[0m
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
--------------------------------------------------------------------------------
[0.11201 s] [31msurvived[0m
[36m   -[0m [#  55] EHD dll: 
--------------------------------------------------------------------------------
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
[34m-  39:             if data:[0m
[34m-  40:                 self.push(data)[0m
[32m+  39:             raise[0m
[32m+  40:     [0m
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.13480 s] [36mincompetent[0m

TypeError: dll:36: TypeError: 'NoneType' object is not iterable

[36m   -[0m [#  56] EHD dll: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
[34m- 119:                 break[0m
[32m+ 119:                 raise[0m
  120:         return l
--------------------------------------------------------------------------------
[0.13114 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bff24250>, <dll.DoubleLinkedList object at 0x7f33bff242e0>, <dll.DoubleLinkedList object at 0x7f33bff24a30>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]

0-ts/test_dll.py:211: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:116: in _repr
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bff24a30>

>   ???
E   IndexError: Cannot pop from an empty list.

dll:56: IndexError
[36m   -[0m [#  57] EXS dll: 
--------------------------------------------------------------------------------
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
[34m-  39:             if data:[0m
[34m-  40:                 self.push(data)[0m
[32m+  39:             pass[0m
[32m+  40:     [0m
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.14413 s] [32mkilled[0m by 0-ts/test_dll.py::test_push_points_back

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfa91060>, <dll.DoubleLinkedList object at 0x7f33bfa92c20>, <dll.DoubleLinkedList object at 0x7f33bfa90970>)

    def test_push_points_back(test_lists):
        """Test old head points to new with prev after a push."""
        old_head = test_lists[1].head
        test_lists[1].push(6)
>       assert test_lists[1].head is old_head.prev
E       AttributeError: 'NoneType' object has no attribute 'prev'

0-ts/test_dll.py:66: AttributeError
[36m   -[0m [#  58] EXS dll: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
[34m- 119:                 break[0m
[32m+ 119:                 pass[0m
  120:         return l
--------------------------------------------------------------------------------
[5.00534 s] [33mtimeout[0m
[36m   -[0m [#  59] LCR dll: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+  99:                 elif (curr is not self.head or curr is not self.tail):[0m
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.15250 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_head_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfee2920>, <dll.DoubleLinkedList object at 0x7f33bfee13f0>, <dll.DoubleLinkedList object at 0x7f33bfee3bb0>)

    def test_remove_head_of_list(test_lists):
        """Test remove from head of list."""
>       test_lists[2].remove(5)

0-ts/test_dll.py:216: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfee3bb0>, val = 5

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

dll:100: AttributeError
[36m   -[0m [#  60] OIL dll: 
--------------------------------------------------------------------------------
   34:         self._length = 0
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
[34m-  38:         except TypeError:[0m
[32m+  38:                 breakexcept TypeError:[0m
   39:             if data:
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
--------------------------------------------------------------------------------
[0.13567 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_five

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe1aec0>, <dll.DoubleLinkedList object at 0x7f33bfe1a740>, <dll.DoubleLinkedList object at 0x7f33bfe19210>)

    def test_list_of_five(test_lists):
        """Test list of five."""
>       assert test_lists[2].head.data is 5
E       AssertionError

0-ts/test_dll.py:36: AssertionError
[36m   -[0m [#  61] OIL dll: 
--------------------------------------------------------------------------------
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
[34m- 108:         [0m
[32m+ 108:             break[0m
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
--------------------------------------------------------------------------------
[0.12943 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd39b10>, <dll.DoubleLinkedList object at 0x7f33bfd3a020>, <dll.DoubleLinkedList object at 0x7f33bfd394e0>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
>       test_lists[2].remove(3)

0-ts/test_dll.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfd394e0>, val = 3

>   ???
E   ValueError: 3 is not in the list

dll:109: ValueError
[36m   -[0m [#  62] OIL dll: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
[34m- 119:                 break[0m
[32m+ 119:                 breakbreak[0m
  120:         return l
--------------------------------------------------------------------------------
[0.13439 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfdec9a0>, <dll.DoubleLinkedList object at 0x7f33bfdedc30>, <dll.DoubleLinkedList object at 0x7f33bfdef580>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]
E       AssertionError

0-ts/test_dll.py:211: AssertionError
[36m   -[0m [#  63] RIL dll: 
--------------------------------------------------------------------------------
   32:         self.head = None
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
[34m-  36:             for val in data:[0m
[32m+  36:             for val in reversed(data):[0m
   37:                 self.push(val)
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
--------------------------------------------------------------------------------
[0.13483 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_five

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd384c0>, <dll.DoubleLinkedList object at 0x7f33bfd38730>, <dll.DoubleLinkedList object at 0x7f33bfd381f0>)

    def test_list_of_five(test_lists):
        """Test list of five."""
>       assert test_lists[2].head.data is 5
E       AssertionError

0-ts/test_dll.py:36: AssertionError
[36m   -[0m [#  64] ROR dll: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
[34m-  55:         if self._length < 1:[0m
[32m+  55:         if self._length > 1:[0m
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.12900 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfdbc850>, <dll.DoubleLinkedList object at 0x7f33bfdbe2f0>, <dll.DoubleLinkedList object at 0x7f33bfdbe6b0>)

    def test_pop_reduces_length(test_lists):
        """Test pop reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].pop()

0-ts/test_dll.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfdbe6b0>

>   ???
E   IndexError: Cannot pop from an empty list.

dll:56: IndexError
[36m   -[0m [#  65] ROR dll: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
[34m-  55:         if self._length < 1:[0m
[32m+  55:         if self._length <= 1:[0m
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.13812 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_list_one

test_lists = (<dll.DoubleLinkedList object at 0x7f33bff63fd0>, <dll.DoubleLinkedList object at 0x7f33bff62a70>, <dll.DoubleLinkedList object at 0x7f33bff63cd0>)

    def test_pop_list_one(test_lists):
        """Test pop decreases length."""
>       test_lists[1].pop()

0-ts/test_dll.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bff62a70>

>   ???
E   IndexError: Cannot pop from an empty list.

dll:56: IndexError
[36m   -[0m [#  66] ROR dll: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
[34m-  63:         if self._length < 1:[0m
[32m+  63:         if self._length > 1:[0m
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.11369 s] [31msurvived[0m
[36m   -[0m [#  67] ROR dll: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
[34m-  63:         if self._length < 1:[0m
[32m+  63:         if self._length <= 1:[0m
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.17286 s] [31msurvived[0m
[36m   -[0m [#  68] ROR dll: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
[34m-  73:         if self._length < 1:[0m
[32m+  73:         if self._length > 1:[0m
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.14127 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_on_empty_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfedcb80>, <dll.DoubleLinkedList object at 0x7f33bfedeb30>, <dll.DoubleLinkedList object at 0x7f33c04cb130>)

    def test_append_on_empty_list(test_lists):
        """Test append updates tail."""
        test_lists[0].append(6)
        assert test_lists[0].tail.data is 6
>       assert test_lists[0].head.data is 6
E       AttributeError: 'NoneType' object has no attribute 'data'

0-ts/test_dll.py:129: AttributeError
[36m   -[0m [#  69] ROR dll: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
[34m-  73:         if self._length < 1:[0m
[32m+  73:         if self._length <= 1:[0m
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.13443 s] [31msurvived[0m
[36m   -[0m [#  70] ROR dll: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
[34m-  80:         if self._length < 1:[0m
[32m+  80:         if self._length > 1:[0m
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.14176 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfbb5630>, <dll.DoubleLinkedList object at 0x7f33bfbb5060>, <dll.DoubleLinkedList object at 0x7f33bfbb6740>)

    def test_shift_reduces_length(test_lists):
        """Test shift reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].shift()

0-ts/test_dll.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfbb6740>

>   ???
E   IndexError: Cannot shift from an empty list.

dll:81: IndexError
[36m   -[0m [#  71] ROR dll: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
[34m-  80:         if self._length < 1:[0m
[32m+  80:         if self._length <= 1:[0m
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.13085 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_list_one

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfee1ab0>, <dll.DoubleLinkedList object at 0x7f33bfee0490>, <dll.DoubleLinkedList object at 0x7f33bfee0dc0>)

    def test_shift_list_one(test_lists):
        """Test shift decreases length."""
>       test_lists[1].shift()

0-ts/test_dll.py:179: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfee0490>

>   ???
E   IndexError: Cannot shift from an empty list.

dll:81: IndexError
[36m   -[0m [#  72] ROR dll: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
[34m-  88:         if self._length < 1:[0m
[32m+  88:         if self._length > 1:[0m
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.14684 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_removes_tail

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd5dcc0>, <dll.DoubleLinkedList object at 0x7f33bfd5c1f0>, <dll.DoubleLinkedList object at 0x7f33bfd5dea0>)

    def test_shift_removes_tail(test_lists):
        """Test shift removes tail."""
        new_tail = test_lists[2].tail.prev.data
        test_lists[2].shift()
>       assert test_lists[2].tail.data is new_tail
E       AttributeError: 'NoneType' object has no attribute 'data'

0-ts/test_dll.py:168: AttributeError
[36m   -[0m [#  73] ROR dll: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
[34m-  88:         if self._length < 1:[0m
[32m+  88:         if self._length <= 1:[0m
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.14520 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_sequence

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfcd46d0>, <dll.DoubleLinkedList object at 0x7f33bfcd43d0>, <dll.DoubleLinkedList object at 0x7f33bfcd4520>)

    def test_shift_sequence(test_lists):
        """Test that entire sequence is returned by successive shifts."""
        l = []
        while True:
            try:
>               shifted_data = test_lists[2].shift()

0-ts/test_dll.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfcd4520>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

dll:83: AttributeError
[36m   -[0m [#  74] ROR dll: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
[34m-  97:                 if self._length == 1:[0m
[32m+  97:                 if self._length != 1:[0m
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.15125 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe7e140>, <dll.DoubleLinkedList object at 0x7f33bfe7c8e0>, <dll.DoubleLinkedList object at 0x7f33bfe7d270>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]

0-ts/test_dll.py:211: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:116: in _repr
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfe7d270>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

dll:58: AttributeError
[36m   -[0m [#  75] SDI dll: 
--------------------------------------------------------------------------------
    3: 
    4: class Node(object):
    5:     '''Node class for data storage.'''
    6:     
[34m-   7:     def __init__(self, data=None, next_node=None, prev=None):[0m
[34m-   8:         '''Initialize Node.'''[0m
[34m-   9:         self.data = data[0m
[34m-  10:         self.next = next_node[0m
[34m-  11:         self.prev = prev[0m
[34m-  12:     [0m
[32m+   7:     @staticmethod[0m
[32m+   8:     def __init__(self, data=None, next_node=None, prev=None):[0m
[32m+   9:         '''Initialize Node.'''[0m
[32m+  10:         self.data = data[0m
[32m+  11:         self.next = next_node[0m
[32m+  12:         self.prev = prev[0m
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
   16: 
--------------------------------------------------------------------------------
[0.16171 s] [32mkilled[0m by 0-ts/test_dll.py::test_node_class

def test_node_class():
        """Test node class has data."""
        from dll import Node
>       node = Node(5)

0-ts/test_dll.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = 5, data = None, next_node = None, prev = None

>   ???
E   AttributeError: 'int' object has no attribute 'data'

dll:10: AttributeError
[36m   -[0m [#  76] SDI dll: 
--------------------------------------------------------------------------------
    9:         self.data = data
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
[34m-  13:     def __repr__(self):[0m
[34m-  14:         '''String representation.'''[0m
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[34m-  16: [0m
[32m+  13:     @staticmethod[0m
[32m+  14:     def __repr__(self):[0m
[32m+  15:         '''String representation.'''[0m
[32m+  16:         return 'Value: {}'.format(self.data)[0m
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
   20: 
--------------------------------------------------------------------------------
[0.13325 s] [31msurvived[0m
[36m   -[0m [#  77] SDI dll: 
--------------------------------------------------------------------------------
   26:     remove(val) - will remove the first instance of (val) found in the list,
   27:     starting from the head.
   28:     '''
   29:     
[34m-  30:     def __init__(self, data=None):[0m
[34m-  31:         '''Initialize list.'''[0m
[34m-  32:         self.head = None[0m
[34m-  33:         self.tail = None[0m
[34m-  34:         self._length = 0[0m
[34m-  35:         try:[0m
[34m-  36:             for val in data:[0m
[34m-  37:                 self.push(val)[0m
[34m-  38:         except TypeError:[0m
[34m-  39:             if data:[0m
[34m-  40:                 self.push(data)[0m
[34m-  41:     [0m
[32m+  30:     @staticmethod[0m
[32m+  31:     def __init__(self, data=None):[0m
[32m+  32:         '''Initialize list.'''[0m
[32m+  33:         self.head = None[0m
[32m+  34:         self.tail = None[0m
[32m+  35:         self._length = 0[0m
[32m+  36:         try:[0m
[32m+  37:             for val in data:[0m
[32m+  38:                 self.push(val)[0m
[32m+  39:         except TypeError:[0m
[32m+  40:             if data:[0m
[32m+  41:                 self.push(data)[0m
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
--------------------------------------------------------------------------------
[0.13194 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:10: TypeError: DoubleLinkedList.__init__() missing 1 required positional argument: 'self'

[36m   -[0m [#  78] SDI dll: 
--------------------------------------------------------------------------------
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
[34m-  42:     def push(self, val):[0m
[34m-  43:         '''Add val to the head of the list.'''[0m
[34m-  44:         old_head = self.head[0m
[34m-  45:         self.head = Node(val, next_node=old_head)[0m
[34m-  46:         if old_head:[0m
[34m-  47:             old_head.prev = self.head[0m
[34m-  48:         if not (self.tail):[0m
[34m-  49:             self.tail = self.head[0m
[34m-  50:         self._length += 1[0m
[34m-  51:     [0m
[32m+  42:     @staticmethod[0m
[32m+  43:     def push(self, val):[0m
[32m+  44:         '''Add val to the head of the list.'''[0m
[32m+  45:         old_head = self.head[0m
[32m+  46:         self.head = Node(val, next_node=old_head)[0m
[32m+  47:         if old_head:[0m
[32m+  48:             old_head.prev = self.head[0m
[32m+  49:         if not (self.tail):[0m
[32m+  50:             self.tail = self.head[0m
[32m+  51:         self._length += 1[0m
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
--------------------------------------------------------------------------------
[0.13414 s] [36mincompetent[0m

TypeError: dll:40: TypeError: DoubleLinkedList.push() missing 1 required positional argument: 'val'

[36m   -[0m [#  79] SDI dll: 
--------------------------------------------------------------------------------
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
[34m-  52:     def pop(self):[0m
[34m-  53:         '''Remove the val from the head of the list.'''[0m
[34m-  54:         to_return = self.head[0m
[34m-  55:         if self._length < 1:[0m
[34m-  56:             raise IndexError('Cannot pop from an empty list.')[0m
[34m-  57:         [0m
[34m-  58:         new_head = self.head.next[0m
[34m-  59:         if new_head:[0m
[34m-  60:             new_head.prev = None[0m
[34m-  61:         self.head = new_head[0m
[34m-  62:         self._length -= 1[0m
[34m-  63:         if self._length < 1:[0m
[34m-  64:             self.tail = None[0m
[34m-  65:         return to_return.data[0m
[34m-  66:     [0m
[32m+  52:     @staticmethod[0m
[32m+  53:     def pop(self):[0m
[32m+  54:         '''Remove the val from the head of the list.'''[0m
[32m+  55:         to_return = self.head[0m
[32m+  56:         if self._length < 1:[0m
[32m+  57:             raise IndexError('Cannot pop from an empty list.')[0m
[32m+  58:         [0m
[32m+  59:         new_head = self.head.next[0m
[32m+  60:         if new_head:[0m
[32m+  61:             new_head.prev = None[0m
[32m+  62:         self.head = new_head[0m
[32m+  63:         self._length -= 1[0m
[32m+  64:         if self._length < 1:[0m
[32m+  65:             self.tail = None[0m
[32m+  66:         return to_return.data[0m
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
--------------------------------------------------------------------------------
[0.11202 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:72: TypeError: DoubleLinkedList.pop() missing 1 required positional argument: 'self'

[36m   -[0m [#  80] SDI dll: 
--------------------------------------------------------------------------------
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
[34m-  67:     def append(self, val):[0m
[34m-  68:         '''Add val to the tail of the list.'''[0m
[34m-  69:         old_tail = self.tail[0m
[34m-  70:         self.tail = Node(val, prev=old_tail)[0m
[34m-  71:         if old_tail:[0m
[34m-  72:             old_tail.next = self.tail[0m
[34m-  73:         if self._length < 1:[0m
[34m-  74:             self.head = self.tail[0m
[34m-  75:         self._length += 1[0m
[34m-  76:     [0m
[32m+  67:     @staticmethod[0m
[32m+  68:     def append(self, val):[0m
[32m+  69:         '''Add val to the tail of the list.'''[0m
[32m+  70:         old_tail = self.tail[0m
[32m+  71:         self.tail = Node(val, prev=old_tail)[0m
[32m+  72:         if old_tail:[0m
[32m+  73:             old_tail.next = self.tail[0m
[32m+  74:         if self._length < 1:[0m
[32m+  75:             self.head = self.tail[0m
[32m+  76:         self._length += 1[0m
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
--------------------------------------------------------------------------------
[0.11588 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:108: TypeError: DoubleLinkedList.append() missing 1 required positional argument: 'val'

[36m   -[0m [#  81] SDI dll: 
--------------------------------------------------------------------------------
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
[34m-  77:     def shift(self):[0m
[34m-  78:         '''Remove the val from the tail of the list.'''[0m
[34m-  79:         to_return = self.tail[0m
[34m-  80:         if self._length < 1:[0m
[34m-  81:             raise IndexError('Cannot shift from an empty list.')[0m
[34m-  82:         [0m
[34m-  83:         new_tail = self.tail.prev[0m
[34m-  84:         if new_tail:[0m
[34m-  85:             new_tail.next = None[0m
[34m-  86:         self.tail = new_tail[0m
[34m-  87:         self._length -= 1[0m
[34m-  88:         if self._length < 1:[0m
[34m-  89:             self.tail = None[0m
[34m-  90:         return to_return.data[0m
[34m-  91:     [0m
[32m+  77:     @staticmethod[0m
[32m+  78:     def shift(self):[0m
[32m+  79:         '''Remove the val from the tail of the list.'''[0m
[32m+  80:         to_return = self.tail[0m
[32m+  81:         if self._length < 1:[0m
[32m+  82:             raise IndexError('Cannot shift from an empty list.')[0m
[32m+  83:         [0m
[32m+  84:         new_tail = self.tail.prev[0m
[32m+  85:         if new_tail:[0m
[32m+  86:             new_tail.next = None[0m
[32m+  87:         self.tail = new_tail[0m
[32m+  88:         self._length -= 1[0m
[32m+  89:         if self._length < 1:[0m
[32m+  90:             self.tail = None[0m
[32m+  91:         return to_return.data[0m
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
--------------------------------------------------------------------------------
[0.14634 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:160: TypeError: DoubleLinkedList.shift() missing 1 required positional argument: 'self'

[36m   -[0m [#  82] SDI dll: 
--------------------------------------------------------------------------------
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
[34m-  92:     def remove(self, val):[0m
[34m-  93:         '''Remove first occurance of val from list.'''[0m
[34m-  94:         curr = self.head[0m
[34m-  95:         while curr:[0m
[34m-  96:             if curr.data is val:[0m
[34m-  97:                 if self._length == 1:[0m
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[34m- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[34m- 101:                 elif curr is self.head:[0m
[34m- 102:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[34m- 103:                 elif curr is self.tail:[0m
[34m- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[34m- 105:                 self._length -= 1[0m
[34m- 106:                 return[0m
[34m- 107:             curr = curr.next[0m
[34m- 108:         [0m
[34m- 109:         raise ValueError('{} is not in the list'.format(val))[0m
[34m- 110:     [0m
[32m+  92:     @staticmethod[0m
[32m+  93:     def remove(self, val):[0m
[32m+  94:         '''Remove first occurance of val from list.'''[0m
[32m+  95:         curr = self.head[0m
[32m+  96:         while curr:[0m
[32m+  97:             if curr.data is val:[0m
[32m+  98:                 if self._length == 1:[0m
[32m+  99:                     (self.head, self.tail) = (None, None)[0m
[32m+ 100:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+ 101:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[32m+ 102:                 elif curr is self.head:[0m
[32m+ 103:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[32m+ 104:                 elif curr is self.tail:[0m
[32m+ 105:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[32m+ 106:                 self._length -= 1[0m
[32m+ 107:                 return[0m
[32m+ 108:             curr = curr.next[0m
[32m+ 109:         [0m
[32m+ 110:         raise ValueError('{} is not in the list'.format(val))[0m
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
--------------------------------------------------------------------------------
[0.14514 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:210: TypeError: DoubleLinkedList.remove() missing 1 required positional argument: 'val'

[36m   -[0m [#  83] SDI dll: 
--------------------------------------------------------------------------------
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
[34m- 111:     def _repr(self):[0m
[34m- 112:         '''Return list representation of dll.'''[0m
[34m- 113:         l = [][0m
[34m- 114:         while True:[0m
[34m- 115:             try:[0m
[34m- 116:                 popped_data = self.pop()[0m
[34m- 117:                 l.append(popped_data)[0m
[34m- 118:             except IndexError:[0m
[34m- 119:                 break[0m
[34m- 120:         return l[0m
[32m+ 111:     @staticmethod[0m
[32m+ 112:     def _repr(self):[0m
[32m+ 113:         '''Return list representation of dll.'''[0m
[32m+ 114:         l = [][0m
[32m+ 115:         while True:[0m
[32m+ 116:             try:[0m
[32m+ 117:                 popped_data = self.pop()[0m
[32m+ 118:                 l.append(popped_data)[0m
[32m+ 119:             except IndexError:[0m
[32m+ 120:                 break[0m
[32m+ 121:         return l[0m
--------------------------------------------------------------------------------
[0.17609 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/dll/0-ts/test_dll.py:211: TypeError: DoubleLinkedList._repr() missing 1 required positional argument: 'self'

[36m   -[0m [#  84] SDL dll: 
--------------------------------------------------------------------------------
    5:     '''Node class for data storage.'''
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
[34m-   9:         self.data = data[0m
[32m+   9:         pass[0m
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
--------------------------------------------------------------------------------
[0.11562 s] [32mkilled[0m by 0-ts/test_dll.py::test_node_class

def test_node_class():
        """Test node class has data."""
        from dll import Node
        node = Node(5)
>       assert node.data is 5
E       AttributeError: 'Node' object has no attribute 'data'

0-ts/test_dll.py:20: AttributeError
[36m   -[0m [#  85] SDL dll: 
--------------------------------------------------------------------------------
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
[34m-  10:         self.next = next_node[0m
[32m+  10:         pass[0m
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
--------------------------------------------------------------------------------
[0.14068 s] [32mkilled[0m by 0-ts/test_dll.py::test_next_pointer

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfbb5f60>, <dll.DoubleLinkedList object at 0x7f33bfbb4fd0>, <dll.DoubleLinkedList object at 0x7f33bfbb6980>)

    def test_next_pointer(test_lists):
        """Test next pointer."""
>       assert test_lists[2].head.next.data is 4
E       AttributeError: 'Node' object has no attribute 'next'

0-ts/test_dll.py:47: AttributeError
[36m   -[0m [#  86] SDL dll: 
--------------------------------------------------------------------------------
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
   10:         self.next = next_node
[34m-  11:         self.prev = prev[0m
[32m+  11:         pass[0m
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
--------------------------------------------------------------------------------
[0.14863 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_list_one

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfedef50>, <dll.DoubleLinkedList object at 0x7f33bfedee60>, <dll.DoubleLinkedList object at 0x7f33bfedc1f0>)

    def test_shift_list_one(test_lists):
        """Test shift decreases length."""
>       test_lists[1].shift()

0-ts/test_dll.py:179: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfedee60>

>   ???
E   AttributeError: 'Node' object has no attribute 'prev'

dll:83: AttributeError
[36m   -[0m [#  87] SDL dll: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[32m+  15:         pass[0m
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.14228 s] [31msurvived[0m
[36m   -[0m [#  88] SDL dll: 
--------------------------------------------------------------------------------
   28:     '''
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
[34m-  32:         self.head = None[0m
[32m+  32:         pass[0m
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
--------------------------------------------------------------------------------
[0.11017 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

self = <dll.DoubleLinkedList object at 0x7f33bffde320>, data = 3

>   ???
E   TypeError: 'int' object is not iterable

dll:36: TypeError

During handling of the above exception, another exception occurred:

    @pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
>       one = DoubleLinkedList(3)

0-ts/test_dll.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:40: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bffde320>, val = 3

>   ???
E   AttributeError: 'DoubleLinkedList' object has no attribute 'head'

dll:44: AttributeError
[36m   -[0m [#  89] SDL dll: 
--------------------------------------------------------------------------------
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
[34m-  33:         self.tail = None[0m
[32m+  33:         pass[0m
   34:         self._length = 0
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
--------------------------------------------------------------------------------
[0.13867 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

self = <dll.DoubleLinkedList object at 0x7f33bfd73b20>, data = 3

>   ???
E   TypeError: 'int' object is not iterable

dll:36: TypeError

During handling of the above exception, another exception occurred:

    @pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
>       one = DoubleLinkedList(3)

0-ts/test_dll.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:40: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfd73b20>, val = 3

>   ???
E   AttributeError: 'DoubleLinkedList' object has no attribute 'tail'

dll:48: AttributeError
[36m   -[0m [#  90] SDL dll: 
--------------------------------------------------------------------------------
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
   33:         self.tail = None
[34m-  34:         self._length = 0[0m
[32m+  34:         pass[0m
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
--------------------------------------------------------------------------------
[0.11153 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

self = <dll.DoubleLinkedList object at 0x7f33bfe7e650>, data = 3

>   ???
E   TypeError: 'int' object is not iterable

dll:36: TypeError

During handling of the above exception, another exception occurred:

    @pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
>       one = DoubleLinkedList(3)

0-ts/test_dll.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:40: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfe7e650>, val = 3

>   ???
E   AttributeError: 'DoubleLinkedList' object has no attribute '_length'

dll:50: AttributeError
[36m   -[0m [#  91] SDL dll: 
--------------------------------------------------------------------------------
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
[34m-  37:                 self.push(val)[0m
[32m+  37:                 pass[0m
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
--------------------------------------------------------------------------------
[0.13493 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_five

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe7d240>, <dll.DoubleLinkedList object at 0x7f33bfe7fe20>, <dll.DoubleLinkedList object at 0x7f33bfe7c3d0>)

    def test_list_of_five(test_lists):
        """Test list of five."""
>       assert test_lists[2].head.data is 5
E       AttributeError: 'NoneType' object has no attribute 'data'

0-ts/test_dll.py:36: AttributeError
[36m   -[0m [#  92] SDL dll: 
--------------------------------------------------------------------------------
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
   39:             if data:
[34m-  40:                 self.push(data)[0m
[32m+  40:                 pass[0m
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.14356 s] [32mkilled[0m by 0-ts/test_dll.py::test_push_points_back

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfee1390>, <dll.DoubleLinkedList object at 0x7f33bfee0130>, <dll.DoubleLinkedList object at 0x7f33bfee2f80>)

    def test_push_points_back(test_lists):
        """Test old head points to new with prev after a push."""
        old_head = test_lists[1].head
        test_lists[1].push(6)
>       assert test_lists[1].head is old_head.prev
E       AttributeError: 'NoneType' object has no attribute 'prev'

0-ts/test_dll.py:66: AttributeError
[36m   -[0m [#  93] SDL dll: 
--------------------------------------------------------------------------------
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
[34m-  44:         old_head = self.head[0m
[32m+  44:         pass[0m
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
--------------------------------------------------------------------------------
[0.12463 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

self = <dll.DoubleLinkedList object at 0x7f33bfbb5180>, data = 3

>   ???
E   TypeError: 'int' object is not iterable

dll:36: TypeError

During handling of the above exception, another exception occurred:

    @pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
>       one = DoubleLinkedList(3)

0-ts/test_dll.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:40: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfbb5180>, val = 3

>   ???
E   NameError: name 'old_head' is not defined

dll:45: NameError
[36m   -[0m [#  94] SDL dll: 
--------------------------------------------------------------------------------
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
[34m-  45:         self.head = Node(val, next_node=old_head)[0m
[32m+  45:         pass[0m
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
--------------------------------------------------------------------------------
[0.10960 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_five

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfde7520>, <dll.DoubleLinkedList object at 0x7f33bfde4370>, <dll.DoubleLinkedList object at 0x7f33bfde73a0>)

    def test_list_of_five(test_lists):
        """Test list of five."""
>       assert test_lists[2].head.data is 5
E       AttributeError: 'NoneType' object has no attribute 'data'

0-ts/test_dll.py:36: AttributeError
[36m   -[0m [#  95] SDL dll: 
--------------------------------------------------------------------------------
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
[34m-  47:             old_head.prev = self.head[0m
[32m+  47:             pass[0m
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
--------------------------------------------------------------------------------
[0.11164 s] [32mkilled[0m by 0-ts/test_dll.py::test_prev_pointer

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe1b490>, <dll.DoubleLinkedList object at 0x7f33bfe18a90>, <dll.DoubleLinkedList object at 0x7f33bfe19210>)

    def test_prev_pointer(test_lists):
        """Test prev pointer."""
>       assert test_lists[2].tail.prev.data is 2
E       AttributeError: 'NoneType' object has no attribute 'data'

0-ts/test_dll.py:42: AttributeError
[36m   -[0m [#  96] SDL dll: 
--------------------------------------------------------------------------------
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
[34m-  49:             self.tail = self.head[0m
[32m+  49:             pass[0m
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
--------------------------------------------------------------------------------
[0.12902 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_one

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfdaf340>, <dll.DoubleLinkedList object at 0x7f33bfdaeec0>, <dll.DoubleLinkedList object at 0x7f33bfdaf4f0>)

    def test_list_of_one(test_lists):
        """Test list of one, head is tail."""
>       assert test_lists[1].head is test_lists[1].tail
E       AssertionError

0-ts/test_dll.py:31: AssertionError
[36m   -[0m [#  97] SDL dll: 
--------------------------------------------------------------------------------
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
[34m-  54:         to_return = self.head[0m
[32m+  54:         pass[0m
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
--------------------------------------------------------------------------------
[0.11241 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfab16c0>, <dll.DoubleLinkedList object at 0x7f33bfab1b10>, <dll.DoubleLinkedList object at 0x7f33bfab1540>)

    def test_pop_reduces_length(test_lists):
        """Test pop reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].pop()

0-ts/test_dll.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfab1540>

>   ???
E   NameError: name 'to_return' is not defined

dll:65: NameError
[36m   -[0m [#  98] SDL dll: 
--------------------------------------------------------------------------------
   54:         to_return = self.head
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
[34m-  58:         new_head = self.head.next[0m
[32m+  58:         pass[0m
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
--------------------------------------------------------------------------------
[0.11320 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd726b0>, <dll.DoubleLinkedList object at 0x7f33bfd722f0>, <dll.DoubleLinkedList object at 0x7f33bfd70670>)

    def test_pop_reduces_length(test_lists):
        """Test pop reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].pop()

0-ts/test_dll.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfd70670>

>   ???
E   NameError: name 'new_head' is not defined

dll:59: NameError
[36m   -[0m [#  99] SDL dll: 
--------------------------------------------------------------------------------
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
[34m-  60:             new_head.prev = None[0m
[32m+  60:             pass[0m
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
--------------------------------------------------------------------------------
[0.11628 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_removes_prev_pointer

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe1ab60>, <dll.DoubleLinkedList object at 0x7f33bfe1ab30>, <dll.DoubleLinkedList object at 0x7f33bfe19cf0>)

    def test_pop_removes_prev_pointer(test_lists):
        """Test pop changes prev pointer."""
        test_lists[2].pop()
>       assert test_lists[2].head.prev is None
E       AssertionError

0-ts/test_dll.py:86: AssertionError
[36m   -[0m [# 100] SDL dll: 
--------------------------------------------------------------------------------
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
[34m-  61:         self.head = new_head[0m
[32m+  61:         pass[0m
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
--------------------------------------------------------------------------------
[0.14389 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_removes_head

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe797b0>, <dll.DoubleLinkedList object at 0x7f33bfe79180>, <dll.DoubleLinkedList object at 0x7f33bfe79390>)

    def test_pop_removes_head(test_lists):
        """Test pop removes head."""
        new_head = test_lists[2].head.next.data
        test_lists[2].pop()
>       assert test_lists[2].head.data is new_head
E       AssertionError

0-ts/test_dll.py:80: AssertionError
[36m   -[0m [# 101] SDL dll: 
--------------------------------------------------------------------------------
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
[34m-  64:             self.tail = None[0m
[32m+  64:             pass[0m
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
--------------------------------------------------------------------------------
[0.16394 s] [31msurvived[0m
[36m   -[0m [# 102] SDL dll: 
--------------------------------------------------------------------------------
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
[34m-  65:         return to_return.data[0m
[32m+  65:         pass[0m
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
--------------------------------------------------------------------------------
[0.13586 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_returns_data

test_lists = (<dll.DoubleLinkedList object at 0x7f33c002e620>, <dll.DoubleLinkedList object at 0x7f33c002fd30>, <dll.DoubleLinkedList object at 0x7f33bfedc700>)

    def test_pop_returns_data(test_lists):
        """Test pop returns data."""
>       assert test_lists[2].pop() is 5
E       AssertionError

0-ts/test_dll.py:97: AssertionError
[36m   -[0m [# 103] SDL dll: 
--------------------------------------------------------------------------------
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
[34m-  69:         old_tail = self.tail[0m
[32m+  69:         pass[0m
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
--------------------------------------------------------------------------------
[0.13948 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_increases_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bff2c2e0>, <dll.DoubleLinkedList object at 0x7f33bff2e650>, <dll.DoubleLinkedList object at 0x7f33bff2ffd0>)

    def test_append_increases_length(test_lists):
        """Test append increases length."""
>       test_lists[0].append(2)

0-ts/test_dll.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bff2c2e0>, val = 2

>   ???
E   NameError: name 'old_tail' is not defined

dll:70: NameError
[36m   -[0m [# 104] SDL dll: 
--------------------------------------------------------------------------------
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
[34m-  70:         self.tail = Node(val, prev=old_tail)[0m
[32m+  70:         pass[0m
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
--------------------------------------------------------------------------------
[0.13845 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_updates_tail

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfbb42b0>, <dll.DoubleLinkedList object at 0x7f33bfbb5a50>, <dll.DoubleLinkedList object at 0x7f33bfbb73a0>)

    def test_append_updates_tail(test_lists):
        """Test append updates tail."""
        test_lists[1].append(6)
>       assert test_lists[1].tail.data is 6
E       AssertionError

0-ts/test_dll.py:115: AssertionError
[36m   -[0m [# 105] SDL dll: 
--------------------------------------------------------------------------------
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
[34m-  72:             old_tail.next = self.tail[0m
[32m+  72:             pass[0m
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
--------------------------------------------------------------------------------
[0.12040 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_points_back

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd719f0>, <dll.DoubleLinkedList object at 0x7f33bfd71c30>, <dll.DoubleLinkedList object at 0x7f33bfd72410>)

    def test_append_points_back(test_lists):
        """Test old tail points to new with prev after a append."""
        old_tail = test_lists[1].tail
        test_lists[1].append(6)
>       assert test_lists[1].tail is old_tail.next
E       AssertionError

0-ts/test_dll.py:122: AssertionError
[36m   -[0m [# 106] SDL dll: 
--------------------------------------------------------------------------------
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
[34m-  74:             self.head = self.tail[0m
[32m+  74:             pass[0m
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
--------------------------------------------------------------------------------
[0.14009 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_on_empty_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfbb6aa0>, <dll.DoubleLinkedList object at 0x7f33bfbb5360>, <dll.DoubleLinkedList object at 0x7f33bfbb6080>)

    def test_append_on_empty_list(test_lists):
        """Test append updates tail."""
        test_lists[0].append(6)
        assert test_lists[0].tail.data is 6
>       assert test_lists[0].head.data is 6
E       AttributeError: 'NoneType' object has no attribute 'data'

0-ts/test_dll.py:129: AttributeError
[36m   -[0m [# 107] SDL dll: 
--------------------------------------------------------------------------------
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
[34m-  79:         to_return = self.tail[0m
[32m+  79:         pass[0m
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
--------------------------------------------------------------------------------
[0.15285 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfeedd20>, <dll.DoubleLinkedList object at 0x7f33bfeefbb0>, <dll.DoubleLinkedList object at 0x7f33bfeefb50>)

    def test_shift_reduces_length(test_lists):
        """Test shift reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].shift()

0-ts/test_dll.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfeefb50>

>   ???
E   NameError: name 'to_return' is not defined

dll:90: NameError
[36m   -[0m [# 108] SDL dll: 
--------------------------------------------------------------------------------
   79:         to_return = self.tail
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
[34m-  83:         new_tail = self.tail.prev[0m
[32m+  83:         pass[0m
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
--------------------------------------------------------------------------------
[0.14145 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfec96c0>, <dll.DoubleLinkedList object at 0x7f33bfecb7f0>, <dll.DoubleLinkedList object at 0x7f33bfecbf40>)

    def test_shift_reduces_length(test_lists):
        """Test shift reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].shift()

0-ts/test_dll.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfecbf40>

>   ???
E   NameError: name 'new_tail' is not defined

dll:84: NameError
[36m   -[0m [# 109] SDL dll: 
--------------------------------------------------------------------------------
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
[34m-  85:             new_tail.next = None[0m
[32m+  85:             pass[0m
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
--------------------------------------------------------------------------------
[0.12800 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_removes_next_pointer

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe85f30>, <dll.DoubleLinkedList object at 0x7f33bfe85c30>, <dll.DoubleLinkedList object at 0x7f33bfd38040>)

    def test_shift_removes_next_pointer(test_lists):
        """Test shift changes prev pointer."""
        test_lists[2].shift()
>       assert test_lists[2].tail.next is None
E       AssertionError

0-ts/test_dll.py:174: AssertionError
[36m   -[0m [# 110] SDL dll: 
--------------------------------------------------------------------------------
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
[34m-  86:         self.tail = new_tail[0m
[32m+  86:         pass[0m
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
--------------------------------------------------------------------------------
[0.16202 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_removes_tail

test_lists = (<dll.DoubleLinkedList object at 0x7f33bff2d330>, <dll.DoubleLinkedList object at 0x7f33bff2d360>, <dll.DoubleLinkedList object at 0x7f33bff2d9c0>)

    def test_shift_removes_tail(test_lists):
        """Test shift removes tail."""
        new_tail = test_lists[2].tail.prev.data
        test_lists[2].shift()
>       assert test_lists[2].tail.data is new_tail
E       AssertionError

0-ts/test_dll.py:168: AssertionError
[36m   -[0m [# 111] SDL dll: 
--------------------------------------------------------------------------------
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
[34m-  89:             self.tail = None[0m
[32m+  89:             pass[0m
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
--------------------------------------------------------------------------------
[0.11393 s] [31msurvived[0m
[36m   -[0m [# 112] SDL dll: 
--------------------------------------------------------------------------------
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
[34m-  90:         return to_return.data[0m
[32m+  90:         pass[0m
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
--------------------------------------------------------------------------------
[0.12577 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_sequence

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe87850>, <dll.DoubleLinkedList object at 0x7f33bfe86c20>, <dll.DoubleLinkedList object at 0x7f33bfdbc9d0>)

    def test_shift_sequence(test_lists):
        """Test that entire sequence is returned by successive shifts."""
        l = []
        while True:
            try:
                shifted_data = test_lists[2].shift()
                l.append(shifted_data)
            except IndexError:
                break
>       assert l == [1, 2, 3, 4, 5]
E       AssertionError

0-ts/test_dll.py:198: AssertionError
[36m   -[0m [# 113] SDL dll: 
--------------------------------------------------------------------------------
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
[34m-  94:         curr = self.head[0m
[32m+  94:         pass[0m
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
--------------------------------------------------------------------------------
[0.13747 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfec9120>, <dll.DoubleLinkedList object at 0x7f33bfec82e0>, <dll.DoubleLinkedList object at 0x7f33bfedc580>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
>       test_lists[2].remove(3)

0-ts/test_dll.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfedc580>, val = 3

>   ???
E   UnboundLocalError: local variable 'curr' referenced before assignment

dll:95: UnboundLocalError
[36m   -[0m [# 114] SDL dll: 
--------------------------------------------------------------------------------
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[32m+  98:                     pass[0m
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
--------------------------------------------------------------------------------
[0.13118 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_list_of_one

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfdeb820>, <dll.DoubleLinkedList object at 0x7f33bfdeb850>, <dll.DoubleLinkedList object at 0x7f33bfdebf40>)

    def test_remove_list_of_one(test_lists):
        """Test remove on list of one."""
        test_lists[1].remove(3)
>       assert test_lists[1].head is None
E       AssertionError

0-ts/test_dll.py:273: AssertionError
[36m   -[0m [# 115] SDL dll: 
--------------------------------------------------------------------------------
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
[34m- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[32m+ 100:                     pass[0m
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
--------------------------------------------------------------------------------
[0.12852 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfeca3e0>, <dll.DoubleLinkedList object at 0x7f33bfecb490>, <dll.DoubleLinkedList object at 0x7f33bfec9de0>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]
E       AssertionError

0-ts/test_dll.py:211: AssertionError
[36m   -[0m [# 116] SDL dll: 
--------------------------------------------------------------------------------
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
[34m- 102:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[32m+ 102:                     pass[0m
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
--------------------------------------------------------------------------------
[0.12798 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_head_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe18910>, <dll.DoubleLinkedList object at 0x7f33bfe1bfa0>, <dll.DoubleLinkedList object at 0x7f33bfe19480>)

    def test_remove_head_of_list(test_lists):
        """Test remove from head of list."""
        test_lists[2].remove(5)
>       assert test_lists[2]._repr() == [4, 3, 2, 1]
E       AssertionError

0-ts/test_dll.py:217: AssertionError
[36m   -[0m [# 117] SDL dll: 
--------------------------------------------------------------------------------
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
[34m- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[32m+ 104:                     pass[0m
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
--------------------------------------------------------------------------------
[0.12995 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_tail_pointers

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfcac940>, <dll.DoubleLinkedList object at 0x7f33bfcac8e0>, <dll.DoubleLinkedList object at 0x7f33bfcacdc0>)

    def test_remove_tail_pointers(test_lists):
        """Test remove from tail of list changes pointers."""
        test_lists[2].remove(1)
>       assert test_lists[2].tail.data is 2
E       AssertionError

0-ts/test_dll.py:260: AssertionError
[36m   -[0m [# 118] SDL dll: 
--------------------------------------------------------------------------------
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
[34m- 106:                 return[0m
[32m+ 106:                 pass[0m
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
--------------------------------------------------------------------------------
[0.12602 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bff3af20>, <dll.DoubleLinkedList object at 0x7f33bff3bfd0>, <dll.DoubleLinkedList object at 0x7f33bfac4070>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
>       test_lists[2].remove(3)

0-ts/test_dll.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfac4070>, val = 3

>   ???
E   ValueError: 3 is not in the list

dll:109: ValueError
[36m   -[0m [# 119] SDL dll: 
--------------------------------------------------------------------------------
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
[34m- 107:             curr = curr.next[0m
[32m+ 107:             pass[0m
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
--------------------------------------------------------------------------------
[5.00667 s] [33mtimeout[0m
[36m   -[0m [# 120] SDL dll: 
--------------------------------------------------------------------------------
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
[34m- 113:         l = [][0m
[32m+ 113:         pass[0m
  114:         while True:
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
--------------------------------------------------------------------------------
[0.15600 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfdbc6d0>, <dll.DoubleLinkedList object at 0x7f33bfdbd450>, <dll.DoubleLinkedList object at 0x7f33bfdbfd60>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]

0-ts/test_dll.py:211: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfdbfd60>

>   ???
E   NameError: name 'l' is not defined

dll:117: NameError
[36m   -[0m [# 121] SDL dll: 
--------------------------------------------------------------------------------
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
  115:             try:
[34m- 116:                 popped_data = self.pop()[0m
[32m+ 116:                 pass[0m
  117:                 l.append(popped_data)
  118:             except IndexError:
  119:                 break
  120:         return l
--------------------------------------------------------------------------------
[0.12710 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfa91600>, <dll.DoubleLinkedList object at 0x7f33bfa91c60>, <dll.DoubleLinkedList object at 0x7f33bfa90df0>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]

0-ts/test_dll.py:211: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfa90df0>

>   ???
E   NameError: name 'popped_data' is not defined

dll:117: NameError
[36m   -[0m [# 122] SDL dll: 
--------------------------------------------------------------------------------
  113:         l = []
  114:         while True:
  115:             try:
  116:                 popped_data = self.pop()
[34m- 117:                 l.append(popped_data)[0m
[32m+ 117:                 pass[0m
  118:             except IndexError:
  119:                 break
  120:         return l
--------------------------------------------------------------------------------
[0.12407 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfedc340>, <dll.DoubleLinkedList object at 0x7f33bfedd900>, <dll.DoubleLinkedList object at 0x7f33bfedd600>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]
E       AssertionError

0-ts/test_dll.py:211: AssertionError
[36m   -[0m [# 123] SDL dll: 
--------------------------------------------------------------------------------
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
  119:                 break
[34m- 120:         return l[0m
[32m+ 120:         pass[0m
--------------------------------------------------------------------------------
[0.12494 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfde97e0>, <dll.DoubleLinkedList object at 0x7f33bfdeb4c0>, <dll.DoubleLinkedList object at 0x7f33bfeec850>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]
E       AssertionError

0-ts/test_dll.py:211: AssertionError
[36m   -[0m [# 124] SVD dll: 
--------------------------------------------------------------------------------
    5:     '''Node class for data storage.'''
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
[34m-   9:         self.data = data[0m
[32m+   9:         data = data[0m
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 125] SVD dll: 
--------------------------------------------------------------------------------
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
[34m-  10:         self.next = next_node[0m
[32m+  10:         next = next_node[0m
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 126] SVD dll: 
--------------------------------------------------------------------------------
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
   10:         self.next = next_node
[34m-  11:         self.prev = prev[0m
[32m+  11:         prev = prev[0m
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 127] SVD dll: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[32m+  15:         return 'Value: {}'.format(data)[0m
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.13922 s] [31msurvived[0m
[36m   -[0m [# 128] SVD dll: 
--------------------------------------------------------------------------------
   28:     '''
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
[34m-  32:         self.head = None[0m
[32m+  32:         head = None[0m
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 129] SVD dll: 
--------------------------------------------------------------------------------
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
[34m-  33:         self.tail = None[0m
[32m+  33:         tail = None[0m
   34:         self._length = 0
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 130] SVD dll: 
--------------------------------------------------------------------------------
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
   33:         self.tail = None
[34m-  34:         self._length = 0[0m
[32m+  34:         _length = 0[0m
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 131] SVD dll: 
--------------------------------------------------------------------------------
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
[34m-  37:                 self.push(val)[0m
[32m+  37:                 push(val)[0m
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
--------------------------------------------------------------------------------
[0.12877 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

@pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
        one = DoubleLinkedList(3)
>       multi = DoubleLinkedList([1, 2, 3, 4, 5])

0-ts/test_dll.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfee20b0>, data = [1, 2, 3, 4, 5]

>   ???
E   NameError: name 'push' is not defined

dll:37: NameError
[36m   -[0m [# 132] SVD dll: 
--------------------------------------------------------------------------------
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
   39:             if data:
[34m-  40:                 self.push(data)[0m
[32m+  40:                 push(data)[0m
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.13817 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

self = <dll.DoubleLinkedList object at 0x7f33c004d780>, data = 3

>   ???
E   TypeError: 'int' object is not iterable

dll:36: TypeError

During handling of the above exception, another exception occurred:

    @pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
>       one = DoubleLinkedList(3)

0-ts/test_dll.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33c004d780>, data = 3

>   ???
E   NameError: name 'push' is not defined

dll:40: NameError
[36m   -[0m [# 133] SVD dll: 
--------------------------------------------------------------------------------
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
[34m-  44:         old_head = self.head[0m
[32m+  44:         old_head = head[0m
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
--------------------------------------------------------------------------------
[0.13376 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

self = <dll.DoubleLinkedList object at 0x7f33bff2cc10>, data = 3

>   ???
E   TypeError: 'int' object is not iterable

dll:36: TypeError

During handling of the above exception, another exception occurred:

    @pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
>       one = DoubleLinkedList(3)

0-ts/test_dll.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:40: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bff2cc10>, val = 3

>   ???
E   NameError: name 'head' is not defined

dll:44: NameError
[36m   -[0m [# 134] SVD dll: 
--------------------------------------------------------------------------------
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
[34m-  45:         self.head = Node(val, next_node=old_head)[0m
[32m+  45:         head = Node(val, next_node=old_head)[0m
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 135] SVD dll: 
--------------------------------------------------------------------------------
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
[34m-  47:             old_head.prev = self.head[0m
[32m+  47:             old_head.prev = head[0m
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
--------------------------------------------------------------------------------
[0.12837 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

@pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
        one = DoubleLinkedList(3)
>       multi = DoubleLinkedList([1, 2, 3, 4, 5])

0-ts/test_dll.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfee2800>, val = 2

>   ???
E   NameError: name 'head' is not defined

dll:47: NameError
[36m   -[0m [# 136] SVD dll: 
--------------------------------------------------------------------------------
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
[34m-  48:         if not (self.tail):[0m
[32m+  48:         if not tail:[0m
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
   52:     def pop(self):
--------------------------------------------------------------------------------
[0.16860 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

self = <dll.DoubleLinkedList object at 0x7f33bff2eec0>, data = 3

>   ???
E   TypeError: 'int' object is not iterable

dll:36: TypeError

During handling of the above exception, another exception occurred:

    @pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
>       one = DoubleLinkedList(3)

0-ts/test_dll.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:40: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bff2eec0>, val = 3

>   ???
E   NameError: name 'tail' is not defined

dll:48: NameError
[36m   -[0m [# 137] SVD dll: 
--------------------------------------------------------------------------------
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
[34m-  49:             self.tail = self.head[0m
[32m+  49:             tail = self.head[0m
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 138] SVD dll: 
--------------------------------------------------------------------------------
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
[34m-  49:             self.tail = self.head[0m
[32m+  49:             self.tail = head[0m
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
--------------------------------------------------------------------------------
[0.13719 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_none

self = <dll.DoubleLinkedList object at 0x7f33bfd91900>, data = 3

>   ???
E   TypeError: 'int' object is not iterable

dll:36: TypeError

During handling of the above exception, another exception occurred:

    @pytest.fixture
    def test_lists():
        """Dll fixtures."""
        from dll import DoubleLinkedList
        empty = DoubleLinkedList()
>       one = DoubleLinkedList(3)

0-ts/test_dll.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
dll:40: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfd91900>, val = 3

>   ???
E   NameError: name 'head' is not defined

dll:49: NameError
[36m   -[0m [# 139] SVD dll: 
--------------------------------------------------------------------------------
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
[34m-  50:         self._length += 1[0m
[32m+  50:         _length += 1[0m
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 140] SVD dll: 
--------------------------------------------------------------------------------
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
[34m-  54:         to_return = self.head[0m
[32m+  54:         to_return = head[0m
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
--------------------------------------------------------------------------------
[0.13286 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfdea1a0>, <dll.DoubleLinkedList object at 0x7f33bfdea410>, <dll.DoubleLinkedList object at 0x7f33bfde9600>)

    def test_pop_reduces_length(test_lists):
        """Test pop reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].pop()

0-ts/test_dll.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfde9600>

>   ???
E   NameError: name 'head' is not defined

dll:54: NameError
[36m   -[0m [# 141] SVD dll: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
[34m-  55:         if self._length < 1:[0m
[32m+  55:         if _length < 1:[0m
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.13204 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd93d90>, <dll.DoubleLinkedList object at 0x7f33bfd920b0>, <dll.DoubleLinkedList object at 0x7f33bfd91720>)

    def test_pop_reduces_length(test_lists):
        """Test pop reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].pop()

0-ts/test_dll.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfd91720>

>   ???
E   NameError: name '_length' is not defined

dll:55: NameError
[36m   -[0m [# 142] SVD dll: 
--------------------------------------------------------------------------------
   54:         to_return = self.head
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
[34m-  58:         new_head = self.head.next[0m
[32m+  58:         new_head = head.next[0m
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
--------------------------------------------------------------------------------
[0.13135 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bff2ee30>, <dll.DoubleLinkedList object at 0x7f33bff2f0d0>, <dll.DoubleLinkedList object at 0x7f33bff2c040>)

    def test_pop_reduces_length(test_lists):
        """Test pop reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].pop()

0-ts/test_dll.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bff2c040>

>   ???
E   NameError: name 'head' is not defined

dll:58: NameError
[36m   -[0m [# 143] SVD dll: 
--------------------------------------------------------------------------------
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
[34m-  61:         self.head = new_head[0m
[32m+  61:         head = new_head[0m
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 144] SVD dll: 
--------------------------------------------------------------------------------
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
[34m-  62:         self._length -= 1[0m
[32m+  62:         _length -= 1[0m
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 145] SVD dll: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
[34m-  63:         if self._length < 1:[0m
[32m+  63:         if _length < 1:[0m
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.16030 s] [32mkilled[0m by 0-ts/test_dll.py::test_pop_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfee1ed0>, <dll.DoubleLinkedList object at 0x7f33bfee37f0>, <dll.DoubleLinkedList object at 0x7f33bfee0cd0>)

    def test_pop_reduces_length(test_lists):
        """Test pop reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].pop()

0-ts/test_dll.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfee0cd0>

>   ???
E   NameError: name '_length' is not defined

dll:63: NameError
[36m   -[0m [# 146] SVD dll: 
--------------------------------------------------------------------------------
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
[34m-  64:             self.tail = None[0m
[32m+  64:             tail = None[0m
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 147] SVD dll: 
--------------------------------------------------------------------------------
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
[34m-  69:         old_tail = self.tail[0m
[32m+  69:         old_tail = tail[0m
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
--------------------------------------------------------------------------------
[0.14211 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_increases_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfee3ac0>, <dll.DoubleLinkedList object at 0x7f33bfee0af0>, <dll.DoubleLinkedList object at 0x7f33bfee3910>)

    def test_append_increases_length(test_lists):
        """Test append increases length."""
>       test_lists[0].append(2)

0-ts/test_dll.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfee3ac0>, val = 2

>   ???
E   NameError: name 'tail' is not defined

dll:69: NameError
[36m   -[0m [# 148] SVD dll: 
--------------------------------------------------------------------------------
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
[34m-  70:         self.tail = Node(val, prev=old_tail)[0m
[32m+  70:         tail = Node(val, prev=old_tail)[0m
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 149] SVD dll: 
--------------------------------------------------------------------------------
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
[34m-  72:             old_tail.next = self.tail[0m
[32m+  72:             old_tail.next = tail[0m
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
--------------------------------------------------------------------------------
[0.14513 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_updates_tail

test_lists = (<dll.DoubleLinkedList object at 0x7f33bff2cd30>, <dll.DoubleLinkedList object at 0x7f33bff2e290>, <dll.DoubleLinkedList object at 0x7f33bfee1210>)

    def test_append_updates_tail(test_lists):
        """Test append updates tail."""
>       test_lists[1].append(6)

0-ts/test_dll.py:114: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bff2e290>, val = 6

>   ???
E   NameError: name 'tail' is not defined

dll:72: NameError
[36m   -[0m [# 150] SVD dll: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
[34m-  73:         if self._length < 1:[0m
[32m+  73:         if _length < 1:[0m
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.11386 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_increases_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfbb4460>, <dll.DoubleLinkedList object at 0x7f33bfbb5cf0>, <dll.DoubleLinkedList object at 0x7f33bfc95960>)

    def test_append_increases_length(test_lists):
        """Test append increases length."""
>       test_lists[0].append(2)

0-ts/test_dll.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfbb4460>, val = 2

>   ???
E   NameError: name '_length' is not defined

dll:73: NameError
[36m   -[0m [# 151] SVD dll: 
--------------------------------------------------------------------------------
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
[34m-  74:             self.head = self.tail[0m
[32m+  74:             head = self.tail[0m
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 152] SVD dll: 
--------------------------------------------------------------------------------
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
[34m-  74:             self.head = self.tail[0m
[32m+  74:             self.head = tail[0m
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
--------------------------------------------------------------------------------
[0.14166 s] [32mkilled[0m by 0-ts/test_dll.py::test_append_increases_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfa90f40>, <dll.DoubleLinkedList object at 0x7f33bfa921a0>, <dll.DoubleLinkedList object at 0x7f33bfa927a0>)

    def test_append_increases_length(test_lists):
        """Test append increases length."""
>       test_lists[0].append(2)

0-ts/test_dll.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfa90f40>, val = 2

>   ???
E   NameError: name 'tail' is not defined

dll:74: NameError
[36m   -[0m [# 153] SVD dll: 
--------------------------------------------------------------------------------
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
[34m-  75:         self._length += 1[0m
[32m+  75:         _length += 1[0m
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 154] SVD dll: 
--------------------------------------------------------------------------------
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
[34m-  79:         to_return = self.tail[0m
[32m+  79:         to_return = tail[0m
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
--------------------------------------------------------------------------------
[0.16892 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe79210>, <dll.DoubleLinkedList object at 0x7f33bfe79630>, <dll.DoubleLinkedList object at 0x7f33bfe78460>)

    def test_shift_reduces_length(test_lists):
        """Test shift reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].shift()

0-ts/test_dll.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfe78460>

>   ???
E   NameError: name 'tail' is not defined

dll:79: NameError
[36m   -[0m [# 155] SVD dll: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
[34m-  80:         if self._length < 1:[0m
[32m+  80:         if _length < 1:[0m
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.13981 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33c002efe0>, <dll.DoubleLinkedList object at 0x7f33c002ded0>, <dll.DoubleLinkedList object at 0x7f33c002d3c0>)

    def test_shift_reduces_length(test_lists):
        """Test shift reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].shift()

0-ts/test_dll.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33c002d3c0>

>   ???
E   NameError: name '_length' is not defined

dll:80: NameError
[36m   -[0m [# 156] SVD dll: 
--------------------------------------------------------------------------------
   79:         to_return = self.tail
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
[34m-  83:         new_tail = self.tail.prev[0m
[32m+  83:         new_tail = tail.prev[0m
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
--------------------------------------------------------------------------------
[0.11969 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfde7c70>, <dll.DoubleLinkedList object at 0x7f33bfde6230>, <dll.DoubleLinkedList object at 0x7f33bfde4850>)

    def test_shift_reduces_length(test_lists):
        """Test shift reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].shift()

0-ts/test_dll.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfde4850>

>   ???
E   NameError: name 'tail' is not defined

dll:83: NameError
[36m   -[0m [# 157] SVD dll: 
--------------------------------------------------------------------------------
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
[34m-  86:         self.tail = new_tail[0m
[32m+  86:         tail = new_tail[0m
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 158] SVD dll: 
--------------------------------------------------------------------------------
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
[34m-  87:         self._length -= 1[0m
[32m+  87:         _length -= 1[0m
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 159] SVD dll: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
[34m-  88:         if self._length < 1:[0m
[32m+  88:         if _length < 1:[0m
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.14752 s] [32mkilled[0m by 0-ts/test_dll.py::test_shift_reduces_length

test_lists = (<dll.DoubleLinkedList object at 0x7f33bff58520>, <dll.DoubleLinkedList object at 0x7f33bfe1aa10>, <dll.DoubleLinkedList object at 0x7f33bfe18400>)

    def test_shift_reduces_length(test_lists):
        """Test shift reduces lists."""
        old_length = test_lists[2]._length
>       test_lists[2].shift()

0-ts/test_dll.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfe18400>

>   ???
E   NameError: name '_length' is not defined

dll:88: NameError
[36m   -[0m [# 160] SVD dll: 
--------------------------------------------------------------------------------
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
[34m-  89:             self.tail = None[0m
[32m+  89:             tail = None[0m
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 161] SVD dll: 
--------------------------------------------------------------------------------
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
[34m-  94:         curr = self.head[0m
[32m+  94:         curr = head[0m
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
--------------------------------------------------------------------------------
[0.15596 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfa92260>, <dll.DoubleLinkedList object at 0x7f33bfa92d10>, <dll.DoubleLinkedList object at 0x7f33bfa93f40>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
>       test_lists[2].remove(3)

0-ts/test_dll.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfa93f40>, val = 3

>   ???
E   NameError: name 'head' is not defined

dll:94: NameError
[36m   -[0m [# 162] SVD dll: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
[34m-  97:                 if self._length == 1:[0m
[32m+  97:                 if _length == 1:[0m
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.12273 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd81c60>, <dll.DoubleLinkedList object at 0x7f33bfd81c90>, <dll.DoubleLinkedList object at 0x7f33bfd823b0>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
>       test_lists[2].remove(3)

0-ts/test_dll.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfd823b0>, val = 3

>   ???
E   NameError: name '_length' is not defined

dll:97: NameError
[36m   -[0m [# 163] SVD dll: 
--------------------------------------------------------------------------------
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[32m+  98:                     (head, self.tail) = (None, None)[0m
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 164] SVD dll: 
--------------------------------------------------------------------------------
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[32m+  98:                     (self.head, tail) = (None, None)[0m
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 165] SVD dll: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+  99:                 elif (curr is not head and curr is not self.tail):[0m
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.14687 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bffe5c90>, <dll.DoubleLinkedList object at 0x7f33bffe51e0>, <dll.DoubleLinkedList object at 0x7f33bffe79d0>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
>       test_lists[2].remove(3)

0-ts/test_dll.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bffe79d0>, val = 3

>   ???
E   NameError: name 'head' is not defined

dll:99: NameError
[36m   -[0m [# 166] SVD dll: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+  99:                 elif (curr is not self.head and curr is not tail):[0m
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.15296 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33c002fbe0>, <dll.DoubleLinkedList object at 0x7f33c002cb20>, <dll.DoubleLinkedList object at 0x7f33bfbb6b90>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
>       test_lists[2].remove(3)

0-ts/test_dll.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfbb6b90>, val = 3

>   ???
E   NameError: name 'tail' is not defined

dll:99: NameError
[36m   -[0m [# 167] SVD dll: 
--------------------------------------------------------------------------------
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
[34m- 101:                 elif curr is self.head:[0m
[32m+ 101:                 elif curr is head:[0m
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
--------------------------------------------------------------------------------
[0.12349 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_head_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfd815d0>, <dll.DoubleLinkedList object at 0x7f33bfd81ae0>, <dll.DoubleLinkedList object at 0x7f33bfd81480>)

    def test_remove_head_of_list(test_lists):
        """Test remove from head of list."""
>       test_lists[2].remove(5)

0-ts/test_dll.py:216: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bfd81480>, val = 5

>   ???
E   NameError: name 'head' is not defined

dll:101: NameError
[36m   -[0m [# 168] SVD dll: 
--------------------------------------------------------------------------------
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
[34m- 102:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[32m+ 102:                     (head, curr.next.prev) = (curr.next, None)[0m
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 169] SVD dll: 
--------------------------------------------------------------------------------
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
[34m- 103:                 elif curr is self.tail:[0m
[32m+ 103:                 elif curr is tail:[0m
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
--------------------------------------------------------------------------------
[0.14626 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_tail_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33c002c190>, <dll.DoubleLinkedList object at 0x7f33c002ef80>, <dll.DoubleLinkedList object at 0x7f33c002e0b0>)

    def test_remove_tail_of_list(test_lists):
        """Test remove from tail of list."""
>       test_lists[2].remove(1)

0-ts/test_dll.py:222: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33c002e0b0>, val = 1

>   ???
E   NameError: name 'tail' is not defined

dll:103: NameError
[36m   -[0m [# 170] SVD dll: 
--------------------------------------------------------------------------------
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
[34m- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[32m+ 104:                     (tail, curr.prev.next) = (curr.prev, None)[0m
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 171] SVD dll: 
--------------------------------------------------------------------------------
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
[34m- 105:                 self._length -= 1[0m
[32m+ 105:                 _length -= 1[0m
  106:                 return
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 172] SVD dll: 
--------------------------------------------------------------------------------
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
  115:             try:
[34m- 116:                 popped_data = self.pop()[0m
[32m+ 116:                 popped_data = pop()[0m
  117:                 l.append(popped_data)
  118:             except IndexError:
  119:                 break
  120:         return l
--------------------------------------------------------------------------------
[0.15705 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33c0037eb0>, <dll.DoubleLinkedList object at 0x7f33c0034970>, <dll.DoubleLinkedList object at 0x7f33c0037b80>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]

0-ts/test_dll.py:211: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33c0037b80>

>   ???
E   NameError: name 'pop' is not defined

dll:116: NameError
[36m   -[0m [# 173] ZIL dll: 
--------------------------------------------------------------------------------
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
[34m-  37:                 self.push(val)[0m
[32m+  37:                 break[0m
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
--------------------------------------------------------------------------------
[0.10716 s] [32mkilled[0m by 0-ts/test_dll.py::test_list_of_five

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfeda470>, <dll.DoubleLinkedList object at 0x7f33bfedaa10>, <dll.DoubleLinkedList object at 0x7f33bfed8ca0>)

    def test_list_of_five(test_lists):
        """Test list of five."""
>       assert test_lists[2].head.data is 5
E       AttributeError: 'NoneType' object has no attribute 'data'

0-ts/test_dll.py:36: AttributeError
[36m   -[0m [# 174] ZIL dll: 
--------------------------------------------------------------------------------
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
[34m-  96:             if curr.data is val:[0m
[34m-  97:                 if self._length == 1:[0m
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[34m- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[34m- 101:                 elif curr is self.head:[0m
[34m- 102:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[34m- 103:                 elif curr is self.tail:[0m
[34m- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[34m- 105:                 self._length -= 1[0m
[34m- 106:                 return[0m
[34m- 107:             curr = curr.next[0m
[32m+  96:             break[0m
[32m+  97:         [0m
[32m+  98:         [0m
[32m+  99:         [0m
[32m+ 100:         [0m
[32m+ 101:         [0m
[32m+ 102:         [0m
[32m+ 103:         [0m
[32m+ 104:         [0m
[32m+ 105:         [0m
[32m+ 106:         [0m
[32m+ 107:         [0m
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
--------------------------------------------------------------------------------
[0.13124 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bffe6ec0>, <dll.DoubleLinkedList object at 0x7f33bffe4460>, <dll.DoubleLinkedList object at 0x7f33bffe46a0>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
>       test_lists[2].remove(3)

0-ts/test_dll.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <dll.DoubleLinkedList object at 0x7f33bffe46a0>, val = 3

>   ???
E   ValueError: 3 is not in the list

dll:109: ValueError
[36m   -[0m [# 175] ZIL dll: 
--------------------------------------------------------------------------------
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
[34m- 115:             try:[0m
[34m- 116:                 popped_data = self.pop()[0m
[34m- 117:                 l.append(popped_data)[0m
[34m- 118:             except IndexError:[0m
[34m- 119:                 break[0m
[32m+ 115:             break[0m
[32m+ 116:         [0m
[32m+ 117:         [0m
[32m+ 118:         [0m
[32m+ 119:         [0m
  120:         return l
--------------------------------------------------------------------------------
[0.14705 s] [32mkilled[0m by 0-ts/test_dll.py::test_remove_middle_of_list

test_lists = (<dll.DoubleLinkedList object at 0x7f33bfe1a020>, <dll.DoubleLinkedList object at 0x7f33bfe19030>, <dll.DoubleLinkedList object at 0x7f33bfe193f0>)

    def test_remove_middle_of_list(test_lists):
        """Test remove from middle of list."""
        test_lists[2].remove(3)
>       assert test_lists[2]._repr() == [5, 4, 2, 1]
E       AssertionError

0-ts/test_dll.py:211: AssertionError
[34m[*][0m Mutation score [47.76590 s]: [1m[34m88.7%[0m
[36m   -[0m all: 175
[36m   -[0m killed: 123 (70.3%)
[36m   -[0m survived: 16 (9.1%)
[36m   -[0m incompetent: 33 (18.9%)
[36m   -[0m timeout: 3 (1.7%)
