import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dll import Node, DoubleLinkedList

import pytest

class TestNode:
    def test_node_init(self):
        node = Node(5)
        assert node.data == 5
        assert node.next is None
        assert node.prev is None

class TestDoubleLinkedList:
    def test_double_linked_list_init_empty(self):
        dll = DoubleLinkedList()
        assert dll.head is None
        assert dll.tail is None
        assert dll._length == 0

    def test_double_linked_list_init_with_data(self):
        dll = DoubleLinkedList([1, 2, 3])
        assert dll.head.data == 1
        assert dll.tail.data == 3
        assert dll._length == 3

    def test_push(self):
        dll = DoubleLinkedList()
        dll.push(5)
        assert dll.head.data == 5
        assert dll.tail.data == 5
        assert dll._length == 1

    def test_pop(self):
        dll = DoubleLinkedList([1, 2, 3])
        assert dll.pop() == 1
        assert dll.head.data == 2
        assert dll.tail.data == 3
        assert dll._length == 2

    def test_append(self):
        dll = DoubleLinkedList()
        dll.append(5)
        assert dll.head.data == 5
        assert dll.tail.data == 5
        assert dll._length == 1

    def test_shift(self):
        dll = DoubleLinkedList([1, 2, 3])
        assert dll.shift() == 3
        assert dll.head.data == 1
        assert dll.tail.data == 2
        assert dll._length == 2

    def test_remove(self):
        dll = DoubleLinkedList([1, 2, 3])
        dll.remove(2)
        assert dll.head.data == 1
        assert dll.tail.data == 3
        assert dll._length == 2

    def test_remove_not_in_list(self):
        dll = DoubleLinkedList([1, 2, 3])
        with pytest.raises(ValueError):
            dll.remove(4)