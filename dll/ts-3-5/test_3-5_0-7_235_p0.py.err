import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dll import Node, DoubleLinkedList

import pytest

@pytest.fixture
def empty_dll():
    return DoubleLinkedList()

@pytest.fixture
def filled_dll():
    dll = DoubleLinkedList()
    dll.push(1)
    dll.push(2)
    dll.push(3)
    dll.append(4)
    dll.append(5)
    dll.append(6)
    return dll

def test_init_empty(empty_dll):
    assert empty_dll.head is None
    assert empty_dll.tail is None
    assert empty_dll._length == 0

def test_init_filled(filled_dll):
    assert filled_dll.head.data == 3
    assert filled_dll.tail.data == 6
    assert filled_dll._length == 6

def test_push(empty_dll):
    empty_dll.push(10)
    assert empty_dll.head.data == 10
    assert empty_dll.tail.data == 10
    assert empty_dll._length == 1

def test_pop(filled_dll):
    assert filled_dll.pop() == 3
    assert filled_dll.head.data == 2
    assert filled_dll._length == 5

def test_append(empty_dll):
    empty_dll.append(20)
    assert empty_dll.head.data == 20
    assert empty_dll.tail.data == 20
    assert empty_dll._length == 1

def test_shift(filled_dll):
    assert filled_dll.shift() == 6
    assert filled_dll.tail.data == 5
    assert filled_dll._length == 5

def test_remove(filled_dll):
    filled_dll.remove(3)
    assert filled_dll.head.data == 2
    assert filled_dll._length == 5

def test_remove_not_in_list(filled_dll):
    with pytest.raises(ValueError):
        filled_dll.remove(10)

def test_remove_single_element():
    dll = DoubleLinkedList(5)
    dll.remove(5)
    assert dll.head is None
    assert dll.tail is None
    assert dll._length == 0

def test_remove_head():
    dll = DoubleLinkedList([1, 2, 3])
    dll.remove(1)
    assert dll.head.data == 2
    assert dll._length == 2

def test_remove_tail():
    dll = DoubleLinkedList([1, 2, 3])
    dll.remove(3)
    assert dll.tail.data == 2
    assert dll._length == 2