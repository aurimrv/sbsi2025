import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dll import Node, DoubleLinkedList

import pytest

@pytest.fixture
def empty_dll():
    return DoubleLinkedList()

@pytest.fixture
def dll_with_values():
    return DoubleLinkedList([1, 2, 3])

def test_node():
    node = Node(10)
    assert node.data == 10
    assert node.next is None
    assert node.prev is None

def test_double_linked_list_init(empty_dll):
    assert empty_dll.head is None
    assert empty_dll.tail is None
    assert empty_dll._length == 0

def test_double_linked_list_push(empty_dll):
    empty_dll.push(5)
    assert empty_dll.head.data == 5
    assert empty_dll.tail.data == 5
    assert empty_dll._length == 1

def test_double_linked_list_pop(dll_with_values):
    assert dll_with_values.pop() == 3
    assert dll_with_values.head.data == 1
    assert dll_with_values.tail.data == 2
    assert dll_with_values._length == 2

def test_double_linked_list_append(empty_dll):
    empty_dll.append(7)
    assert empty_dll.head.data == 7
    assert empty_dll.tail.data == 7
    assert empty_dll._length == 1

def test_double_linked_list_shift(dll_with_values):
    assert dll_with_values.shift() == 1
    assert dll_with_values.tail.data == 2
    assert dll_with_values._length == 2

def test_double_linked_list_remove(dll_with_values):
    dll_with_values.remove(2)
    assert dll_with_values.head.data == 1
    assert dll_with_values.tail.data == 3
    assert dll_with_values._length == 2
    with pytest.raises(ValueError):
        dll_with_values.remove(5)

def test_double_linked_list_repr(dll_with_values):
    dll_list = dll_with_values._repr()
    assert dll_list == [1, 2, 3]