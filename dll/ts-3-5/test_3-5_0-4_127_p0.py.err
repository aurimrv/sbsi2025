import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dll import Node, DoubleLinkedList

@pytest.fixture
def empty_dll():
    return DoubleLinkedList()

@pytest.fixture
def filled_dll():
    dll = DoubleLinkedList()
    dll.push(1)
    dll.push(2)
    dll.push(3)
    dll.push(4)
    return dll

def test_push(empty_dll):
    empty_dll.push(5)
    assert empty_dll.head.data == 5
    assert empty_dll.tail.data == 5

def test_pop(filled_dll):
    assert filled_dll.pop() == 4
    assert filled_dll.head.data == 3

def test_append(empty_dll):
    empty_dll.append(6)
    assert empty_dll.tail.data == 6
    assert empty_dll.head.data == 6

def test_shift(filled_dll):
    assert filled_dll.shift() == 1
    assert filled_dll.tail.data == 2

def test_remove(filled_dll):
    filled_dll.remove(3)
    assert filled_dll.head.data == 4
    assert filled_dll.tail.data == 2

def test_remove_nonexistent(filled_dll):
    with pytest.raises(ValueError):
        filled_dll.remove(5)

def test_initialization_with_list():
    dll = DoubleLinkedList([1, 2, 3])
    assert dll.head.data == 1
    assert dll.tail.data == 3

def test_initialization_with_single_value():
    dll = DoubleLinkedList(10)
    assert dll.head.data == 10
    assert dll.tail.data == 10

def test_initialization_empty():
    dll = DoubleLinkedList()
    assert dll.head is None
    assert dll.tail is None
    assert dll._length == 0