import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dll import Node, DoubleLinkedList

@pytest.fixture
def initialized_dll():
    dll = DoubleLinkedList([1, 2, 3])
    return dll

def test_node_repr():
    node = Node(5)
    assert repr(node) == "Value: 5"

def test_dll_init():
    dll = DoubleLinkedList([1, 2, 3])
    assert dll.head.data == 1
    assert dll.tail.data == 3

def test_dll_push(initialized_dll):
    initialized_dll.push(0)
    assert initialized_dll.head.data == 0

def test_dll_pop(initialized_dll):
    assert initialized_dll.pop() == 3
    assert initialized_dll.head.data == 1

def test_dll_append(initialized_dll):
    initialized_dll.append(4)
    assert initialized_dll.tail.data == 4

def test_dll_shift(initialized_dll):
    assert initialized_dll.shift() == 1
    assert initialized_dll.tail.data == 3

def test_dll_remove(initialized_dll):
    initialized_dll.remove(2)
    assert initialized_dll.head.data == 1
    assert initialized_dll.tail.data == 3

def test_dll_empty_pop():
    dll = DoubleLinkedList()
    with pytest.raises(IndexError):
        dll.pop()

def test_dll_empty_shift():
    dll = DoubleLinkedList()
    with pytest.raises(IndexError):
        dll.shift()

def test_dll_remove_not_in_list(initialized_dll):
    with pytest.raises(ValueError):
        initialized_dll.remove(5)