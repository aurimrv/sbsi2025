import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from trie import Trie

# Test case for Trie initialization with words
def test_trie_initialization():
    words = ["apple", "banana", "cherry"]
    trie = Trie(words)
    assert trie.head == {'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}}}}},
                         'b': {'a': {'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}}}}},
                         'c': {'h': {'e': {'r': {'r': {'y': {'__eof__': '__eof__'}}}}}}}

# Test case for adding a word to Trie
def test_trie_add_word():
    trie = Trie([])
    trie.add("testing")
    assert trie.head == {'t': {'e': {'s': {'t': {'i': {'n': {'g': {'__eof__': '__eof__'}}}}}}}}

# Test case for getting all common prefixes
def test_get_all_common_prefix():
    words = ["apple", "banana", "cherry"]
    trie = Trie(words)
    assert trie.get_all_common_prefix("b") == ["banana"]
    assert trie.get_all_common_prefix("c") == ["cherry"]
    assert trie.get_all_common_prefix("a") == ["apple"]
    assert trie.get_all_common_prefix("ap") == ["apple"]
    assert trie.get_all_common_prefix("ban") == ["banana"]
    assert trie.get_all_common_prefix("che") == ["cherry"]

# Test case for getting all common prefixes with empty input
def test_get_all_common_prefix_empty_input():
    words = ["apple", "banana", "cherry"]
    trie = Trie(words)
    assert trie.get_all_common_prefix("") == []
