import os
import sys

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from trie import Trie

class TestTrie:

    def test_initialization(self):
        words = ['apple', 'banana', 'apricot']
        trie = Trie(words)
        assert trie.head == {'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}}, 'r': {'i': {'c': {'o': {'t': {'__eof__': '__eof__'}}}}}}, 'r': {'i': {'c': {'o': {'t': {'__eof__': '__eof__'}}}}}}, 'b': {'a': {'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}}}}}}

    def test_add_method(self):
        trie = Trie([])
        trie.add('apple')
        trie.add('apricot')
        assert trie.head == {'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}}, 'r': {'i': {'c': {'o': {'t': {'__eof__': '__eof__'}}}}}}, 'r': {'i': {'c': {'o': {'t': {'__eof__': '__eof__'}}}}}}}

    def test_get_all_common_prefix(self):
        words = ['apple', 'apricot', 'banana']
        trie = Trie(words)
        assert trie.get_all_common_prefix('a') == ['apple', 'apricot']
        assert trie.get_all_common_prefix('ap') == ['apple', 'apricot']
        assert trie.get_all_common_prefix('b') == ['banana']