import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from trie import Trie

@pytest.fixture
def sample_trie():
    return Trie(["apple", "apricot", "banana"])

def test_trie_initialization(sample_trie):
    assert sample_trie.head == {
        'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}},
                         'r': {'i': {'c': {'o': {'t': {'__eof__': '__eof__'}}}}}}},
              'b': {'a': {'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}}}}}}}

def test_add_method(sample_trie):
    sample_trie.add("grape")
    assert sample_trie.head == {
        'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}},
                         'r': {'i': {'c': {'o': {'t': {'__eof__': '__eof__'}}}}}}},
              'b': {'a': {'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}}}}},
              'g': {'r': {'a': {'p': {'e': {'__eof__': '__eof__'}}}}}}

def test_get_all_common_prefix_method(sample_trie):
    sample_trie.add("app")
    assert sample_trie.get_all_common_prefix("ap") == ['apple', 'apricot', 'app']
    assert sample_trie.get_all_common_prefix("ban") == ['banana']
    assert sample_trie.get_all_common_prefix("gr") == ['grape']