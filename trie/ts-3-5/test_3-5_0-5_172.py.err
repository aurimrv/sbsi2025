import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from trie import Trie

@pytest.fixture
def trie():
    return Trie(['apple', 'app', 'banana', 'bat'])

def test_trie_init(trie):
    assert trie.head == {'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}}, '__eof__': '__eof__'}, '__eof__': '__eof__'}}, 'b': {'a': {'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}, '__eof__': '__eof__'}}, 't': {'__eof__': '__eof__'}}}}

def test_trie_add(trie):
    trie.add('batman')
    assert trie.head == {'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}}, '__eof__': '__eof__'}, '__eof__': '__eof__'}}, 'b': {'a': {'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}, '__eof__': '__eof__'}}, 't': {'__eof__': '__eof__', 'm': {'a': {'n': {'__eof__': '__eof__'}}}}}}

def test_trie_get_all_common_prefix(trie):
    assert trie.get_all_common_prefix('ap') == ['apple', 'app']

def test_trie_get_all_common_prefix_empty(trie):
    assert trie.get_all_common_prefix('xyz') == []

def test_trie_get_all_common_prefix_partial(trie):
    assert trie.get_all_common_prefix('ba') == ['banana', 'bat']

def test_trie_get_all_common_prefix_single_word(trie):
    assert trie.get_all_common_prefix('bana') == ['banana']

def test_trie_get_all_common_prefix_long_prefix(trie):
    assert trie.get_all_common_prefix('banana') == ['banana']
