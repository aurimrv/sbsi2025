import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from trie import Trie

def test_trie_init():
    trie = Trie(['apple', 'banana', 'application'])
    assert trie.head == {'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}}, 'i': {'c': {'a': {'t': {'i': {'o': {'n': {'__eof__': '__eof__'}}}}}}}}, 'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}}}}}


def test_trie_add():
    trie = Trie([])
    trie.add('test')
    assert trie.head == {'t': {'e': {'s': {'t': {'__eof__': '__eof__'}}}}}
    
    trie.add('testing')
    assert trie.head == {'t': {'e': {'s': {'t': {'__eof__': '__eof__', 'i': {'n': {'g': {'__eof__': '__eof__'}}}}}}}
    
    
def test_trie_get_all_common_prefix():
    trie = Trie(['apple', 'banana', 'application'])
    
    # Test common prefix 'a'
    assert trie.get_all_common_prefix('a') == ['apple', 'banana', 'application']
    
    # Test common prefix 'app'
    assert trie.get_all_common_prefix('app') == ['apple', 'application']
    
    # Test common prefix 'ban'
    assert trie.get_all_common_prefix('ban') == ['banana']
    
    # Test common prefix 'c' (not present)
    assert trie.get_all_common_prefix('c') == []