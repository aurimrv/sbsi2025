import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from trie import Trie

@pytest.fixture
def trie_instance():
    words = ['apple', 'apply', 'banana', 'orange']
    return Trie(words)

def test_trie_init(trie_instance):
    assert trie_instance.head == {'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}},
                                                'y': {'__eof__': '__eof__'}}}},
                                  'b': {'a': {'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}}}}},
                                  'o': {'r': {'a': {'n': {'g': {'e': {'__eof__': '__eof__'}}}}}}}

def test_trie_add(trie_instance):
    trie_instance.add('grape')
    assert trie_instance.get_all_common_prefix('g') == ['grape']

    trie_instance.add('grapefruit')
    assert trie_instance.get_all_common_prefix('gra') == ['grape', 'grapefruit']

def test_get_all_common_prefix(trie_instance):
    common_prefix = trie_instance.get_all_common_prefix('app')
    expected_output = ['apple', 'apply']
    assert all(word in common_prefix for word in expected_output)

    no_prefix = trie_instance.get_all_common_prefix('xyz')
    assert no_prefix == []