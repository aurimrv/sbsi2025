import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from trie import Trie

@pytest.fixture
def trie_instance():
    words = ["apple", "application", "banana", "bat"]
    return Trie(words)

def test_trie_initialization(trie_instance):
    assert trie_instance.head == {'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}}, 'i': {'c': {'a': {'t': {'i': {'o': {'n': {'__eof__': '__eof__'}}}}}}}}}},
                                  'b': {'a': {'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}}}, 't': {'__eof__': '__eof__'}}}}

def test_add_method(trie_instance):
    trie_instance.add("batman")
    assert trie_instance.head == {'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}}, 'i': {'c': {'a': {'t': {'i': {'o': {'n': {'__eof__': '__eof__'}}}}}}}}},
                                  'b': {'a': {'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}}}, 't': {'__eof__': '__eof__', 'm': {'a': {'n': {'__eof__': '__eof__'}}}}}}}

def test_get_all_common_prefix(trie_instance):
    words_with_prefix = trie_instance.get_all_common_prefix("app")
    assert words_with_prefix == ['apple', 'application']

def test_get_all_common_prefix_no_match(trie_instance):
    words_with_prefix = trie_instance.get_all_common_prefix("xyz")
    assert words_with_prefix == []
