import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from trie import Trie

@pytest.fixture
def trie_instance():
    words = ["apple", "app", "banana", "bat", "ball"]
    return Trie(words)

def test_trie_initialization(trie_instance):
    assert trie_instance.head == {'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}}, '__eof__': '__eof__'}}, '__eof__': '__eof__'}, 'b': {'a': {'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}}}, 't': {'__eof__': '__eof__'}, 'l': {'l': {'__eof__': '__eof__'}}}}}

def test_add_method(trie_instance):
    trie_instance.add("cat")
    assert trie_instance.head == {'a': {'p': {'p': {'l': {'e': {'__eof__': '__eof__'}}, '__eof__': '__eof__'}}, '__eof__': '__eof__'}, 'b': {'a': {'n': {'a': {'n': {'a': {'__eof__': '__eof__'}}}}, 't': {'__eof__': '__eof__'}, 'l': {'l': {'__eof__': '__eof__'}}}, 'c': {'a': {'t': {'__eof__': '__eof__'}}}}

def test_get_all_common_prefix(trie_instance):
    assert trie_instance.get_all_common_prefix("ba") == ['banana', 'ball']
    assert trie_instance.get_all_common_prefix("bat") == ['bat']
    assert trie_instance.get_all_common_prefix("ap") == ['apple', 'app']

def test_get_all_common_prefix_empty(trie_instance):
    assert trie_instance.get_all_common_prefix("z") == []
    assert trie_instance.get_all_common_prefix("xyz") == []