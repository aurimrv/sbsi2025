import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from trie import Trie
from word_squares import word_squares

import pytest

@pytest.fixture
def sample_words():
    return ['area', 'lead', 'wall', 'lady', 'ball']

def test_construct(sample_words):
    assert word_squares(sample_words) == [['wall', 'area', 'lead', 'lady'], ['ball', 'area', 'lead', 'lady']]

def test_construct_empty_input():
    assert word_squares([]) == []

def test_construct_single_word():
    assert word_squares(['hello']) == [['hello']]

def test_construct_duplicate_words():
    assert word_squares(['book', 'book', 'book', 'book']) == [['book', 'book', 'book', 'book']]

def test_construct_long_words(sample_words):
    sample_words.extend(['tournament', 'elephant', 'awesome'])
    assert word_squares(sample_words) == [['wall', 'area', 'lead', 'lady'], ['ball', 'area', 'lead', 'lady']]

def test_construct_special_characters():
    assert word_squares(['@#$%', '!@#&', '1234']) == []

def test_construct_mixed_case(sample_words):
    sample_words.extend(['Camel', 'zebra', 'Eagle', 'elephant'])
    assert word_squares(sample_words) == [['wall', 'area', 'lead', 'lady'], ['ball', 'area', 'lead', 'lady']]