[34m[*][0m Start mutation process:
[36m   -[0m targets: word_squares.py
[36m   -[0m tests: ./0-ts
[34m[*][0m 3 tests passed:
[36m   -[0m test_word_squares [0.16462 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] AOR word_squares: 
--------------------------------------------------------------------------------
  15:             prefix += square[i][idx]
  16:         
  17:         prefix_words = trie.get_all_common_prefix(prefix)
  18:         for prefix_word in prefix_words:
[34m- 19:             construct(square + [prefix_word])[0m
[32m+ 19:             construct(square - [prefix_word])[0m
  20:     
  21:     construct.squares = []
  22:     
  23:     
--------------------------------------------------------------------------------
[0.12571 s] [36mincompetent[0m

TypeError: word_squares:19: TypeError: unsupported operand type(s) for -: 'list' and 'list'

[36m   -[0m [#   2] ASR word_squares: 
--------------------------------------------------------------------------------
  11:         
  12:         prefix = ''
  13:         idx = len(square)
  14:         for i in range(idx):
[34m- 15:             prefix += square[i][idx][0m
[32m+ 15:             prefix -= square[i][idx][0m
  16:         
  17:         prefix_words = trie.get_all_common_prefix(prefix)
  18:         for prefix_word in prefix_words:
  19:             construct(square + [prefix_word])
--------------------------------------------------------------------------------
[0.12786 s] [36mincompetent[0m

TypeError: word_squares:15: TypeError: unsupported operand type(s) for -=: 'str' and 'str'

[36m   -[0m [#   3] COI word_squares: 
--------------------------------------------------------------------------------
   4:     
   5:     trie = Trie(words)
   6:     
   7:     def construct(square):
[34m-  8:         if len(square) == len(square[0]):[0m
[32m+  8:         if not (len(square) == len(square[0])):[0m
   9:             construct.squares.append(square)
  10:             return
  11:         
  12:         prefix = ''
--------------------------------------------------------------------------------
[0.12866 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#   4] CRP word_squares: 
--------------------------------------------------------------------------------
   4:     
   5:     trie = Trie(words)
   6:     
   7:     def construct(square):
[34m-  8:         if len(square) == len(square[0]):[0m
[32m+  8:         if len(square) == len(square[1]):[0m
   9:             construct.squares.append(square)
  10:             return
  11:         
  12:         prefix = ''
--------------------------------------------------------------------------------
[0.12703 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]

0-ts/test_word_squares.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
word_squares:25: in word_squares
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

square = ['baba']

>   ???
E   IndexError: list index out of range

word_squares:8: IndexError
[36m   -[0m [#   5] CRP word_squares: 
--------------------------------------------------------------------------------
   8:         if len(square) == len(square[0]):
   9:             construct.squares.append(square)
  10:             return
  11:         
[34m- 12:         prefix = ''[0m
[32m+ 12:         prefix = 'mutpy'[0m
  13:         idx = len(square)
  14:         for i in range(idx):
  15:             prefix += square[i][idx]
  16:         
--------------------------------------------------------------------------------
[0.12839 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#   6] OIL word_squares: 
--------------------------------------------------------------------------------
  12:         prefix = ''
  13:         idx = len(square)
  14:         for i in range(idx):
  15:             prefix += square[i][idx]
[34m- 16:         [0m
[32m+ 16:             break[0m
  17:         prefix_words = trie.get_all_common_prefix(prefix)
  18:         for prefix_word in prefix_words:
  19:             construct(square + [prefix_word])
  20:     
--------------------------------------------------------------------------------
[0.13106 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#   7] OIL word_squares: 
--------------------------------------------------------------------------------
  16:         
  17:         prefix_words = trie.get_all_common_prefix(prefix)
  18:         for prefix_word in prefix_words:
  19:             construct(square + [prefix_word])
[34m- 20:     [0m
[32m+ 20:             break[0m
  21:     construct.squares = []
  22:     
  23:     
  24:     for word in words:
--------------------------------------------------------------------------------
[0.12726 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#   8] OIL word_squares: 
--------------------------------------------------------------------------------
  22:     
  23:     
  24:     for word in words:
  25:         construct([word])
[34m- 26:     [0m
[32m+ 26:         break[0m
  27:     return construct.squares
--------------------------------------------------------------------------------
[0.10805 s] [31msurvived[0m
[36m   -[0m [#   9] RIL word_squares: 
--------------------------------------------------------------------------------
  10:             return
  11:         
  12:         prefix = ''
  13:         idx = len(square)
[34m- 14:         for i in range(idx):[0m
[32m+ 14:         for i in reversed(range(idx)):[0m
  15:             prefix += square[i][idx]
  16:         
  17:         prefix_words = trie.get_all_common_prefix(prefix)
  18:         for prefix_word in prefix_words:
--------------------------------------------------------------------------------
[0.13103 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#  10] RIL word_squares: 
--------------------------------------------------------------------------------
  14:         for i in range(idx):
  15:             prefix += square[i][idx]
  16:         
  17:         prefix_words = trie.get_all_common_prefix(prefix)
[34m- 18:         for prefix_word in prefix_words:[0m
[32m+ 18:         for prefix_word in reversed(prefix_words):[0m
  19:             construct(square + [prefix_word])
  20:     
  21:     construct.squares = []
  22:     
--------------------------------------------------------------------------------
[0.13248 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_words_squares_multiple_results

def test_words_squares_multiple_results():
>       assert word_squares(['will', 'idle', 'lliw', 'lewd', 'llow']) == [['will', 'idle', 'lliw', 'lewd'], ['will', 'idle', 'llow', 'lewd']]
E       AssertionError

0-ts/test_word_squares.py:8: AssertionError
[36m   -[0m [#  11] RIL word_squares: 
--------------------------------------------------------------------------------
  20:     
  21:     construct.squares = []
  22:     
  23:     
[34m- 24:     for word in words:[0m
[32m+ 24:     for word in reversed(words):[0m
  25:         construct([word])
  26:     
  27:     return construct.squares
--------------------------------------------------------------------------------
[0.10925 s] [31msurvived[0m
[36m   -[0m [#  12] ROR word_squares: 
--------------------------------------------------------------------------------
   4:     
   5:     trie = Trie(words)
   6:     
   7:     def construct(square):
[34m-  8:         if len(square) == len(square[0]):[0m
[32m+  8:         if len(square) != len(square[0]):[0m
   9:             construct.squares.append(square)
  10:             return
  11:         
  12:         prefix = ''
--------------------------------------------------------------------------------
[0.12822 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#  13] SDL word_squares: 
--------------------------------------------------------------------------------
   1: from trie import Trie
   2: 
   3: def word_squares(words):
   4:     
[34m-  5:     trie = Trie(words)[0m
[32m+  5:     pass[0m
   6:     
   7:     def construct(square):
   8:         if len(square) == len(square[0]):
   9:             construct.squares.append(square)
--------------------------------------------------------------------------------
[0.12195 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]

0-ts/test_word_squares.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
word_squares:25: in word_squares
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

square = ['baba']

>   ???
E   NameError: name 'trie' is not defined

word_squares:17: NameError
[36m   -[0m [#  14] SDL word_squares: 
--------------------------------------------------------------------------------
   5:     trie = Trie(words)
   6:     
   7:     def construct(square):
   8:         if len(square) == len(square[0]):
[34m-  9:             construct.squares.append(square)[0m
[32m+  9:             pass[0m
  10:             return
  11:         
  12:         prefix = ''
  13:         idx = len(square)
--------------------------------------------------------------------------------
[0.10106 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#  15] SDL word_squares: 
--------------------------------------------------------------------------------
   6:     
   7:     def construct(square):
   8:         if len(square) == len(square[0]):
   9:             construct.squares.append(square)
[34m- 10:             return[0m
[32m+ 10:             pass[0m
  11:         
  12:         prefix = ''
  13:         idx = len(square)
  14:         for i in range(idx):
--------------------------------------------------------------------------------
[0.09874 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]

0-ts/test_word_squares.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
word_squares:25: in word_squares
    ???
word_squares:19: in construct
    ???
word_squares:19: in construct
    ???
word_squares:19: in construct
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

square = ['baba', 'abat', 'baba', 'atak']

>   ???
E   IndexError: string index out of range

word_squares:15: IndexError
[36m   -[0m [#  16] SDL word_squares: 
--------------------------------------------------------------------------------
   8:         if len(square) == len(square[0]):
   9:             construct.squares.append(square)
  10:             return
  11:         
[34m- 12:         prefix = ''[0m
[32m+ 12:         pass[0m
  13:         idx = len(square)
  14:         for i in range(idx):
  15:             prefix += square[i][idx]
  16:         
--------------------------------------------------------------------------------
[0.13041 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]

0-ts/test_word_squares.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
word_squares:25: in word_squares
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

square = ['baba']

>   ???
E   UnboundLocalError: local variable 'prefix' referenced before assignment

word_squares:15: UnboundLocalError
[36m   -[0m [#  17] SDL word_squares: 
--------------------------------------------------------------------------------
   9:             construct.squares.append(square)
  10:             return
  11:         
  12:         prefix = ''
[34m- 13:         idx = len(square)[0m
[32m+ 13:         pass[0m
  14:         for i in range(idx):
  15:             prefix += square[i][idx]
  16:         
  17:         prefix_words = trie.get_all_common_prefix(prefix)
--------------------------------------------------------------------------------
[0.10107 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]

0-ts/test_word_squares.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
word_squares:25: in word_squares
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

square = ['baba']

>   ???
E   NameError: name 'idx' is not defined

word_squares:14: NameError
[36m   -[0m [#  18] SDL word_squares: 
--------------------------------------------------------------------------------
  13:         idx = len(square)
  14:         for i in range(idx):
  15:             prefix += square[i][idx]
  16:         
[34m- 17:         prefix_words = trie.get_all_common_prefix(prefix)[0m
[32m+ 17:         pass[0m
  18:         for prefix_word in prefix_words:
  19:             construct(square + [prefix_word])
  20:     
  21:     construct.squares = []
--------------------------------------------------------------------------------
[0.10316 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]

0-ts/test_word_squares.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
word_squares:25: in word_squares
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

square = ['baba']

>   ???
E   NameError: name 'prefix_words' is not defined

word_squares:18: NameError
[36m   -[0m [#  19] SDL word_squares: 
--------------------------------------------------------------------------------
  15:             prefix += square[i][idx]
  16:         
  17:         prefix_words = trie.get_all_common_prefix(prefix)
  18:         for prefix_word in prefix_words:
[34m- 19:             construct(square + [prefix_word])[0m
[32m+ 19:             pass[0m
  20:     
  21:     construct.squares = []
  22:     
  23:     
--------------------------------------------------------------------------------
[0.12901 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#  20] SDL word_squares: 
--------------------------------------------------------------------------------
  17:         prefix_words = trie.get_all_common_prefix(prefix)
  18:         for prefix_word in prefix_words:
  19:             construct(square + [prefix_word])
  20:     
[34m- 21:     construct.squares = [][0m
[32m+ 21:     pass[0m
  22:     
  23:     
  24:     for word in words:
  25:         construct([word])
--------------------------------------------------------------------------------
[0.12881 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]

0-ts/test_word_squares.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
word_squares:25: in word_squares
    ???
word_squares:19: in construct
    ???
word_squares:19: in construct
    ???
word_squares:19: in construct
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

square = ['baba', 'abat', 'baba', 'atak']

>   ???
E   AttributeError: 'function' object has no attribute 'squares'

word_squares:9: AttributeError
[36m   -[0m [#  21] SDL word_squares: 
--------------------------------------------------------------------------------
  21:     construct.squares = []
  22:     
  23:     
  24:     for word in words:
[34m- 25:         construct([word])[0m
[32m+ 25:         pass[0m
  26:     
  27:     return construct.squares
--------------------------------------------------------------------------------
[0.12693 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#  22] SDL word_squares: 
--------------------------------------------------------------------------------
  23:     
  24:     for word in words:
  25:         construct([word])
  26:     
[34m- 27:     return construct.squares[0m
[32m+ 27:     pass[0m
--------------------------------------------------------------------------------
[0.13039 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#  23] ZIL word_squares: 
--------------------------------------------------------------------------------
  11:         
  12:         prefix = ''
  13:         idx = len(square)
  14:         for i in range(idx):
[34m- 15:             prefix += square[i][idx][0m
[32m+ 15:             break[0m
  16:         
  17:         prefix_words = trie.get_all_common_prefix(prefix)
  18:         for prefix_word in prefix_words:
  19:             construct(square + [prefix_word])
--------------------------------------------------------------------------------
[0.12790 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#  24] ZIL word_squares: 
--------------------------------------------------------------------------------
  15:             prefix += square[i][idx]
  16:         
  17:         prefix_words = trie.get_all_common_prefix(prefix)
  18:         for prefix_word in prefix_words:
[34m- 19:             construct(square + [prefix_word])[0m
[32m+ 19:             break[0m
  20:     
  21:     construct.squares = []
  22:     
  23:     
--------------------------------------------------------------------------------
[0.12932 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[36m   -[0m [#  25] ZIL word_squares: 
--------------------------------------------------------------------------------
  21:     construct.squares = []
  22:     
  23:     
  24:     for word in words:
[34m- 25:         construct([word])[0m
[32m+ 25:         break[0m
  26:     
  27:     return construct.squares
--------------------------------------------------------------------------------
[0.12720 s] [32mkilled[0m by 0-ts/test_word_squares.py::test_word_squares_basic

def test_word_squares_basic():
>       assert word_squares(['baba', 'atak', 'abat', 'delt', 'quad']) == [['baba', 'abat', 'baba', 'atak']]
E       AssertionError

0-ts/test_word_squares.py:5: AssertionError
[34m[*][0m Mutation score [4.06504 s]: [1m[34m91.3%[0m
[36m   -[0m all: 25
[36m   -[0m killed: 21 (84.0%)
[36m   -[0m survived: 2 (8.0%)
[36m   -[0m incompetent: 2 (8.0%)
[36m   -[0m timeout: 0 (0.0%)
