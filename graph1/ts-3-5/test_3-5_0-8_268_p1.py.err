import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from graph1 import Graph, WeightedGraph

@pytest.fixture
def setup_graph():
    graph = Graph(5)
    graph.add_edge(1, 2)
    graph.add_edge(2, 3)
    graph.add_edge(3, 4)
    graph.add_edge(4, 5)
    return graph

@pytest.fixture
def setup_weighted_graph():
    w_graph = WeightedGraph()
    w_graph.add_edge(1, 2, 5)
    w_graph.add_edge(2, 3, 3)
    w_graph.add_edge(3, 4, 7)
    return w_graph

def test_graph_add_edge(setup_graph):
    setup_graph.add_edge(5, 4)
    assert 5 in setup_graph.graph.keys()
    assert 4 in setup_graph.graph[5]

def test_graph_remove_adjacent(setup_graph):
    setup_graph.remove_edge(1, 2)
    assert 2 not in setup_graph.graph[1]

def test_graph_has_cycle(setup_graph):
    assert setup_graph.has_cycle() == False

def test_graph_topological_sort(setup_graph):
    assert setup_graph.topological_sort() == [1, 2, 3, 4, 5]

def test_weighted_graph_add_edge(setup_weighted_graph):
    setup_weighted_graph.add_edge(4, 5, 10)
    assert setup_weighted_graph.vertices[4].adjacent[5] == 10

def test_weighted_graph_remove_edge(setup_weighted_graph):
    setup_weighted_graph.remove_edge(1, 2)
    assert 2 not in setup_weighted_graph.vertices[1].adjacent