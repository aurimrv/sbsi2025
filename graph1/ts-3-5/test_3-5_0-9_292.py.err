import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__));
project_dir = os.path.abspath(os.path.join(module_dir, '..'));
sys.path.append(project_dir)

from graph1 import Graph, WeightedGraph

# Testing for Graph class
@pytest.fixture
def graph():
    return Graph(5)

def test_add_edge(graph):
    graph.add_edge(0, 1)
    assert 1 in graph.graph[0]

def test_has_cycle_empty_graph(graph):
    assert not graph.has_cycle()

def test_has_cycle_with_cycle(graph):
    graph.add_edge(0, 1)
    graph.add_edge(1, 2)
    graph.add_edge(2, 0)
    assert graph.has_cycle()

def test_topological_sort(graph):
    graph.add_edge(5, 2)
    graph.add_edge(5, 0)
    graph.add_edge(4, 0)
    graph.add_edge(4, 1)
    graph.add_edge(2, 3)
    graph.add_edge(3, 1)

    assert graph.topological_sort() == [5, 4, 2, 3, 1, 0]

# Testing for WeightedGraph class
@pytest.fixture
def weighted_graph():
    return WeightedGraph()

def test_add_edge(weighted_graph):
    weighted_graph.add_edge(0, 1, 5)
    assert weighted_graph.vertices[0].adjacent[1] == 5

def test_remove_edge(weighted_graph):
    weighted_graph.add_edge(0, 1, 5)
    weighted_graph.remove_edge(0, 1)
    assert 1 not in weighted_graph.vertices[0].adjacent

def test_add_vertex(weighted_graph):
    weighted_graph.add_vertex(0)
    assert 0 in weighted_graph.vertices