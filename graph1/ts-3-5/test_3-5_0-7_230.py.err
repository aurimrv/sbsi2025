import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from graph1 import Graph, WeightedGraph

# Tests for Graph
def test_graph_add_edge():
    graph = Graph(5)
    graph.add_edge(1, 2)
    assert graph.graph == {1: [2], 2: []}

def test_graph_has_cycle():
    graph = Graph(4)
    graph.add_edge(0, 1)
    graph.add_edge(1, 2)
    graph.add_edge(2, 3)
    assert not graph.has_cycle()

def test_graph_topological_sort():
    graph = Graph(4)
    graph.add_edge(0, 1)
    graph.add_edge(0, 2)
    graph.add_edge(1, 3)
    graph.add_edge(2, 3)
    assert graph.topological_sort() == [0, 1, 2, 3]

# Tests for WeightedGraph
def test_weighted_graph_add_edge():
    w_graph = WeightedGraph()
    w_graph.add_edge('A', 'B', 5)
    assert w_graph.vertices['A'].adjacent == {'B': 5}

def test_weighted_graph_remove_edge():
    w_graph = WeightedGraph()
    w_graph.add_edge('A', 'B', 5)
    w_graph.remove_edge('A', 'B')
    assert 'B' not in w_graph.vertices['A'].adjacent

if __name__ == "__main__":
    pytest.main()