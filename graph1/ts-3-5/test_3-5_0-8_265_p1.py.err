import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from graph1 import Graph, WeightedGraph

def test_graph_add_edge():
    g = Graph(3)
    g.add_edge(1, 2)
    assert g.graph == {1: [2], 2: []}

def test_graph_has_cycle():
    g = Graph(3)
    g.add_edge(1, 2)
    g.add_edge(2, 3)
    assert g.has_cycle() == False

def test_graph_topological_sort():
    g = Graph(4)
    g.add_edge(1, 2)
    g.add_edge(1, 3)
    g.add_edge(2, 4)
    g.add_edge(3, 4)
    assert g.topological_sort() == [1, 2, 3, 4]

def test_weighted_graph_add_vertex():
    wg = WeightedGraph()
    wg.add_vertex(1)
    assert len(wg.vertices) == 1

def test_weighted_graph_add_edge():
    wg = WeightedGraph()
    wg.add_edge(1, 2, 5)
    assert wg.vertices[1].adjacent == {2: 5}

def test_weighted_graph_remove_edge():
    wg = WeightedGraph()
    wg.add_edge(1, 2, 3)
    wg.remove_edge(1, 2)
    assert wg.vertices[1].adjacent == {}

def test_weighted_graph_str():
    wg = WeightedGraph()
    wg.add_vertex(1)
    wg.add_vertex(2)
    assert str(wg) == "1 adjacent: [], 2 adjacent: []"