[34m[*][0m Start mutation process:
[36m   -[0m targets: complement.py
[36m   -[0m tests: ./0-ts
[34m[*][0m 1 tests passed:
[36m   -[0m test_complement [0.16218 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] COD complement: 
--------------------------------------------------------------------------------
   2:     '''
   3:     Find the non-zero padded binary compelement.
   4: 
   5:     '''
[34m-  6:     if not num:[0m
[32m+  6:     if num:[0m
   7:         return 1
   8:     i = 1
   9:     while i <= num:
  10:         num ^= i
--------------------------------------------------------------------------------
[0.12930 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
>       assert complement(0b101) == 0b010
E       AssertionError

0-ts/test_complement.py:5: AssertionError
[36m   -[0m [#   2] COI complement: 
--------------------------------------------------------------------------------
   2:     '''
   3:     Find the non-zero padded binary compelement.
   4: 
   5:     '''
[34m-  6:     if not num:[0m
[32m+  6:     if not ((not num)):[0m
   7:         return 1
   8:     i = 1
   9:     while i <= num:
  10:         num ^= i
--------------------------------------------------------------------------------
[0.11746 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
>       assert complement(0b101) == 0b010
E       AssertionError

0-ts/test_complement.py:5: AssertionError
[36m   -[0m [#   3] COI complement: 
--------------------------------------------------------------------------------
   5:     '''
   6:     if not num:
   7:         return 1
   8:     i = 1
[34m-  9:     while i <= num:[0m
[32m+  9:     while not (i <= num):[0m
  10:         num ^= i
  11:         i = i << 1
  12:     return num
--------------------------------------------------------------------------------
[0.09136 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
>       assert complement(0b101) == 0b010
E       AssertionError

0-ts/test_complement.py:5: AssertionError
[36m   -[0m [#   4] CRP complement: 
--------------------------------------------------------------------------------
   3:     Find the non-zero padded binary compelement.
   4: 
   5:     '''
   6:     if not num:
[34m-  7:         return 1[0m
[32m+  7:         return 2[0m
   8:     i = 1
   9:     while i <= num:
  10:         num ^= i
  11:         i = i << 1
--------------------------------------------------------------------------------
[0.12660 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
        assert complement(0b101) == 0b010
        assert complement(0b10) == 0b01
        assert complement(0b1100111010111110000) == 0b0011000101000001111
>       assert complement(0b0) == 0b1
E       AssertionError

0-ts/test_complement.py:8: AssertionError
[36m   -[0m [#   5] CRP complement: 
--------------------------------------------------------------------------------
   4: 
   5:     '''
   6:     if not num:
   7:         return 1
[34m-  8:     i = 1[0m
[32m+  8:     i = 2[0m
   9:     while i <= num:
  10:         num ^= i
  11:         i = i << 1
  12:     return num
--------------------------------------------------------------------------------
[0.12707 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
>       assert complement(0b101) == 0b010
E       AssertionError

0-ts/test_complement.py:5: AssertionError
[36m   -[0m [#   6] CRP complement: 
--------------------------------------------------------------------------------
   7:         return 1
   8:     i = 1
   9:     while i <= num:
  10:         num ^= i
[34m- 11:         i = i << 1[0m
[32m+ 11:         i = i << 2[0m
  12:     return num
--------------------------------------------------------------------------------
[0.09378 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
>       assert complement(0b101) == 0b010
E       AssertionError

0-ts/test_complement.py:5: AssertionError
[36m   -[0m [#   7] LOR complement: 
--------------------------------------------------------------------------------
   6:     if not num:
   7:         return 1
   8:     i = 1
   9:     while i <= num:
[34m- 10:         num ^= i[0m
[32m+ 10:         num &= i[0m
  11:         i = i << 1
  12:     return num
--------------------------------------------------------------------------------
[0.09422 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
>       assert complement(0b101) == 0b010
E       AssertionError

0-ts/test_complement.py:5: AssertionError
[36m   -[0m [#   8] LOR complement: 
--------------------------------------------------------------------------------
   7:         return 1
   8:     i = 1
   9:     while i <= num:
  10:         num ^= i
[34m- 11:         i = i << 1[0m
[32m+ 11:         i = i >> 1[0m
  12:     return num
--------------------------------------------------------------------------------
[5.00761 s] [33mtimeout[0m
[36m   -[0m [#   9] OIL complement: 
--------------------------------------------------------------------------------
   8:     i = 1
   9:     while i <= num:
  10:         num ^= i
  11:         i = i << 1
[34m- 12:     return num[0m
[32m+ 12:         break[0m
[32m+ 13:     return num[0m
--------------------------------------------------------------------------------
[0.09232 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
>       assert complement(0b101) == 0b010
E       AssertionError

0-ts/test_complement.py:5: AssertionError
[36m   -[0m [#  10] ROR complement: 
--------------------------------------------------------------------------------
   5:     '''
   6:     if not num:
   7:         return 1
   8:     i = 1
[34m-  9:     while i <= num:[0m
[32m+  9:     while i >= num:[0m
  10:         num ^= i
  11:         i = i << 1
  12:     return num
--------------------------------------------------------------------------------
[0.09311 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
>       assert complement(0b101) == 0b010
E       AssertionError

0-ts/test_complement.py:5: AssertionError
[36m   -[0m [#  11] ROR complement: 
--------------------------------------------------------------------------------
   5:     '''
   6:     if not num:
   7:         return 1
   8:     i = 1
[34m-  9:     while i <= num:[0m
[32m+  9:     while i < num:[0m
  10:         num ^= i
  11:         i = i << 1
  12:     return num
--------------------------------------------------------------------------------
[0.07620 s] [31msurvived[0m
[36m   -[0m [#  12] SDL complement: 
--------------------------------------------------------------------------------
   3:     Find the non-zero padded binary compelement.
   4: 
   5:     '''
   6:     if not num:
[34m-  7:         return 1[0m
[32m+  7:         pass[0m
   8:     i = 1
   9:     while i <= num:
  10:         num ^= i
  11:         i = i << 1
--------------------------------------------------------------------------------
[0.09566 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
        assert complement(0b101) == 0b010
        assert complement(0b10) == 0b01
        assert complement(0b1100111010111110000) == 0b0011000101000001111
>       assert complement(0b0) == 0b1
E       AssertionError

0-ts/test_complement.py:8: AssertionError
[36m   -[0m [#  13] SDL complement: 
--------------------------------------------------------------------------------
   4: 
   5:     '''
   6:     if not num:
   7:         return 1
[34m-  8:     i = 1[0m
[32m+  8:     pass[0m
   9:     while i <= num:
  10:         num ^= i
  11:         i = i << 1
  12:     return num
--------------------------------------------------------------------------------
[0.11494 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
>       assert complement(0b101) == 0b010

0-ts/test_complement.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

num = 5

>   ???
E   UnboundLocalError: local variable 'i' referenced before assignment

complement:9: UnboundLocalError
[36m   -[0m [#  14] SDL complement: 
--------------------------------------------------------------------------------
   7:         return 1
   8:     i = 1
   9:     while i <= num:
  10:         num ^= i
[34m- 11:         i = i << 1[0m
[32m+ 11:         pass[0m
  12:     return num
--------------------------------------------------------------------------------
[5.00782 s] [33mtimeout[0m
[36m   -[0m [#  15] SDL complement: 
--------------------------------------------------------------------------------
   8:     i = 1
   9:     while i <= num:
  10:         num ^= i
  11:         i = i << 1
[34m- 12:     return num[0m
[32m+ 12:     pass[0m
--------------------------------------------------------------------------------
[0.11530 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
>       assert complement(0b101) == 0b010
E       AssertionError

0-ts/test_complement.py:5: AssertionError
[36m   -[0m [#  16] ZIL complement: 
--------------------------------------------------------------------------------
   6:     if not num:
   7:         return 1
   8:     i = 1
   9:     while i <= num:
[34m- 10:         num ^= i[0m
[34m- 11:         i = i << 1[0m
[32m+ 10:         break[0m
[32m+ 11:     [0m
  12:     return num
--------------------------------------------------------------------------------
[0.11388 s] [32mkilled[0m by 0-ts/test_complement.py::test_complement

def test_complement():
>       assert complement(0b101) == 0b010
E       AssertionError

0-ts/test_complement.py:5: AssertionError
[34m[*][0m Mutation score [11.96948 s]: [1m[34m93.8%[0m
[36m   -[0m all: 16
[36m   -[0m killed: 13 (81.2%)
[36m   -[0m survived: 1 (6.2%)
[36m   -[0m incompetent: 0 (0.0%)
[36m   -[0m timeout: 2 (12.5%)
