import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from graph2 import Graph

@pytest.fixture
def empty_graph():
    return Graph()

@pytest.fixture
def sample_graph():
    g = Graph([1, 2, 3])
    g.add_edge(1, 2)
    g.add_edge(2, 3)
    return g

def test_empty_graph_nodes(empty_graph):
    assert empty_graph.nodes() == []

def test_empty_graph_edges(empty_graph):
    assert empty_graph.edges() == []

def test_empty_graph_add_node(empty_graph):
    empty_graph.add_node(1)
    assert empty_graph.nodes() == [1]

def test_empty_graph_add_edge(empty_graph):
    empty_graph.add_edge(1, 2)
    assert empty_graph.edges() == [(1, 2)]

def test_empty_graph_del_node(empty_graph):
    with pytest.raises(KeyError):
        empty_graph.del_node(1)

def test_empty_graph_del_edge(empty_graph):
    with pytest.raises(KeyError):
        empty_graph.del_edge(1, 2)

def test_empty_graph_has_node(empty_graph):
    assert empty_graph.has_node(1) == False

def test_empty_graph_neighbors(empty_graph):
    with pytest.raises(KeyError):
        empty_graph.neighbors(1)

def test_empty_graph_adjacent(empty_graph):
    with pytest.raises(KeyError):
        empty_graph.adjacent(1, 2)

def test_sample_graph_nodes(sample_graph):
    assert sample_graph.nodes() == [1, 2, 3]

def test_sample_graph_edges(sample_graph):
    assert sample_graph.edges() == [(1, 2), (2, 3)]

def test_sample_graph_add_node(sample_graph):
    sample_graph.add_node(4)
    assert sample_graph.nodes() == [1, 2, 3, 4]

def test_sample_graph_add_edge(sample_graph):
    sample_graph.add_edge(1, 3)
    assert sample_graph.edges() == [(1, 2), (2, 3), (1, 3)]

def test_sample_graph_del_node(sample_graph):
    sample_graph.del_node(2)
    assert sample_graph.nodes() == [1, 3]

def test_sample_graph_del_edge(sample_graph):
    sample_graph.del_edge(1, 2)
    assert sample_graph.edges() == [(2, 3)]

def test_sample_graph_has_node(sample_graph):
    assert sample_graph.has_node(3) == True

def test_sample_graph_neighbors(sample_graph):
    assert sample_graph.neighbors(1) == {2}

def test_sample_graph_adjacent(sample_graph):
    assert sample_graph.adjacent(1, 2) == True