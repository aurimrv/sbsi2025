import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from graph2 import Graph

@pytest.fixture
def graph():
    return Graph([1, 2, 3])

def test_nodes(graph):
    assert set(graph.nodes()) == {1, 2, 3}

def test_edges_empty_graph():
    g = Graph()
    assert g.edges() == []

def test_edges(graph):
    graph.add_edge(1, 2)
    graph.add_edge(2, 3)
    assert set(graph.edges()) == {(1, 2), (2, 3)}

def test_add_node(graph):
    graph.add_node(4)
    assert 4 in graph.nodes()

def test_add_edge(graph):
    graph.add_edge(1, 4)
    assert (1, 4) in graph.edges()

def test_del_node(graph):
    graph.add_node(5)
    graph.add_edge(5, 3)
    graph.del_node(5)
    assert 5 not in graph.nodes()
    assert 5 not in graph.neighbors(3)

def test_del_edge(graph):
    graph.add_edge(1, 2)
    graph.del_edge(1, 2)
    assert (1, 2) not in graph.edges()

def test_has_node(graph):
    assert graph.has_node(2)
    assert not graph.has_node(4)

def test_neighbors(graph):
    graph.add_edge(1, 2)
    graph.add_edge(1, 3)
    assert set(graph.neighbors(1)) == {2, 3}

def test_adjacent(graph):
    graph.add_edge(1, 2)
    graph.add_edge(2, 3)
    assert graph.adjacent(1, 2)
    assert graph.adjacent(2, 3)
    assert not graph.adjacent(1, 3)