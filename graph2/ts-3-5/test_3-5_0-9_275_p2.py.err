import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from graph2 import Graph

@pytest.fixture
def graph():
    return Graph()

def test_add_node(graph):
    graph.add_node(1)
    assert graph.has_node(1)
    assert not graph.has_node(2)
    
def test_add_edge(graph):
    graph.add_node(1)
    graph.add_node(2)
    graph.add_edge(1, 2)
    assert graph.adjacent(1, 2)
    assert graph.adjacent(2, 1)
    
def test_del_node(graph):
    graph.add_node(1)
    graph.add_node(2)
    graph.add_edge(1, 2)
    graph.del_node(1)
    assert not graph.has_node(1)
    assert not graph.adjacent(1, 2)
    
def test_del_edge(graph):
    graph.add_node(1)
    graph.add_node(2)
    graph.add_edge(1, 2)
    graph.del_edge(1, 2)
    assert not graph.adjacent(1, 2)
    
def test_nodes(graph):
    graph.add_node(1)
    graph.add_node(2)
    nodes = graph.nodes()
    assert 1 in nodes
    assert 2 in nodes
    
def test_edges(graph):
    graph.add_node(1)
    graph.add_node(2)
    graph.add_edge(1, 2)
    edges = graph.edges()
    assert (1, 2) in edges
    assert (2, 1) in edges
    
def test_has_node(graph):
    graph.add_node(1)
    assert graph.has_node(1)
    assert not graph.has_node(2)
    
def test_neighbors(graph):
    graph.add_node(1)
    graph.add_node(2)
    graph.add_edge(1, 2)
    neighbors = graph.neighbors(1)
    assert 2 in neighbors
    assert len(neighbors) == 1
    
def test_adjacent(graph):
    graph.add_node(1)
    graph.add_node(2)
    graph.add_edge(1, 2)
    assert graph.adjacent(1, 2)
    assert graph.adjacent(2, 1)