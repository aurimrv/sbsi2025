import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from graph2 import Graph

# Test cases for the Graph class methods

def test_nodes_method():
    g = Graph()
    g.add_node(1)
    g.add_node(2)
    assert g.nodes() == [1, 2]

def test_edges_method():
    g = Graph()
    g.add_edge(1, 2)
    g.add_edge(2, 3)
    assert g.edges() == [(1, 2), (2, 3)]

def test_add_node_method():
    g = Graph()
    g.add_node(1)
    assert g.has_node(1)

def test_add_edge_method():
    g = Graph()
    g.add_node(1)
    g.add_node(2)
    g.add_edge(1, 2)
    assert g.adjacent(1, 2)

def test_del_node_method():
    g = Graph()
    g.add_node(1)
    g.del_node(1)
    assert not g.has_node(1)

def test_del_edge_method():
    g = Graph()
    g.add_node(1)
    g.add_node(2)
    g.add_edge(1, 2)
    g.del_edge(1, 2)
    assert not g.adjacent(1, 2)

def test_has_node_method():
    g = Graph()
    g.add_node(1)
    assert g.has_node(1)

def test_neighbors_method():
    g = Graph()
    g.add_node(1)
    g.add_node(2)
    g.add_edge(1, 2)
    assert g.neighbors(1) == {2}

def test_adjacent_method():
    g = Graph()
    g.add_node(1)
    g.add_node(2)
    g.add_edge(1, 2)
    assert g.adjacent(1, 2)