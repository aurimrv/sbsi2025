[34m[*][0m Start mutation process:
[36m   -[0m targets: heapsort.py
[36m   -[0m tests: ./0-ts
[34m[*][0m 4 tests passed:
[36m   -[0m test_heap_sort [0.16446 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] AOD heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
[34m- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 13:     copy_list = list(map((lambda x: (x * 1)), copy_list))[0m
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.10067 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3f80d0>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#   2] AOD heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
[34m- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 16:     copy_list = list(map((lambda x: (x * 1)), copy_list))[0m
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.13218 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca255f00>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#   3] AOD heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
[34m- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 22:         copy_list = list(map((lambda x: (x * 1)), copy_list))[0m
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.12183 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3c2200>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#   4] AOD heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
[34m- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))[0m
[32m+ 27:         sorted_list = list(map((lambda x: (x * 1)), sorted_list))[0m
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.12267 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3fa530>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#   5] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
[34m- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 13:     copy_list = list(map((lambda x: (x / (-1))), copy_list))[0m
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.08039 s] [31msurvived[0m
[36m   -[0m [#   6] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
[34m- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 13:     copy_list = list(map((lambda x: (x // (-1))), copy_list))[0m
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.11474 s] [31msurvived[0m
[36m   -[0m [#   7] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
[34m- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 13:     copy_list = list(map((lambda x: (x ** (-1))), copy_list))[0m
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.12025 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca2ebe50>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#   8] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
[34m- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 13:     copy_list = list(map((lambda x: (x * (+1))), copy_list))[0m
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.12965 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3f9ae0>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#   9] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
[34m- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 16:     copy_list = list(map((lambda x: (x / (-1))), copy_list))[0m
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.10247 s] [31msurvived[0m
[36m   -[0m [#  10] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
[34m- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 16:     copy_list = list(map((lambda x: (x // (-1))), copy_list))[0m
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.10879 s] [31msurvived[0m
[36m   -[0m [#  11] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
[34m- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 16:     copy_list = list(map((lambda x: (x ** (-1))), copy_list))[0m
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.13129 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3c3c40>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#  12] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
[34m- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 16:     copy_list = list(map((lambda x: (x * (+1))), copy_list))[0m
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.12261 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca2eb160>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#  13] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
[34m- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 22:         copy_list = list(map((lambda x: (x / (-1))), copy_list))[0m
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.10338 s] [31msurvived[0m
[36m   -[0m [#  14] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
[34m- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 22:         copy_list = list(map((lambda x: (x // (-1))), copy_list))[0m
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.11176 s] [31msurvived[0m
[36m   -[0m [#  15] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
[34m- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 22:         copy_list = list(map((lambda x: (x ** (-1))), copy_list))[0m
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.12730 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca40fcd0>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  16] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
[34m- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 22:         copy_list = list(map((lambda x: (x * (+1))), copy_list))[0m
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.13290 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca298c70>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  17] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
[34m- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))[0m
[32m+ 27:         sorted_list = list(map((lambda x: (x / (-1))), sorted_list))[0m
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.10283 s] [31msurvived[0m
[36m   -[0m [#  18] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
[34m- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))[0m
[32m+ 27:         sorted_list = list(map((lambda x: (x // (-1))), sorted_list))[0m
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.10934 s] [31msurvived[0m
[36m   -[0m [#  19] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
[34m- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))[0m
[32m+ 27:         sorted_list = list(map((lambda x: (x ** (-1))), sorted_list))[0m
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.13371 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3f8df0>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  20] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
[34m- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))[0m
[32m+ 27:         sorted_list = list(map((lambda x: (x * (+1))), sorted_list))[0m
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.13059 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca349d80>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  21] COI heapsort: 
--------------------------------------------------------------------------------
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
[34m- 21:     if sort == 'max':[0m
[32m+ 21:     if not (sort == 'max'):[0m
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
--------------------------------------------------------------------------------
[0.10363 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca15bca0>

    def test_heap_sort_custom(self):
>       assert self.sorted_list == custom_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:15: AssertionError
[36m   -[0m [#  22] COI heapsort: 
--------------------------------------------------------------------------------
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
[34m- 26:     if sort == 'max':[0m
[32m+ 26:     if not (sort == 'max'):[0m
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.15337 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca332980>

    def test_heap_sort_custom(self):
>       assert self.sorted_list == custom_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:15: AssertionError
[36m   -[0m [#  23] CRP heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
[34m- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 13:     copy_list = list(map((lambda x: (x * (-2))), copy_list))[0m
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.13240 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca29b640>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#  24] CRP heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
[34m- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 16:     copy_list = list(map((lambda x: (x * (-2))), copy_list))[0m
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.12794 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3301f0>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#  25] CRP heapsort: 
--------------------------------------------------------------------------------
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
  18: 
[34m- 19: def custom_heap_sort(lst: list, sort='min'):[0m
[32m+ 19: def custom_heap_sort(lst: list, sort='mutpy'):[0m
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
--------------------------------------------------------------------------------
[0.10926 s] [31msurvived[0m
[36m   -[0m [#  26] CRP heapsort: 
--------------------------------------------------------------------------------
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
  18: 
[34m- 19: def custom_heap_sort(lst: list, sort='min'):[0m
[32m+ 19: def custom_heap_sort(lst: list, sort=''):[0m
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
--------------------------------------------------------------------------------
[0.08156 s] [31msurvived[0m
[36m   -[0m [#  27] CRP heapsort: 
--------------------------------------------------------------------------------
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
[34m- 21:     if sort == 'max':[0m
[32m+ 21:     if sort == 'mutpy':[0m
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
--------------------------------------------------------------------------------
[0.12867 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3c23b0>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  28] CRP heapsort: 
--------------------------------------------------------------------------------
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
[34m- 21:     if sort == 'max':[0m
[32m+ 21:     if sort == '':[0m
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
--------------------------------------------------------------------------------
[0.13496 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca257f70>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  29] CRP heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
[34m- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 22:         copy_list = list(map((lambda x: (x * (-2))), copy_list))[0m
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.12301 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3c1cc0>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  30] CRP heapsort: 
--------------------------------------------------------------------------------
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
[34m- 26:     if sort == 'max':[0m
[32m+ 26:     if sort == 'mutpy':[0m
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.12982 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3322c0>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  31] CRP heapsort: 
--------------------------------------------------------------------------------
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
[34m- 26:     if sort == 'max':[0m
[32m+ 26:     if sort == '':[0m
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.10075 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3c0e80>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  32] CRP heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
[34m- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))[0m
[32m+ 27:         sorted_list = list(map((lambda x: (x * (-2))), sorted_list))[0m
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.12958 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca29af50>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  33] ROR heapsort: 
--------------------------------------------------------------------------------
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
[34m- 21:     if sort == 'max':[0m
[32m+ 21:     if sort != 'max':[0m
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
--------------------------------------------------------------------------------
[0.13235 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca331930>

    def test_heap_sort_custom(self):
>       assert self.sorted_list == custom_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:15: AssertionError
[36m   -[0m [#  34] ROR heapsort: 
--------------------------------------------------------------------------------
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
[34m- 26:     if sort == 'max':[0m
[32m+ 26:     if sort != 'max':[0m
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.13127 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca330df0>

    def test_heap_sort_custom(self):
>       assert self.sorted_list == custom_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:15: AssertionError
[36m   -[0m [#  35] SDL heapsort: 
--------------------------------------------------------------------------------
   2: from heapq import heapify, heappop
   3: from heap import Heap
   4: 
   5: def heap_sort(lst: list):
[34m-  6:     copy_list = deepcopy(lst)[0m
[32m+  6:     pass[0m
   7:     heapify(copy_list)
   8:     return [heappop(copy_list) for i in range(len(copy_list))]
   9: 
  10: def max_heap_sort(lst: list):
--------------------------------------------------------------------------------
[0.12993 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca281ba0>

    def test_heap_sort(self):
>       assert self.sorted_list == heap_sort(self.random_list)

0-ts/test_heap_sort.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [7, 9, 3, 24, 84, 12, ...]

>   ???
E   NameError: name 'copy_list' is not defined

heapsort:7: NameError
[36m   -[0m [#  36] SDL heapsort: 
--------------------------------------------------------------------------------
   3: from heap import Heap
   4: 
   5: def heap_sort(lst: list):
   6:     copy_list = deepcopy(lst)
[34m-  7:     heapify(copy_list)[0m
[32m+  7:     pass[0m
   8:     return [heappop(copy_list) for i in range(len(copy_list))]
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.10720 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca29b370>

    def test_heap_sort(self):
>       assert self.sorted_list == heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:9: AssertionError
[36m   -[0m [#  37] SDL heapsort: 
--------------------------------------------------------------------------------
   4: 
   5: def heap_sort(lst: list):
   6:     copy_list = deepcopy(lst)
   7:     heapify(copy_list)
[34m-  8:     return [heappop(copy_list) for i in range(len(copy_list))][0m
[32m+  8:     pass[0m
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
--------------------------------------------------------------------------------
[0.12675 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca2807f0>

    def test_heap_sort(self):
>       assert self.sorted_list == heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:9: AssertionError
[36m   -[0m [#  38] SDL heapsort: 
--------------------------------------------------------------------------------
   7:     heapify(copy_list)
   8:     return [heappop(copy_list) for i in range(len(copy_list))]
   9: 
  10: def max_heap_sort(lst: list):
[34m- 11:     copy_list = deepcopy(lst)[0m
[32m+ 11:     pass[0m
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
--------------------------------------------------------------------------------
[0.10182 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca281ab0>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)

0-ts/test_heap_sort.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [7, 9, 3, 24, 84, 12, ...]

>   ???
E   UnboundLocalError: local variable 'copy_list' referenced before assignment

heapsort:13: UnboundLocalError
[36m   -[0m [#  39] SDL heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
[34m- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 13:     pass[0m
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.12928 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3c1720>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#  40] SDL heapsort: 
--------------------------------------------------------------------------------
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
[34m- 14:     heapify(copy_list)[0m
[32m+ 14:     pass[0m
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
  18: 
--------------------------------------------------------------------------------
[0.13096 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca308220>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#  41] SDL heapsort: 
--------------------------------------------------------------------------------
  11:     copy_list = deepcopy(lst)
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
[34m- 15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))][0m
[32m+ 15:     pass[0m
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
--------------------------------------------------------------------------------
[0.13081 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca2ba350>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#  42] SDL heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
[34m- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 16:     pass[0m
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.12983 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3c3d60>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#  43] SDL heapsort: 
--------------------------------------------------------------------------------
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
[34m- 17:     return copy_list[0m
[32m+ 17:     pass[0m
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
--------------------------------------------------------------------------------
[0.12916 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_max_heap_sort

self = <test_heap_sort.TestHeapSort object at 0x7fcaca309300>

    def test_max_heap_sort(self):
>       assert self.sorted_list[::-1] == max_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:12: AssertionError
[36m   -[0m [#  44] SDL heapsort: 
--------------------------------------------------------------------------------
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
[34m- 20:     copy_list = deepcopy(lst)[0m
[32m+ 20:     pass[0m
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
--------------------------------------------------------------------------------
[0.12904 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca2abfa0>

    def test_heap_sort_custom(self):
>       assert self.sorted_list == custom_heap_sort(self.random_list)

0-ts/test_heap_sort.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [7, 9, 3, 24, 84, 12, ...], sort = 'min'

>   ???
E   UnboundLocalError: local variable 'copy_list' referenced before assignment

heapsort:24: UnboundLocalError
[36m   -[0m [#  45] SDL heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
[34m- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))[0m
[32m+ 22:         pass[0m
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.12289 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca2f3100>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  46] SDL heapsort: 
--------------------------------------------------------------------------------
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
[34m- 23:     heap = Heap()[0m
[32m+ 23:     pass[0m
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
--------------------------------------------------------------------------------
[0.15223 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca2ea140>

    def test_heap_sort_custom(self):
>       assert self.sorted_list == custom_heap_sort(self.random_list)

0-ts/test_heap_sort.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [7, 9, 3, 24, 84, 12, ...], sort = 'min'

>   ???
E   NameError: name 'heap' is not defined

heapsort:24: NameError
[36m   -[0m [#  47] SDL heapsort: 
--------------------------------------------------------------------------------
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
[34m- 24:     heap.build(copy_list)[0m
[32m+ 24:     pass[0m
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.12842 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca40d2d0>

    def test_heap_sort_custom(self):
>       assert self.sorted_list == custom_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:15: AssertionError
[36m   -[0m [#  48] SDL heapsort: 
--------------------------------------------------------------------------------
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
[34m- 25:     sorted_list = [heap.delete_min() for i in range(heap.size())][0m
[32m+ 25:     pass[0m
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.13118 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca2b9f30>

    def test_heap_sort_custom(self):
>       assert self.sorted_list == custom_heap_sort(self.random_list)

0-ts/test_heap_sort.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [7, 9, 3, 24, 84, 12, ...], sort = 'min'

>   ???
E   UnboundLocalError: local variable 'sorted_list' referenced before assignment

heapsort:28: UnboundLocalError
[36m   -[0m [#  49] SDL heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
[34m- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))[0m
[32m+ 27:         pass[0m
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.13333 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_max_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca40c0a0>

    def test_heap_max_sort_custom(self):
>       assert self.sorted_list[::-1] == custom_heap_sort(self.random_list, 'max')
E       AssertionError

0-ts/test_heap_sort.py:18: AssertionError
[36m   -[0m [#  50] SDL heapsort: 
--------------------------------------------------------------------------------
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
[34m- 28:     return sorted_list[0m
[32m+ 28:     pass[0m
--------------------------------------------------------------------------------
[0.13121 s] [32mkilled[0m by 0-ts/test_heap_sort.py::TestHeapSort::test_heap_sort_custom

self = <test_heap_sort.TestHeapSort object at 0x7fcaca3c36d0>

    def test_heap_sort_custom(self):
>       assert self.sorted_list == custom_heap_sort(self.random_list)
E       AssertionError

0-ts/test_heap_sort.py:15: AssertionError
[34m[*][0m Mutation score [9.12142 s]: [1m[34m80.0%[0m
[36m   -[0m all: 50
[36m   -[0m killed: 40 (80.0%)
[36m   -[0m survived: 10 (20.0%)
[36m   -[0m incompetent: 0 (0.0%)
[36m   -[0m timeout: 0 (0.0%)
