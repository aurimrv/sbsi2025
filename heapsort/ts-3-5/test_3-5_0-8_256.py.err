import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heap import Heap

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heapsort import heap_sort, max_heap_sort, custom_heap_sort

def test_heap_sort():
    # Test heap_sort method with a random list
    assert heap_sort([5, 3, 8, 1, 2]) == [1, 2, 3, 5, 8]

    # Test heap_sort method with an already sorted list
    assert heap_sort([1, 2, 3, 5, 8]) == [1, 2, 3, 5, 8]

def test_max_heap_sort():
    # Test max_heap_sort method with a random list
    assert max_heap_sort([5, 3, 8, 1, 2]) == [8, 5, 3, 2, 1]

    # Test max_heap_sort method with an already sorted list
    assert max_heap_sort([8, 5, 3, 2, 1]) == [8, 5, 3, 2, 1]

def test_custom_heap_sort():
    # Test custom_heap_sort method with a random list sorted in ascending order
    assert custom_heap_sort([5, 3, 8, 1, 2], 'min') == [1, 2, 3, 5, 8]

    # Test custom_heap_sort method with a random list sorted in descending order
    assert custom_heap_sort([5, 3, 8, 1, 2], 'max') == [8, 5, 3, 2, 1]