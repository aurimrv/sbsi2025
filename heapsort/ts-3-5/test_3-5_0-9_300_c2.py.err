import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heapsort import heap_sort, max_heap_sort, custom_heap_sort

def test_heap_sort():
    lst = [4, 10, 3, 5, 1]
    sorted_lst = heap_sort(lst)
    assert sorted_lst == [1, 3, 4, 5, 10]

    lst = [7, 2, 9, 1]
    sorted_lst = heap_sort(lst)
    assert sorted_lst == [1, 2, 7, 9]

def test_max_heap_sort():
    lst = [4, 10, 3, 5, 1]
    sorted_lst = max_heap_sort(lst)
    assert sorted_lst == [10, 5, 4, 3, 1]

    lst = [7, 2, 9, 1]
    sorted_lst = max_heap_sort(lst)
    assert sorted_lst == [9, 7, 2, 1]

def test_custom_heap_sort():
    lst = [4, 10, 3, 5, 1]
    sorted_lst = custom_heap_sort(lst)
    assert sorted_lst == [1, 3, 4, 5, 10]

    lst = [7, 2, 9, 1]
    sorted_lst = custom_heap_sort(lst, sort='max')
    assert sorted_lst == [9, 7, 2, 1]

    lst = [4, 10, 3, 5, 1]
    sorted_lst = custom_heap_sort(lst, sort='max')
    assert sorted_lst == [10, 5, 4, 3, 1]