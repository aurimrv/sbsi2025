import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heap import Heap

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

import heapsort

def test_heap_sort_empty_list():
    assert heapsort.heap_sort([]) == []

def test_heap_sort_single_element():
    assert heapsort.heap_sort([1]) == [1]

def test_heap_sort_sorted_list():
    assert heapsort.heap_sort([1, 2, 3, 4]) == [1, 2, 3, 4]

def test_max_heap_sort_empty_list():
    assert heapsort.max_heap_sort([]) == []

def test_max_heap_sort_single_element():
    assert heapsort.max_heap_sort([1]) == [1]

def test_max_heap_sort_sorted_list():
    assert heapsort.max_heap_sort([1, 2, 3, 4]) == [4, 3, 2, 1]

def test_custom_heap_sort_empty_list():
    assert heapsort.custom_heap_sort([], sort='min') == []

def test_custom_heap_sort_single_element():
    assert heapsort.custom_heap_sort([1], sort='min') == [1]

def test_custom_heap_sort_sorted_list_min():
    assert heapsort.custom_heap_sort([1, 2, 3, 4], sort='min') == [1, 2, 3, 4]

def test_custom_heap_sort_sorted_list_max():
    assert heapsort.custom_heap_sort([1, 2, 3, 4], sort='max') == [4, 3, 2, 1]