import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heap import Heap

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heapsort import heap_sort, max_heap_sort, custom_heap_sort

def test_heap_sort():
    # Test heap_sort with regular list
    assert heap_sort([4, 1, 7, 3, 2]) == [1, 2, 3, 4, 7]

    # Test heap_sort with negative numbers
    assert heap_sort([-4, -1, -7, -3, -2]) == [-7, -4, -3, -2, -1]

def test_max_heap_sort():
    # Test max_heap_sort with regular list
    assert max_heap_sort([4, 1, 7, 3, 2]) == [7, 4, 3, 2, 1]

    # Test max_heap_sort with negative numbers
    assert max_heap_sort([-4, -1, -7, -3, -2]) == [-1, -2, -3, -4, -7]

def test_custom_heap_sort():
    # Test custom_heap_sort with regular list and sorting in ascending order
    assert custom_heap_sort([4, 1, 7, 3, 2], sort='min') == [1, 2, 3, 4, 7]

    # Test custom_heap_sort with regular list and sorting in descending order
    assert custom_heap_sort([4, 1, 7, 3, 2], sort='max') == [7, 4, 3, 2, 1]

    # Test custom_heap_sort with negative numbers and sorting in ascending order
    assert custom_heap_sort([-4, -1, -7, -3, -2], sort='min') == [-7, -4, -3, -2, -1]

    # Test custom_heap_sort with negative numbers and sorting in descending order
    assert custom_heap_sort([-4, -1, -7, -3, -2], sort='max') == [-1, -2, -3, -4, -7]