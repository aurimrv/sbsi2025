import os
import sys
import pytest
from heapsort import heap_sort, max_heap_sort, custom_heap_sort

@pytest.mark.parametrize("input_list, expected", [
    ([4, 2, 7, 1, 9, 5], [1, 2, 4, 5, 7, 9]),
    ([9, 8, 7, 6, 5, 4, 3, 2, 1], [1, 2, 3, 4, 5, 6, 7, 8, 9]),
])
def test_heap_sort(input_list, expected):
    assert heap_sort(input_list) == expected

@pytest.mark.parametrize("input_list, expected", [
    ([4, 2, 7, 1, 9, 5], [9, 7, 5, 4, 2, 1]),
    ([9, 8, 7, 6, 5, 4, 3, 2, 1], [9, 8, 7, 6, 5, 4, 3, 2, 1]),
])
def test_max_heap_sort(input_list, expected):
    assert max_heap_sort(input_list) == expected

@pytest.mark.parametrize("input_list, sort, expected", [
    ([4, 2, 7, 1, 9, 5], 'min', [1, 2, 4, 5, 7, 9]),
    ([4, 2, 7, 1, 9, 5], 'max', [9, 7, 5, 4, 2, 1]),
    ([9, 8, 7, 6, 5, 4, 3, 2, 1], 'min', [1, 2, 3, 4, 5, 6, 7, 8, 9]),
    ([9, 8, 7, 6, 5, 4, 3, 2, 1], 'max', [9, 8, 7, 6, 5, 4, 3, 2, 1]),
])
def test_custom_heap_sort(input_list, sort, expected):
    assert custom_heap_sort(input_list, sort) == expected