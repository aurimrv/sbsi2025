[*] Start mutation process:
   - targets: heapsort.py
   - tests: ts-3-5/test_3-5_0-7_234.py
[*] 11 tests passed:
   - test_3-5_0-7_234 [0.18469 s]
[*] Start mutants generation and execution:
   - [#   1] AOD heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     copy_list = list(map((lambda x: (x * 1)), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.18561 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_sorted_list

def test_max_heap_sort_sorted_list():
>       assert max_heap_sort([5, 4, 3, 2, 1]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:25: AssertionError
   - [#   2] AOD heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     copy_list = list(map((lambda x: (x * 1)), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.19876 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_sorted_list

def test_max_heap_sort_sorted_list():
>       assert max_heap_sort([5, 4, 3, 2, 1]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:25: AssertionError
   - [#   3] AOD heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         copy_list = list(map((lambda x: (x * 1)), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.18736 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_max_sorted_list

def test_custom_heap_sort_max_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:40: AssertionError
   - [#   4] AOD heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         sorted_list = list(map((lambda x: (x * 1)), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19307 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_max_sorted_list

def test_custom_heap_sort_max_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:40: AssertionError
   - [#   5] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     copy_list = list(map((lambda x: (x / (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.16698 s] survived
   - [#   6] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     copy_list = list(map((lambda x: (x // (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.16778 s] survived
   - [#   7] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     copy_list = list(map((lambda x: (x ** (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.19090 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_sorted_list

def test_max_heap_sort_sorted_list():
>       assert max_heap_sort([5, 4, 3, 2, 1]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:25: AssertionError
   - [#   8] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     copy_list = list(map((lambda x: (x * (+1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.19816 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_sorted_list

def test_max_heap_sort_sorted_list():
>       assert max_heap_sort([5, 4, 3, 2, 1]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:25: AssertionError
   - [#   9] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     copy_list = list(map((lambda x: (x / (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.17839 s] survived
   - [#  10] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     copy_list = list(map((lambda x: (x // (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.16484 s] survived
   - [#  11] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     copy_list = list(map((lambda x: (x ** (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.18949 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_sorted_list

def test_max_heap_sort_sorted_list():
>       assert max_heap_sort([5, 4, 3, 2, 1]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:25: AssertionError
   - [#  12] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     copy_list = list(map((lambda x: (x * (+1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.18893 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_sorted_list

def test_max_heap_sort_sorted_list():
>       assert max_heap_sort([5, 4, 3, 2, 1]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:25: AssertionError
   - [#  13] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         copy_list = list(map((lambda x: (x / (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.16919 s] survived
   - [#  14] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         copy_list = list(map((lambda x: (x // (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.16870 s] survived
   - [#  15] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         copy_list = list(map((lambda x: (x ** (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.19289 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_max_sorted_list

def test_custom_heap_sort_max_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:40: AssertionError
   - [#  16] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         copy_list = list(map((lambda x: (x * (+1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.19008 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_max_sorted_list

def test_custom_heap_sort_max_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:40: AssertionError
   - [#  17] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         sorted_list = list(map((lambda x: (x / (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.17054 s] survived
   - [#  18] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         sorted_list = list(map((lambda x: (x // (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.16846 s] survived
   - [#  19] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         sorted_list = list(map((lambda x: (x ** (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19448 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_max_sorted_list

def test_custom_heap_sort_max_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:40: AssertionError
   - [#  20] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         sorted_list = list(map((lambda x: (x * (+1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19380 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_max_sorted_list

def test_custom_heap_sort_max_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:40: AssertionError
   - [#  21] COI heapsort: 
--------------------------------------------------------------------------------
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
- 21:     if sort == 'max':
+ 21:     if not (sort == 'max'):
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
--------------------------------------------------------------------------------
[0.19259 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_sorted_list

def test_custom_heap_sort_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='min') == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:34: AssertionError
   - [#  22] COI heapsort: 
--------------------------------------------------------------------------------
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
- 26:     if sort == 'max':
+ 26:     if not (sort == 'max'):
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19092 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_sorted_list

def test_custom_heap_sort_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='min') == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:34: AssertionError
   - [#  23] ROR heapsort: 
--------------------------------------------------------------------------------
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
- 21:     if sort == 'max':
+ 21:     if sort != 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
--------------------------------------------------------------------------------
[0.19033 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_sorted_list

def test_custom_heap_sort_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='min') == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:34: AssertionError
   - [#  24] ROR heapsort: 
--------------------------------------------------------------------------------
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
- 26:     if sort == 'max':
+ 26:     if sort != 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19269 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_sorted_list

def test_custom_heap_sort_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='min') == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:34: AssertionError
   - [#  25] SDL heapsort: 
--------------------------------------------------------------------------------
   2: from heapq import heapify, heappop
   3: from heap import Heap
   4: 
   5: def heap_sort(lst: list):
-  6:     copy_list = deepcopy(lst)
+  6:     pass
   7:     heapify(copy_list)
   8:     return [heappop(copy_list) for i in range(len(copy_list))]
   9: 
  10: def max_heap_sort(lst: list):
--------------------------------------------------------------------------------
[0.19635 s] killed by ts-3-5/test_3-5_0-7_234.py::test_heap_sort_empty_list

def test_heap_sort_empty_list():
>       assert heap_sort([]) == []

ts-3-5/test_3-5_0-7_234.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = []

>   ???
E   NameError: name 'copy_list' is not defined

heapsort:7: NameError
   - [#  26] SDL heapsort: 
--------------------------------------------------------------------------------
   3: from heap import Heap
   4: 
   5: def heap_sort(lst: list):
   6:     copy_list = deepcopy(lst)
-  7:     heapify(copy_list)
+  7:     pass
   8:     return [heappop(copy_list) for i in range(len(copy_list))]
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.18699 s] killed by ts-3-5/test_3-5_0-7_234.py::test_heap_sort_reverse_sorted_list

def test_heap_sort_reverse_sorted_list():
>       assert heap_sort([5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:19: AssertionError
   - [#  27] SDL heapsort: 
--------------------------------------------------------------------------------
   4: 
   5: def heap_sort(lst: list):
   6:     copy_list = deepcopy(lst)
   7:     heapify(copy_list)
-  8:     return [heappop(copy_list) for i in range(len(copy_list))]
+  8:     pass
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
--------------------------------------------------------------------------------
[0.18804 s] killed by ts-3-5/test_3-5_0-7_234.py::test_heap_sort_empty_list

def test_heap_sort_empty_list():
>       assert heap_sort([]) == []
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:13: AssertionError
   - [#  28] SDL heapsort: 
--------------------------------------------------------------------------------
   7:     heapify(copy_list)
   8:     return [heappop(copy_list) for i in range(len(copy_list))]
   9: 
  10: def max_heap_sort(lst: list):
- 11:     copy_list = deepcopy(lst)
+ 11:     pass
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
--------------------------------------------------------------------------------
[0.18988 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_empty_list

def test_max_heap_sort_empty_list():
>       assert max_heap_sort([]) == []

ts-3-5/test_3-5_0-7_234.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = []

>   ???
E   UnboundLocalError: local variable 'copy_list' referenced before assignment

heapsort:13: UnboundLocalError
   - [#  29] SDL heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     pass
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.18928 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_sorted_list

def test_max_heap_sort_sorted_list():
>       assert max_heap_sort([5, 4, 3, 2, 1]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:25: AssertionError
   - [#  30] SDL heapsort: 
--------------------------------------------------------------------------------
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
- 14:     heapify(copy_list)
+ 14:     pass
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
  18: 
--------------------------------------------------------------------------------
[0.19068 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_reverse_sorted_list

def test_max_heap_sort_reverse_sorted_list():
>       assert max_heap_sort([1, 2, 3, 4, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:28: AssertionError
   - [#  31] SDL heapsort: 
--------------------------------------------------------------------------------
  11:     copy_list = deepcopy(lst)
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
- 15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
+ 15:     pass
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
--------------------------------------------------------------------------------
[0.19342 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_reverse_sorted_list

def test_max_heap_sort_reverse_sorted_list():
>       assert max_heap_sort([1, 2, 3, 4, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:28: AssertionError
   - [#  32] SDL heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     pass
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.18842 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_sorted_list

def test_max_heap_sort_sorted_list():
>       assert max_heap_sort([5, 4, 3, 2, 1]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:25: AssertionError
   - [#  33] SDL heapsort: 
--------------------------------------------------------------------------------
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
- 17:     return copy_list
+ 17:     pass
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
--------------------------------------------------------------------------------
[0.18903 s] killed by ts-3-5/test_3-5_0-7_234.py::test_max_heap_sort_empty_list

def test_max_heap_sort_empty_list():
>       assert max_heap_sort([]) == []
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:22: AssertionError
   - [#  34] SDL heapsort: 
--------------------------------------------------------------------------------
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
- 20:     copy_list = deepcopy(lst)
+ 20:     pass
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
--------------------------------------------------------------------------------
[0.19985 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_empty_list

def test_custom_heap_sort_empty_list():
>       assert custom_heap_sort([], sort='min') == []

ts-3-5/test_3-5_0-7_234.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [], sort = 'min'

>   ???
E   UnboundLocalError: local variable 'copy_list' referenced before assignment

heapsort:24: UnboundLocalError
   - [#  35] SDL heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         pass
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.19918 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_max_sorted_list

def test_custom_heap_sort_max_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:40: AssertionError
   - [#  36] SDL heapsort: 
--------------------------------------------------------------------------------
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
- 23:     heap = Heap()
+ 23:     pass
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
--------------------------------------------------------------------------------
[0.20182 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_empty_list

def test_custom_heap_sort_empty_list():
>       assert custom_heap_sort([], sort='min') == []

ts-3-5/test_3-5_0-7_234.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [], sort = 'min'

>   ???
E   NameError: name 'heap' is not defined

heapsort:24: NameError
   - [#  37] SDL heapsort: 
--------------------------------------------------------------------------------
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
- 24:     heap.build(copy_list)
+ 24:     pass
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.20007 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_sorted_list

def test_custom_heap_sort_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='min') == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:34: AssertionError
   - [#  38] SDL heapsort: 
--------------------------------------------------------------------------------
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
- 25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
+ 25:     pass
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19400 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_empty_list

def test_custom_heap_sort_empty_list():
>       assert custom_heap_sort([], sort='min') == []

ts-3-5/test_3-5_0-7_234.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [], sort = 'min'

>   ???
E   UnboundLocalError: local variable 'sorted_list' referenced before assignment

heapsort:28: UnboundLocalError
   - [#  39] SDL heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         pass
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.20241 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_max_sorted_list

def test_custom_heap_sort_max_sorted_list():
>       assert custom_heap_sort([1, 2, 3, 4, 5], sort='max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:40: AssertionError
   - [#  40] SDL heapsort: 
--------------------------------------------------------------------------------
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
- 28:     return sorted_list
+ 28:     pass
--------------------------------------------------------------------------------
[0.20147 s] killed by ts-3-5/test_3-5_0-7_234.py::test_custom_heap_sort_empty_list

def test_custom_heap_sort_empty_list():
>       assert custom_heap_sort([], sort='min') == []
E       AssertionError

ts-3-5/test_3-5_0-7_234.py:31: AssertionError
[*] Mutation score [8.70970 s]: 80.0%
   - all: 40
   - killed: 32 (80.0%)
   - survived: 8 (20.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
