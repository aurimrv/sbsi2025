[*] Start mutation process:
   - targets: heapsort.py
   - tests: ts-3-5/test_3-5_0-8_261.py
[*] 3 tests passed:
   - test_3-5_0-8_261 [0.17334 s]
[*] Start mutants generation and execution:
   - [#   1] AOD heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     copy_list = list(map((lambda x: (x * 1)), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.18911 s] killed by ts-3-5/test_3-5_0-8_261.py::test_max_heap_sort

def test_max_heap_sort():
>       assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:17: AssertionError
   - [#   2] AOD heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     copy_list = list(map((lambda x: (x * 1)), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.20059 s] killed by ts-3-5/test_3-5_0-8_261.py::test_max_heap_sort

def test_max_heap_sort():
>       assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:17: AssertionError
   - [#   3] AOD heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         copy_list = list(map((lambda x: (x * 1)), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.19541 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
        assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:22: AssertionError
   - [#   4] AOD heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         sorted_list = list(map((lambda x: (x * 1)), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19258 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
        assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:22: AssertionError
   - [#   5] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     copy_list = list(map((lambda x: (x / (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.17119 s] survived
   - [#   6] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     copy_list = list(map((lambda x: (x // (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.16415 s] survived
   - [#   7] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     copy_list = list(map((lambda x: (x ** (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.19258 s] killed by ts-3-5/test_3-5_0-8_261.py::test_max_heap_sort

def test_max_heap_sort():
>       assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:17: AssertionError
   - [#   8] AOR heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     copy_list = list(map((lambda x: (x * (+1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.18366 s] killed by ts-3-5/test_3-5_0-8_261.py::test_max_heap_sort

def test_max_heap_sort():
>       assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:17: AssertionError
   - [#   9] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     copy_list = list(map((lambda x: (x / (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.16667 s] survived
   - [#  10] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     copy_list = list(map((lambda x: (x // (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.18254 s] survived
   - [#  11] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     copy_list = list(map((lambda x: (x ** (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.18645 s] killed by ts-3-5/test_3-5_0-8_261.py::test_max_heap_sort

def test_max_heap_sort():
>       assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:17: AssertionError
   - [#  12] AOR heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     copy_list = list(map((lambda x: (x * (+1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.18355 s] killed by ts-3-5/test_3-5_0-8_261.py::test_max_heap_sort

def test_max_heap_sort():
>       assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:17: AssertionError
   - [#  13] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         copy_list = list(map((lambda x: (x / (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.16473 s] survived
   - [#  14] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         copy_list = list(map((lambda x: (x // (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.16808 s] survived
   - [#  15] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         copy_list = list(map((lambda x: (x ** (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.19436 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
        assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:22: AssertionError
   - [#  16] AOR heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         copy_list = list(map((lambda x: (x * (+1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.18866 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
        assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:22: AssertionError
   - [#  17] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         sorted_list = list(map((lambda x: (x / (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.16854 s] survived
   - [#  18] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         sorted_list = list(map((lambda x: (x // (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.16774 s] survived
   - [#  19] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         sorted_list = list(map((lambda x: (x ** (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19210 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
        assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:22: AssertionError
   - [#  20] AOR heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         sorted_list = list(map((lambda x: (x * (+1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19326 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
        assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:22: AssertionError
   - [#  21] COI heapsort: 
--------------------------------------------------------------------------------
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
- 21:     if sort == 'max':
+ 21:     if not (sort == 'max'):
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
--------------------------------------------------------------------------------
[0.19264 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:21: AssertionError
   - [#  22] COI heapsort: 
--------------------------------------------------------------------------------
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
- 26:     if sort == 'max':
+ 26:     if not (sort == 'max'):
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19464 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:21: AssertionError
   - [#  23] ROR heapsort: 
--------------------------------------------------------------------------------
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
- 21:     if sort == 'max':
+ 21:     if sort != 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
--------------------------------------------------------------------------------
[0.19440 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:21: AssertionError
   - [#  24] ROR heapsort: 
--------------------------------------------------------------------------------
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
- 26:     if sort == 'max':
+ 26:     if sort != 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19404 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:21: AssertionError
   - [#  25] SDL heapsort: 
--------------------------------------------------------------------------------
   2: from heapq import heapify, heappop
   3: from heap import Heap
   4: 
   5: def heap_sort(lst: list):
-  6:     copy_list = deepcopy(lst)
+  6:     pass
   7:     heapify(copy_list)
   8:     return [heappop(copy_list) for i in range(len(copy_list))]
   9: 
  10: def max_heap_sort(lst: list):
--------------------------------------------------------------------------------
[0.19678 s] killed by ts-3-5/test_3-5_0-8_261.py::test_heap_sort

def test_heap_sort():
>       assert heap_sort([4, 1, 3, 2, 5]) == [1, 2, 3, 4, 5]

ts-3-5/test_3-5_0-8_261.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [4, 1, 3, 2, 5]

>   ???
E   NameError: name 'copy_list' is not defined

heapsort:7: NameError
   - [#  26] SDL heapsort: 
--------------------------------------------------------------------------------
   3: from heap import Heap
   4: 
   5: def heap_sort(lst: list):
   6:     copy_list = deepcopy(lst)
-  7:     heapify(copy_list)
+  7:     pass
   8:     return [heappop(copy_list) for i in range(len(copy_list))]
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.20188 s] killed by ts-3-5/test_3-5_0-8_261.py::test_heap_sort

def test_heap_sort():
>       assert heap_sort([4, 1, 3, 2, 5]) == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:13: AssertionError
   - [#  27] SDL heapsort: 
--------------------------------------------------------------------------------
   4: 
   5: def heap_sort(lst: list):
   6:     copy_list = deepcopy(lst)
   7:     heapify(copy_list)
-  8:     return [heappop(copy_list) for i in range(len(copy_list))]
+  8:     pass
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
--------------------------------------------------------------------------------
[0.19260 s] killed by ts-3-5/test_3-5_0-8_261.py::test_heap_sort

def test_heap_sort():
>       assert heap_sort([4, 1, 3, 2, 5]) == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:13: AssertionError
   - [#  28] SDL heapsort: 
--------------------------------------------------------------------------------
   7:     heapify(copy_list)
   8:     return [heappop(copy_list) for i in range(len(copy_list))]
   9: 
  10: def max_heap_sort(lst: list):
- 11:     copy_list = deepcopy(lst)
+ 11:     pass
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
--------------------------------------------------------------------------------
[0.19415 s] killed by ts-3-5/test_3-5_0-8_261.py::test_max_heap_sort

def test_max_heap_sort():
>       assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]

ts-3-5/test_3-5_0-8_261.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [4, 1, 3, 2, 5]

>   ???
E   UnboundLocalError: local variable 'copy_list' referenced before assignment

heapsort:13: UnboundLocalError
   - [#  29] SDL heapsort: 
--------------------------------------------------------------------------------
   9: 
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
- 13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 13:     pass
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
--------------------------------------------------------------------------------
[0.19285 s] killed by ts-3-5/test_3-5_0-8_261.py::test_max_heap_sort

def test_max_heap_sort():
>       assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:17: AssertionError
   - [#  30] SDL heapsort: 
--------------------------------------------------------------------------------
  10: def max_heap_sort(lst: list):
  11:     copy_list = deepcopy(lst)
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
- 14:     heapify(copy_list)
+ 14:     pass
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
  18: 
--------------------------------------------------------------------------------
[0.19991 s] killed by ts-3-5/test_3-5_0-8_261.py::test_max_heap_sort

def test_max_heap_sort():
>       assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:17: AssertionError
   - [#  31] SDL heapsort: 
--------------------------------------------------------------------------------
  11:     copy_list = deepcopy(lst)
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
- 15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
+ 15:     pass
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
--------------------------------------------------------------------------------
[0.17144 s] survived
   - [#  32] SDL heapsort: 
--------------------------------------------------------------------------------
  12:     
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
- 16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 16:     pass
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
--------------------------------------------------------------------------------
[0.19283 s] killed by ts-3-5/test_3-5_0-8_261.py::test_max_heap_sort

def test_max_heap_sort():
>       assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:17: AssertionError
   - [#  33] SDL heapsort: 
--------------------------------------------------------------------------------
  13:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  14:     heapify(copy_list)
  15:     copy_list = [heappop(copy_list) for i in range(len(copy_list))]
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
- 17:     return copy_list
+ 17:     pass
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
--------------------------------------------------------------------------------
[0.19450 s] killed by ts-3-5/test_3-5_0-8_261.py::test_max_heap_sort

def test_max_heap_sort():
>       assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:17: AssertionError
   - [#  34] SDL heapsort: 
--------------------------------------------------------------------------------
  16:     copy_list = list(map((lambda x: (x * (-1))), copy_list))
  17:     return copy_list
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
- 20:     copy_list = deepcopy(lst)
+ 20:     pass
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
--------------------------------------------------------------------------------
[0.21544 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]

ts-3-5/test_3-5_0-8_261.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [4, 1, 3, 2, 5], sort = 'min'

>   ???
E   UnboundLocalError: local variable 'copy_list' referenced before assignment

heapsort:24: UnboundLocalError
   - [#  35] SDL heapsort: 
--------------------------------------------------------------------------------
  18: 
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
- 22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
+ 22:         pass
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
--------------------------------------------------------------------------------
[0.18724 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
        assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:22: AssertionError
   - [#  36] SDL heapsort: 
--------------------------------------------------------------------------------
  19: def custom_heap_sort(lst: list, sort='min'):
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
- 23:     heap = Heap()
+ 23:     pass
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
--------------------------------------------------------------------------------
[0.19369 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]

ts-3-5/test_3-5_0-8_261.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [4, 1, 3, 2, 5], sort = 'min'

>   ???
E   NameError: name 'heap' is not defined

heapsort:24: NameError
   - [#  37] SDL heapsort: 
--------------------------------------------------------------------------------
  20:     copy_list = deepcopy(lst)
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
- 24:     heap.build(copy_list)
+ 24:     pass
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19610 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:21: AssertionError
   - [#  38] SDL heapsort: 
--------------------------------------------------------------------------------
  21:     if sort == 'max':
  22:         copy_list = list(map((lambda x: (x * (-1))), copy_list))
  23:     heap = Heap()
  24:     heap.build(copy_list)
- 25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
+ 25:     pass
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19869 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]

ts-3-5/test_3-5_0-8_261.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lst = [4, 1, 3, 2, 5], sort = 'min'

>   ???
E   UnboundLocalError: local variable 'sorted_list' referenced before assignment

heapsort:28: UnboundLocalError
   - [#  39] SDL heapsort: 
--------------------------------------------------------------------------------
  23:     heap = Heap()
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
- 27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
+ 27:         pass
  28:     return sorted_list
--------------------------------------------------------------------------------
[0.19513 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
        assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'max') == [5, 4, 3, 2, 1]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:22: AssertionError
   - [#  40] SDL heapsort: 
--------------------------------------------------------------------------------
  24:     heap.build(copy_list)
  25:     sorted_list = [heap.delete_min() for i in range(heap.size())]
  26:     if sort == 'max':
  27:         sorted_list = list(map((lambda x: (x * (-1))), sorted_list))
- 28:     return sorted_list
+ 28:     pass
--------------------------------------------------------------------------------
[0.19448 s] killed by ts-3-5/test_3-5_0-8_261.py::test_custom_heap_sort

def test_custom_heap_sort():
>       assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-8_261.py:21: AssertionError
[*] Mutation score [8.69822 s]: 77.5%
   - all: 40
   - killed: 31 (77.5%)
   - survived: 9 (22.5%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
