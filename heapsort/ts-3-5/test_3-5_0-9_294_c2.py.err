import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heap import Heap

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

import heapsort

def test_heap_sort():
    lst = [4, 1, 7, 3, 2, 5]
    sorted_lst = heapsort.heap_sort(lst)
    assert sorted_lst == [1, 2, 3, 4, 5, 7]

    lst = [1, 2, 3, 4, 5]
    sorted_lst = heapsort.heap_sort(lst)
    assert sorted_lst == [1, 2, 3, 4, 5]

def test_max_heap_sort():
    lst = [4, 1, 7, 3, 2, 5]
    sorted_lst = heapsort.max_heap_sort(lst)
    assert sorted_lst == [7, 5, 4, 3, 2, 1]

    lst = [1, 2, 3, 4, 5]
    sorted_lst = heapsort.max_heap_sort(lst)
    assert sorted_lst == [5, 4, 3, 2, 1]

def test_custom_heap_sort():
    lst = [4, 1, 7, 3, 2, 5]
    sorted_lst = heapsort.custom_heap_sort(lst, sort='min')
    assert sorted_lst == [1, 2, 3, 4, 5, 7]

    lst = [4, 1, 7, 3, 2, 5]
    sorted_lst = heapsort.custom_heap_sort(lst, sort='max')
    assert sorted_lst == [7, 5, 4, 3, 2, 1]

    lst = [1, 2, 3, 4, 5]
    sorted_lst = heapsort.custom_heap_sort(lst, sort='min')
    assert sorted_lst == [1, 2, 3, 4, 5]

    lst = [1, 2, 3, 4, 5]
    sorted_lst = heapsort.custom_heap_sort(lst, sort='max')
    assert sorted_lst == [5, 4, 3, 2, 1]