import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heap import Heap

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heapsort import heap_sort, max_heap_sort, custom_heap_sort

def test_heap_sort():
    # Test empty list
    assert heap_sort([]) == []

    # Test sorted list
    assert heap_sort([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]

    # Test reverse sorted list
    assert heap_sort([5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5]

def test_max_heap_sort():
    # Test empty list
    assert max_heap_sort([]) == []

    # Test sorted list
    assert max_heap_sort([1, 2, 3, 4, 5]) == [5, 4, 3, 2, 1]

    # Test reverse sorted list
    assert max_heap_sort([5, 4, 3, 2, 1]) == [5, 4, 3, 2, 1]

def test_custom_heap_sort():
    # Test empty list with min sort
    assert custom_heap_sort([], 'min') == []

    # Test sorted list with max sort
    assert custom_heap_sort([1, 2, 3, 4, 5], 'max') == [5, 4, 3, 2, 1]

    # Test reverse sorted list with min sort
    assert custom_heap_sort([5, 4, 3, 2, 1], 'min') == [1, 2, 3, 4, 5]