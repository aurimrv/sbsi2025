import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heapsort import heap_sort, max_heap_sort, custom_heap_sort

def test_heap_sort():
    input_list = [4, 2, 1, 5, 3]
    expected_output = [1, 2, 3, 4, 5]
    assert heap_sort(input_list) == expected_output

    input_list = [1, 0, -1, 5, 3]
    expected_output = [-1, 0, 1, 3, 5]
    assert heap_sort(input_list) == expected_output

def test_max_heap_sort():
    input_list = [4, 2, 1, 5, 3]
    expected_output = [5, 4, 3, 2, 1]
    assert max_heap_sort(input_list) == expected_output

    input_list = [1, 0, -1, 5, 3]
    expected_output = [5, 3, 1, 0, -1]
    assert max_heap_sort(input_list) == expected_output

def test_custom_heap_sort():
    input_list = [4, 2, 1, 5, 3]
    expected_output = [1, 2, 3, 4, 5]
    assert custom_heap_sort(input_list, sort='min') == expected_output

    input_list = [1, 0, -1, 5, 3]
    expected_output = [-1, 0, 1, 3, 5]
    assert custom_heap_sort(input_list, sort='min') == expected_output

    input_list = [4, 2, 1, 5, 3]
    expected_output = [5, 4, 3, 2, 1]
    assert custom_heap_sort(input_list, sort='max') == expected_output

    input_list = [1, 0, -1, 5, 3]
    expected_output = [5, 3, 1, 0, -1]
    assert custom_heap_sort(input_list, sort='max') == expected_output