import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heap import Heap

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heapsort import heap_sort, max_heap_sort, custom_heap_sort

def test_heap_sort():
    # Test for sorting a list in ascending order
    assert heap_sort([4, 1, 3, 2, 5]) == [1, 2, 3, 4, 5]
    
    # Test for sorting an empty list
    assert heap_sort([]) == []
    
def test_max_heap_sort():
    # Test for sorting a list in descending order using max heap
    assert max_heap_sort([4, 1, 3, 2, 5]) == [5, 4, 3, 2, 1]
    
    # Test for sorting a list with negative numbers in descending order using max heap
    assert max_heap_sort([-4, -1, -3, -2, -5]) == [-1, -2, -3, -4, -5]
    
def test_custom_heap_sort():
    # Test for sorting a list in ascending order using min heap
    assert custom_heap_sort([4, 1, 3, 2, 5], 'min') == [1, 2, 3, 4, 5]
    
    # Test for sorting a list in descending order using max heap
    assert custom_heap_sort([4, 1, 3, 2, 5], 'max') == [5, 4, 3, 2, 1]
    
    # Test for sorting an empty list
    assert custom_heap_sort([], 'min') == []