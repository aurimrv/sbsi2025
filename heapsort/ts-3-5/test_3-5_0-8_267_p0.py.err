import os
import sys

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heapsort import heap_sort, max_heap_sort, custom_heap_sort

def test_heap_sort_empty_list():
    lst = []
    assert heap_sort(lst) == []

def test_heap_sort_single_element():
    lst = [5]
    assert heap_sort(lst) == [5]

def test_heap_sort_sorted_list():
    lst = [1, 2, 3, 4, 5]
    assert heap_sort(lst) == [1, 2, 3, 4, 5]

def test_max_heap_sort_empty_list():
    lst = []
    assert max_heap_sort(lst) == []

def test_max_heap_sort_single_element():
    lst = [5]
    assert max_heap_sort(lst) == [5]

def test_max_heap_sort_reverse_sorted_list():
    lst = [5, 4, 3, 2, 1]
    assert max_heap_sort(lst) == [1, 2, 3, 4, 5]

def test_custom_heap_sort_empty_list():
    lst = []
    assert custom_heap_sort(lst) == []

def test_custom_heap_sort_single_element():
    lst = [5]
    assert custom_heap_sort(lst, 'min') == [5]

def test_custom_heap_sort_reverse_sorted_list_min_heap():
    lst = [5, 4, 3, 2, 1]
    assert custom_heap_sort(lst, 'min') == [1, 2, 3, 4, 5]

def test_custom_heap_sort_sorted_list_max_heap():
    lst = [1, 2, 3, 4, 5]
    assert custom_heap_sort(lst, 'max') == [5, 4, 3, 2, 1]