import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heapsort import heap_sort, max_heap_sort, custom_heap_sort

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

def test_heap_sort():
    lst = [4, 1, 3, 9, 7]
    sorted_lst = heap_sort(lst)
    assert sorted_lst == [1, 3, 4, 7, 9]

    lst = [5, 2, 8, 6]
    sorted_lst = heap_sort(lst)
    assert sorted_lst == [2, 5, 6, 8]

def test_max_heap_sort():
    lst = [4, 1, 3, 9, 7]
    sorted_lst = max_heap_sort(lst)
    assert sorted_lst == [9, 7, 4, 3, 1]

    lst = [5, 2, 8, 6]
    sorted_lst = max_heap_sort(lst)
    assert sorted_lst == [8, 6, 5, 2]

def test_custom_heap_sort():
    lst = [4, 1, 3, 9, 7]
    sorted_lst = custom_heap_sort(lst, sort='min')
    assert sorted_lst == [1, 3, 4, 7, 9]

    lst = [5, 2, 8, 6]
    sorted_lst = custom_heap_sort(lst, sort='max')
    assert sorted_lst == [8, 6, 5, 2]

    lst = [3, 6, 1, 8]
    sorted_lst = custom_heap_sort(lst, sort='max')
    assert sorted_lst == [8, 6, 3, 1]