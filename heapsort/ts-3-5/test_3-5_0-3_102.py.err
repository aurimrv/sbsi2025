import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heap import Heap

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heapsort import heap_sort, max_heap_sort, custom_heap_sort

def test_heap_sort():
    # Test heap_sort method
    assert heap_sort([4, 1, 3, 2]) == [1, 2, 3, 4]
    assert heap_sort([7, 2, 5, 1, 8, 3]) == [1, 2, 3, 5, 7, 8]

def test_max_heap_sort():
    # Test max_heap_sort method
    assert max_heap_sort([4, 1, 3, 2]) == [4, 3, 2, 1]
    assert max_heap_sort([7, 2, 5, 1, 8, 3]) == [8, 7, 5, 3, 2, 1]

def test_custom_heap_sort():
    # Test custom_heap_sort method with 'min' sort
    assert custom_heap_sort([4, 1, 3, 2], sort='min') == [1, 2, 3, 4]
    assert custom_heap_sort([7, 2, 5, 1, 8, 3], sort='min') == [1, 2, 3, 5, 7, 8]

    # Test custom_heap_sort method with 'max' sort
    assert custom_heap_sort([4, 1, 3, 2], sort='max') == [4, 3, 2, 1]
    assert custom_heap_sort([7, 2, 5, 1, 8, 3], sort='max') == [8, 7, 5, 3, 2, 1]