import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heapsort import heap_sort, max_heap_sort, custom_heap_sort

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

def test_heap_sort():
    input_list = [4, 1, 7, 3, 2, 9]
    expected_output = [1, 2, 3, 4, 7, 9]
    assert heap_sort(input_list) == expected_output

    input_list = [9, 5, 2, 6, 1]
    expected_output = [1, 2, 5, 6, 9]
    assert heap_sort(input_list) == expected_output

def test_max_heap_sort():
    input_list = [4, 1, 7, 3, 2, 9]
    expected_output = [9, 7, 4, 3, 2, 1]
    assert max_heap_sort(input_list) == expected_output

    input_list = [9, 5, 2, 6, 1]
    expected_output = [9, 6, 5, 2, 1]
    assert max_heap_sort(input_list) == expected_output

def test_custom_heap_sort():
    input_list = [4, 1, 7, 3, 2, 9]
    expected_output = [1, 2, 3, 4, 7, 9]
    assert custom_heap_sort(input_list) == expected_output

    input_list = [9, 5, 2, 6, 1]
    expected_output = [1, 2, 5, 6, 9]
    assert custom_heap_sort(input_list) == expected_output

    input_list = [4, 1, 7, 3, 2, 9]
    expected_output = [9, 7, 4, 3, 2, 1]
    assert custom_heap_sort(input_list, sort='max') == expected_output

    input_list = [9, 5, 2, 6, 1]
    expected_output = [9, 6, 5, 2, 1]
    assert custom_heap_sort(input_list, sort='max') == expected_output

    input_list = [4, 1, 7, 3, 2, 9]
    expected_output = [1, 2, 3, 4, 7, 9]
    assert custom_heap_sort(input_list, sort='min') == expected_output

    input_list = [9, 5, 2, 6, 1]
    expected_output = [1, 2, 5, 6, 9]
    assert custom_heap_sort(input_list, sort='min') == expected_output