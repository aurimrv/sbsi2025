import os
import sys
from copy import deepcopy
from heapq import heapify, heappop
from heap import Heap

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heapsort import heap_sort, max_heap_sort, custom_heap_sort

def test_heap_sort():
    # Test empty list
    assert heap_sort([]) == []

    # Test list with one element
    assert heap_sort([5]) == [5]

    # Test list with multiple elements
    assert heap_sort([4, 2, 7, 1, 5]) == [1, 2, 4, 5, 7]

def test_max_heap_sort():
    # Test empty list
    assert max_heap_sort([]) == []

    # Test list with one element
    assert max_heap_sort([5]) == [5]

    # Test list with multiple elements
    assert max_heap_sort([4, 2, 7, 1, 5]) == [7, 5, 4, 2, 1]

def test_custom_heap_sort():
    # Test empty list with default sort
    assert custom_heap_sort([], sort='min') == []

    # Test list with one element and sort='min'
    assert custom_heap_sort([5], sort='min') == [5]

    # Test list with one element and sort='max'
    assert custom_heap_sort([5], sort='max') == [5]

    # Test list with multiple elements and sort='min'
    assert custom_heap_sort([4, 2, 7, 1, 5], sort='min') == [1, 2, 4, 5, 7]

    # Test list with multiple elements and sort='max'
    assert custom_heap_sort([4, 2, 7, 1, 5], sort='max') == [7, 5, 4, 2, 1]