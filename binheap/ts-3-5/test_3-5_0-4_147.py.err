import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binheap import Binheap

@pytest.fixture
def empty_heap():
    return Binheap()

@pytest.fixture
def sample_heap():
    return Binheap([5, 3, 8, 1, 9, 2, 7])

def test_push(empty_heap):
    empty_heap.push(10)
    assert empty_heap.container == [None, 10]

def test_push_multiple_values(empty_heap):
    empty_heap.push(10)
    empty_heap.push(8)
    empty_heap.push(12)
    assert empty_heap.container == [None, 12, 8, 10]

def test_pop(sample_heap):
    sample_heap.pop()
    assert sample_heap.container == [None, 9, 3, 8, 1, 2, 7]

def test_pop_empty_heap(empty_heap):
    with pytest.raises(IndexError):
        empty_heap.pop()

def test_display(sample_heap):
    expected_output = '    9 \n  3 8 \n1 2 7 \n'
    assert sample_heap.display() == expected_output

def test_display_empty_heap(empty_heap):
    assert empty_heap.display() == ''