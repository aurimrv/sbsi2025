import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binheap import Binheap

@pytest.fixture
def empty_heap():
    return Binheap()

@pytest.fixture
def filled_heap():
    return Binheap([10, 20, 5, 15, 30])

def test_init(empty_heap, filled_heap):
    assert empty_heap.container == [None]
    assert filled_heap.container == [None, 10, 20, 5, 15, 30]

def test_balance(empty_heap, filled_heap):
    empty_heap.push(20)
    empty_heap.push(10)
    assert empty_heap.container == [None, 20, 10]
    filled_heap.push(25)
    assert filled_heap.container == [None, 30, 25, 5, 10, 20, 15]

def test_push(empty_heap, filled_heap):
    empty_heap.push(30)
    assert empty_heap.container == [None, 30]
    filled_heap.push(40)
    assert filled_heap.container == [None, 40, 30, 5, 10, 20, 15, 25]

def test_pop(empty_heap, filled_heap):
    with pytest.raises(IndexError):
        empty_heap.pop()
    filled_heap.pop()
    assert filled_heap.container == [None, 20, 15, 5, 10]

def test_display(empty_heap, filled_heap):
    assert empty_heap.display() == ''
    assert filled_heap.display() == '    30 \n  20 15 \n5 10 \n'