import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binheap import Binheap

@pytest.fixture
def empty_heap():
    return Binheap()

@pytest.fixture
def sample_heap():
    return Binheap([3, 2, 1, 5, 4])

def test_init(empty_heap):
    assert empty_heap.container == [None]

def test_push(empty_heap):
    empty_heap.push(10)
    assert empty_heap.container == [None, 10]

def test_push_multiple(empty_heap):
    empty_heap.push(10)
    empty_heap.push(5)
    empty_heap.push(15)
    assert empty_heap.container == [None, 15, 5, 10]

def test_pop(sample_heap):
    sample_heap.pop()
    assert sample_heap.container == [None, 4, 2, 1, 3]

def test_pop_empty(empty_heap):
    with pytest.raises(IndexError):
        empty_heap.pop()

def test_display(sample_heap):
    expected_output = "    5 \n  4 2 \n1 3 \n"
    assert sample_heap.display() == expected_output

def test_display_empty(empty_heap):
    expected_output = ""
    assert empty_heap.display() == expected_output