import os
import sys

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binheap import Binheap

import pytest

@pytest.fixture
def empty_heap():
    return Binheap()

@pytest.fixture
def initialized_heap():
    return Binheap([3, 2, 1])

def test_init_empty_heap(empty_heap):
    assert empty_heap.container == [None]

def test_init_initialized_heap(initialized_heap):
    assert initialized_heap.container == [None, 3, 2, 1]

def test_push(empty_heap):
    empty_heap.push(5)
    assert empty_heap.container == [None, 5]

def test_pop(initialized_heap):
    initialized_heap.pop()
    assert initialized_heap.container == [None, 2, 1]

def test_display(empty_heap, capsys):
    empty_heap.push(5)
    empty_heap.push(3)
    empty_heap.push(7)
    empty_heap.display()
    captured = capsys.readouterr()
    assert captured.out == '5 \\n3 7 \\n'

def test_balance(initialized_heap):
    initialized_heap.push(4)
    assert initialized_heap.container == [None, 4, 2, 3, 1]

def test_pop_exception(empty_heap):
    with pytest.raises(IndexError):
        empty_heap.pop()