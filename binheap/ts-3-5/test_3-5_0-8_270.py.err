import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binheap import Binheap

import pytest

@pytest.fixture
def empty_heap():
    return Binheap()

@pytest.fixture
def heap_with_data():
    return Binheap([5, 3, 8, 2, 7])

def test_init_empty_heap(empty_heap):
    assert empty_heap.container == [None]

def test_init_heap_with_data(heap_with_data):
    assert heap_with_data.container == [None, 5, 3, 8, 2, 7]

def test__balance(empty_heap):
    empty_heap.container = [None, 3, 5]
    empty_heap._balance()
    assert empty_heap.container == [None, 5, 3]

def test_push(empty_heap):
    empty_heap.push(9)
    assert empty_heap.container == [None, 9]

def test_push_multiple_values(empty_heap):
    empty_heap.push(5)
    empty_heap.push(8)
    empty_heap.push(2)
    assert empty_heap.container == [None, 8, 5, 2]

def test_pop(heap_with_data):
    heap_with_data.pop()
    assert heap_with_data.container == [None, 7, 3, 8, 2]

def test_display(heap_with_data):
    expected_display = '      7 \n   3  8 \n 2 \n'
    assert heap_with_data.display() == expected_display