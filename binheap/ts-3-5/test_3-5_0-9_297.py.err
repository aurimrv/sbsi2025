import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binheap import Binheap

@pytest.fixture
def empty_heap():
    return Binheap()

@pytest.fixture
def initialized_heap():
    data = [5, 3, 8, 1, 4]
    return Binheap(data)

def test_push(empty_heap):
    empty_heap.push(10)
    assert empty_heap.container == [None, 10]

def test_push_multiple(empty_heap):
    for i in range(1, 6):
        empty_heap.push(i)
    assert empty_heap.container == [None, 5, 4, 2, 1, 3]

def test_pop(initialized_heap):
    initialized_heap.pop()
    assert initialized_heap.container == [None, 8, 4, 5, 1]

def test_pop_empty(empty_heap):
    with pytest.raises(IndexError):
        empty_heap.pop()

def test_display_empty(empty_heap):
    result = empty_heap.display()
    assert result == ''

def test_display_initialized(initialized_heap):
    result = initialized_heap.display()
    expected = '   8 \n 4 5 \n1 3 \n'
    assert result == expected