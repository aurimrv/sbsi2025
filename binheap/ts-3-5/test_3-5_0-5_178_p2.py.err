import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binheap import Binheap

import pytest

@pytest.fixture
def empty_heap():
    return Binheap()

@pytest.fixture
def filled_heap():
    return Binheap([3, 2, 1, 5, 4])

def test_init_empty(empty_heap):
    assert empty_heap.container == [None]

def test_init_filled(filled_heap):
    assert filled_heap.container == [None, 3, 2, 1, 5, 4]

def test_balance_empty(empty_heap):
    empty_heap._balance()
    assert empty_heap.container == [None]

def test_balance_filled(filled_heap):
    filled_heap._balance()
    assert filled_heap.container == [None, 5, 4, 1, 3, 2]

def test_push_empty(empty_heap):
    empty_heap.push(10)
    assert empty_heap.container == [None, 10]

def test_push_filled(filled_heap):
    filled_heap.push(6)
    assert filled_heap.container == [None, 6, 4, 5, 3, 2, 1]

def test_pop_empty(empty_heap):
    with pytest.raises(IndexError):
        empty_heap.pop()

def test_pop_filled(filled_heap):
    filled_heap.pop()
    assert filled_heap.container == [None, 4, 2, 1, 3]

def test_display_empty(empty_heap):
    assert empty_heap.display() == ''

def test_display_filled(filled_heap):
    assert filled_heap.display() == ' 5 4 \n1 3 2 \n'