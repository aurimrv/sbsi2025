import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binheap import Binheap

@pytest.fixture
def empty_heap():
    return Binheap()

@pytest.fixture
def filled_heap():
    return Binheap([5, 3, 8, 2, 7, 1])

def test_init(empty_heap, filled_heap):
    assert empty_heap.container == [None]
    assert filled_heap.container == [None, 5, 3, 8, 2, 7, 1]

def test_balance(empty_heap, filled_heap):
    empty_heap.push(10)
    filled_heap.push(10)
    assert empty_heap.container == [None, 10]
    assert filled_heap.container == [None, 10, 5, 8, 2, 7, 1, 3]

def test_push(empty_heap, filled_heap):
    empty_heap.push(3)
    filled_heap.push(10)
    assert empty_heap.container == [None, 3]
    assert filled_heap.container == [None, 10, 5, 8, 2, 7, 1, 3]

def test_pop(empty_heap, filled_heap):
    with pytest.raises(IndexError):
        empty_heap.pop()
    filled_heap.pop()
    assert filled_heap.container == [None, 3, 5, 8, 2, 7]

def test_display(empty_heap, filled_heap):
    assert empty_heap.display() == ''
    assert filled_heap.display() == '    1 \n  2 3 \n5 7 8 \n'