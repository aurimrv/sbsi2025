import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from mergesort import mergesort

import pytest

# Test cases for mergesort function

def test_mergesort_empty_list():
    assert mergesort([]) == []

def test_mergesort_ordered_list():
    assert mergesort([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]

def test_mergesort_reverse_list():
    assert mergesort([5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5]

def test_mergesort_random_list():
    assert mergesort([7, 2, 5, 1, 9, 3]) == [1, 2, 3, 5, 7, 9]

# Test cases for sort method

def test_sort_empty_list():
    assert mergesort.sort([]) == []

def test_sort_ordered_list():
    assert mergesort.sort([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]

def test_sort_reverse_list():
    assert mergesort.sort([5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5]

def test_sort_random_list():
    assert mergesort.sort([7, 2, 5, 1, 9, 3]) == [1, 2, 3, 5, 7, 9]

# Test cases for merge method

def test_merge_empty_lists():
    assert mergesort.merge([], []) == []

def test_merge_ordered_lists():
    assert mergesort.merge([1, 2, 3], [4, 5, 6]) == [1, 2, 3, 4, 5, 6]

def test_merge_reverse_lists():
    assert mergesort.merge([3, 2, 1], [6, 5, 4]) == [1, 2, 3, 4, 5, 6]

def test_merge_mixed_lists():
    assert mergesort.merge([2, 4, 6], [1, 3, 5]) == [1, 2, 3, 4, 5, 6]