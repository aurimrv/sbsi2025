import os
import sys
from collections import deque
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from breadth_first_search import breadth_first_search, breadth_first_search_graph

def test_breadth_first_search_return_start_if_target_at_start():
    grid = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    start = (0, 0)
    target = 1
    assert breadth_first_search(grid, start, target) == (0, 0)

def test_breadth_first_search_return_correct_coordinate():
    grid = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    start = (0, 0)
    target = 9
    assert breadth_first_search(grid, start, target) == (2, 2)

def test_breadth_first_search_graph_return_head_if_target_at_head():
    class Node:
      def __init__(self, val):
        self.val = val
        self.adjacent_list = []
    
    head = Node(1)
    target = 1
    assert breadth_first_search_graph(head, target) == head

def test_breadth_first_search_graph_return_correct_node():
    class Node:
      def __init__(self, val):
        self.val = val
        self.adjacent_list = []
    
    head = Node(1)
    node2 = Node(2)
    node3 = Node(3)
    head.adjacent_list = [node2, node3]
    target = 3
    assert breadth_first_search_graph(head, target) == node3 