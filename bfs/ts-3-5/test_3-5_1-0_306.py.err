import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from breadth_first_search import breadth_first_search, breadth_first_search_graph

# Test cases for breadth_first_search function
def test_bfs_grid_single_element():
    grid = [[1]]
    start = (0, 0)
    target = 1
    assert breadth_first_search(grid, start, target) == (0, 0)

def test_bfs_grid_not_found():
    grid = [[0, 1, 2],
            [3, 4, 5]]
    start = (0, 0)
    target = 6
    assert breadth_first_search(grid, start, target) == None

def test_bfs_grid_middle():
    grid = [[0, 1, 2],
            [3, 4, 5]]
    start = (1, 0)
    target = 4
    assert breadth_first_search(grid, start, target) == (1, 1)

def test_bfs_graph_single_node():
    class Node:
        def __init__(self, val):
            self.val = val
            self.adjacent_list = []

    node = Node(1)
    assert breadth_first_search_graph(node, 1) == node

def test_bfs_graph_not_found():
    class Node:
        def __init__(self, val):
            self.val = val
            self.adjacent_list = []

    head = Node(1)
    node2 = Node(2)
    head.adjacent_list.append(node2)

    assert breadth_first_search_graph(head, 3) == None

def test_bfs_graph_found():
    class Node:
        def __init__(self, val):
            self.val = val
            self.adjacent_list = []

    head = Node(1)
    node2 = Node(2)
    head.adjacent_list.append(node2)

    assert breadth_first_search_graph(head, 2) == node2