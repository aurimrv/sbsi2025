[*] Start mutation process:
   - targets: fizz_buzz.py
   - tests: ts-3-5/test_3-5_1-0_323.py
[*] 4 tests passed:
   - test_3-5_1-0_323 [0.11847 s]
[*] Start mutants generation and execution:
   - [#   1] AOR fizz_buzz: 
--------------------------------------------------------------------------------
  5:     divisible by 5, add "Buzz", if it is 
  6:     divisible by both, add "FizzBuzz"
  7: 
  8:     '''
- 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
+ 9:     return [(('Fizz' if x * 3 == 0 else '') + ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
--------------------------------------------------------------------------------
[0.13982 s] killed by ts-3-5/test_3-5_1-0_323.py::test_fizz_buzz_divisible_by_3

def test_fizz_buzz_divisible_by_3():
        result = fizz_buzz(4)
>       assert result == ['1', '2', 'Fizz', '4']
E       AssertionError

ts-3-5/test_3-5_1-0_323.py:13: AssertionError
   - [#   2] AOR fizz_buzz: 
--------------------------------------------------------------------------------
  5:     divisible by 5, add "Buzz", if it is 
  6:     divisible by both, add "FizzBuzz"
  7: 
  8:     '''
- 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
+ 9:     return [(('Fizz' if x % 3 == 0 else '') - ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
--------------------------------------------------------------------------------
[0.13707 s] incompetent

TypeError: fizz_buzz:9: TypeError: unsupported operand type(s) for -: 'str' and 'str'

   - [#   3] AOR fizz_buzz: 
--------------------------------------------------------------------------------
  5:     divisible by 5, add "Buzz", if it is 
  6:     divisible by both, add "FizzBuzz"
  7: 
  8:     '''
- 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
+ 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x * 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
--------------------------------------------------------------------------------
[0.14084 s] killed by ts-3-5/test_3-5_1-0_323.py::test_fizz_buzz_divisible_by_5

def test_fizz_buzz_divisible_by_5():
        result = fizz_buzz(6)
>       assert result == ['1', '2', 'Fizz', '4', 'Buzz', 'Fizz']
E       AssertionError

ts-3-5/test_3-5_1-0_323.py:17: AssertionError
   - [#   4] AOR fizz_buzz: 
--------------------------------------------------------------------------------
  5:     divisible by 5, add "Buzz", if it is 
  6:     divisible by both, add "FizzBuzz"
  7: 
  8:     '''
- 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
+ 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n - 1)]
--------------------------------------------------------------------------------
[0.14337 s] killed by ts-3-5/test_3-5_1-0_323.py::test_fizz_buzz_divisible_by_3

def test_fizz_buzz_divisible_by_3():
        result = fizz_buzz(4)
>       assert result == ['1', '2', 'Fizz', '4']
E       AssertionError

ts-3-5/test_3-5_1-0_323.py:13: AssertionError
   - [#   5] LCR fizz_buzz: 
--------------------------------------------------------------------------------
  5:     divisible by 5, add "Buzz", if it is 
  6:     divisible by both, add "FizzBuzz"
  7: 
  8:     '''
- 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
+ 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x % 5 == 0 else '') and str(x)) for x in range(1, n + 1)]
--------------------------------------------------------------------------------
[0.13682 s] killed by ts-3-5/test_3-5_1-0_323.py::test_fizz_buzz_divisible_by_3

def test_fizz_buzz_divisible_by_3():
        result = fizz_buzz(4)
>       assert result == ['1', '2', 'Fizz', '4']
E       AssertionError

ts-3-5/test_3-5_1-0_323.py:13: AssertionError
   - [#   6] ROR fizz_buzz: 
--------------------------------------------------------------------------------
  5:     divisible by 5, add "Buzz", if it is 
  6:     divisible by both, add "FizzBuzz"
  7: 
  8:     '''
- 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
+ 9:     return [(('Fizz' if x % 3 != 0 else '') + ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
--------------------------------------------------------------------------------
[0.13703 s] killed by ts-3-5/test_3-5_1-0_323.py::test_fizz_buzz_divisible_by_3

def test_fizz_buzz_divisible_by_3():
        result = fizz_buzz(4)
>       assert result == ['1', '2', 'Fizz', '4']
E       AssertionError

ts-3-5/test_3-5_1-0_323.py:13: AssertionError
   - [#   7] ROR fizz_buzz: 
--------------------------------------------------------------------------------
  5:     divisible by 5, add "Buzz", if it is 
  6:     divisible by both, add "FizzBuzz"
  7: 
  8:     '''
- 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
+ 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x % 5 != 0 else '') or str(x)) for x in range(1, n + 1)]
--------------------------------------------------------------------------------
[0.13819 s] killed by ts-3-5/test_3-5_1-0_323.py::test_fizz_buzz_divisible_by_3

def test_fizz_buzz_divisible_by_3():
        result = fizz_buzz(4)
>       assert result == ['1', '2', 'Fizz', '4']
E       AssertionError

ts-3-5/test_3-5_1-0_323.py:13: AssertionError
   - [#   8] SDL fizz_buzz: 
--------------------------------------------------------------------------------
  5:     divisible by 5, add "Buzz", if it is 
  6:     divisible by both, add "FizzBuzz"
  7: 
  8:     '''
- 9:     return [(('Fizz' if x % 3 == 0 else '') + ('Buzz' if x % 5 == 0 else '') or str(x)) for x in range(1, n + 1)]
+ 9:     pass
--------------------------------------------------------------------------------
[0.14465 s] killed by ts-3-5/test_3-5_1-0_323.py::test_fizz_buzz_divisible_by_3

def test_fizz_buzz_divisible_by_3():
        result = fizz_buzz(4)
>       assert result == ['1', '2', 'Fizz', '4']
E       AssertionError

ts-3-5/test_3-5_1-0_323.py:13: AssertionError
[*] Mutation score [1.33129 s]: 100.0%
   - all: 8
   - killed: 7 (87.5%)
   - survived: 0 (0.0%)
   - incompetent: 1 (12.5%)
   - timeout: 0 (0.0%)
