# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import dijkstras as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    module_0.dijkstras(bool_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.dijkstras(none_type_0, none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.dijkstras(bool_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "K\x0cqAzX"
    str_1 = "di\x0bi^{X{g7N\\.[p)s\r"
    dict_0 = {str_0: str_0, str_1: str_1}
    module_1.object(**dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    none_type_0 = None
    module_0.dijkstras(bool_0, bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = []
    tuple_0 = (list_0, list_0)
    none_type_0 = None
    module_0.dijkstras(list_0, none_type_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    set_0 = set()
    module_0.dijkstras(set_0, set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "g"
    module_0.dijkstras(str_0, str_0, str_0)
