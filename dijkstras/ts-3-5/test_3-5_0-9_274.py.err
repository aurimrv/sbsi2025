import os
import sys

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

def test_dijkstras_basic_case():
    weighted_graph = WeightedGraph()
    
    v0 = Vertex(0)
    v1 = Vertex(1)
    v2 = Vertex(2)
    v0.add_neighbor(v1, 2)
    v0.add_neighbor(v2, 3)
    v1.add_neighbor(v2, 1)
    weighted_graph.add_vertex(v0)
    weighted_graph.add_vertex(v1)
    weighted_graph.add_vertex(v2)
    
    src = 0
    dst = 2
    assert dijkstras(weighted_graph, src, dst) == [0, 2]

def test_dijkstras_negative_weights():
    weighted_graph = WeightedGraph()
    
    v0 = Vertex(0)
    v1 = Vertex(1)
    v2 = Vertex(2)
    v0.add_neighbor(v1, -2)
    v0.add_neighbor(v2, -3)
    v1.add_neighbor(v2, -1)
    weighted_graph.add_vertex(v0)
    weighted_graph.add_vertex(v1)
    weighted_graph.add_vertex(v2)
    
    src = 0
    dst = 2
    assert dijkstras(weighted_graph, src, dst) == [0, 2]

def test_dijkstras_unreachable_destination():
    weighted_graph = WeightedGraph()
    
    v0 = Vertex(0)
    v1 = Vertex(1)
    v2 = Vertex(2)
    v0.add_neighbor(v1, 2)
    v1.add_neighbor(v2, 1)
    weighted_graph.add_vertex(v0)
    weighted_graph.add_vertex(v1)
    weighted_graph.add_vertex(v2)
    
    src = 0
    dst = 3
    assert dijkstras(weighted_graph, src, dst) == []