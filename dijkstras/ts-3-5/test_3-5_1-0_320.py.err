import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

def test_dijkstras_simple_case():
    # Define a simple weighted graph setup
    weighted_graph = {
        'A': {'B': 1, 'C': 4},
        'B': {'A': 1, 'C': 2},
        'C': {'A': 4, 'B': 2}
    }
    src = 'A'
    dst = 'C'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'B', 'C']

def test_dijkstras_empty_graph():
    # Test with an empty weighted graph
    weighted_graph = {}
    src = 'A'
    dst = 'C'
    assert dijkstras(weighted_graph, src, dst) == []

def test_dijkstras_same_source_and_destination():
    # Test when source and destination nodes are the same
    weighted_graph = {
        'A': {'B': 1, 'C': 4},
        'B': {'A': 1, 'C': 2},
        'C': {'A': 4, 'B': 2}
    }
    src = 'A'
    dst = 'A'
    assert dijkstras(weighted_graph, src, dst) == ['A']

def test_dijkstras_unreachable_destination():
    # Test when destination node is unreachable
    weighted_graph = {
        'A': {'B': 1, 'C': 4},
        'B': {'A': 1, 'C': 2}
    }
    src = 'A'
    dst = 'D'
    assert dijkstras(weighted_graph, src, dst) == None