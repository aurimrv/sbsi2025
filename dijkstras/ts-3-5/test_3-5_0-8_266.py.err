import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

class TestDijkstras:
    
    def test_dijkstras_basic_scenario(self):
        # Define a simple weighted graph
        class Vertex:
            def __init__(self, name):
                self.name = name
                self.adjacent = {}
        
        class WeightedGraph:
            def __init__(self):
                self.vertices = {}
        
        graph = WeightedGraph()
        a = Vertex("A")
        b = Vertex("B")
        c = Vertex("C")
        d = Vertex("D")
        
        a.adjacent[b] = 1
        a.adjacent[c] = 2
        b.adjacent[c] = 1
        b.adjacent[d] = 2
        c.adjacent[d] = 1
        
        graph.vertices = {"A": a, "B": b, "C": c, "D": d}
        
        # Test with source "A" and destination "D"
        assert dijkstras(graph, "A", "D") == ["A", "B", "D"]
    
    def test_dijkstras_same_source_and_destination(self):
        # Define a simple weighted graph
        class Vertex:
            def __init__(self, name):
                self.name = name
                self.adjacent = {}
        
        class WeightedGraph:
            def __init__(self):
                self.vertices = {}
        
        graph = WeightedGraph()
        a = Vertex("A")
        
        graph.vertices = {"A": a}
        
        # Test with source "A" and destination "A"
        assert dijkstras(graph, "A", "A") == ["A"]
    
    def test_dijkstras_unreachable_destination(self):
        # Define a simple weighted graph
        class Vertex:
            def __init__(self, name):
                self.name = name
                self.adjacent = {}
        
        class WeightedGraph:
            def __init__(self):
                self.vertices = {}
        
        graph = WeightedGraph()
        a = Vertex("A")
        b = Vertex("B")
        
        a.adjacent[b] = 1
        
        graph.vertices = {"A": a, "B": b}
        
        # Test with source "A" and destination "B" (unreachable)
        assert dijkstras(graph, "A", "B") == ["A"]