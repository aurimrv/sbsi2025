import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

def test_dijkstras():
    # Test case 1
    weighted_graph = {
        '1': {'2': 7, '3': 9, '6': 14},
        '2': {'1': 7, '3': 10, '4': 15},
        '3': {'1': 9, '2': 10, '4': 11, '6': 2},
        '4': {'2': 15, '3': 11, '5': 6},
        '5': {'4': 6, '6': 9},
        '6': {'1': 14, '3': 2, '5': 9}
    }
    src, dst = '1', '5'
    assert dijkstras(weighted_graph, src, dst) == ['1', '3', '6', '5']

    # Test case 2
    weighted_graph = {
        'A': {'B': 3, 'C': 4},
        'B': {'A': 3, 'C': 1, 'D': 5},
        'C': {'A': 4, 'B': 1, 'D': 2},
        'D': {'B': 5, 'C': 2}
    }
    src, dst = 'A', 'D'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'C', 'D']

def test_dijkstras_invalid():
    weighted_graph = {
        'A': {'B': 3, 'C': 4},
        'B': {'A': 3, 'C': 1, 'D': 5},
        'C': {'A': 4, 'B': 1, 'D': 2},
        'D': {'B': 5, 'C': 2}
    }

    # Test case 1: Invalid source vertex
    src, dst = 'Z', 'B'
    assert dijkstras(weighted_graph, src, dst) == []

    # Test case 2: Invalid destination vertex
    src, dst = 'A', 'Z'
    assert dijkstras(weighted_graph, src, dst) == []