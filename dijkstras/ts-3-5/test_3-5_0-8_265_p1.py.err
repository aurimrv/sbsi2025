import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

class TestDijkstras:

    def test_dijkstras_shortest_path(self):
        weighted_graph = {
            'A': {'B': 1, 'C': 4},
            'B': {'A': 1, 'C': 2, 'D': 5},
            'C': {'A': 4, 'B': 2, 'D': 1},
            'D': {'B': 5, 'C': 1}
        }
        src = 'A'
        dst = 'D'
        
        result = dijkstras(weighted_graph, src, dst)
        assert result == ['A', 'B', 'C', 'D']

    def test_dijkstras_no_path(self):
        weighted_graph = {
            'A': {'B': 2},
            'B': {'C': 3},
            'C': {'D': 1},
            'D': {}
        }
        src = 'A'
        dst = 'D'
        
        result = dijkstras(weighted_graph, src, dst)
        assert result == []

    def test_dijkstras_same_src_dst(self):
        weighted_graph = {
            'A': {'B': 1, 'C': 4},
            'B': {'A': 1, 'C': 2, 'D': 5},
            'C': {'A': 4, 'B': 2, 'D': 1},
            'D': {'B': 5, 'C': 1}
        }
        src = 'A'
        dst = 'A'
        
        result = dijkstras(weighted_graph, src, dst)
        assert result == ['A']

    def test_dijkstras_large_graph(self):
        weighted_graph = {
            'A': {'B': 1, 'C': 4},
            'B': {'A': 1, 'C': 2, 'D': 5},
            'C': {'A': 4, 'B': 2, 'D': 1},
            'D': {'B': 5, 'C': 1},
            'E': {'F': 3},
            'F': {'G': 2},
            'G': {'D': 4}
        }
        src = 'A'
        dst = 'G'
        
        result = dijkstras(weighted_graph, src, dst)
        assert result == ['A', 'B', 'C', 'D', 'G']