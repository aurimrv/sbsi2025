import os
import sys

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

def test_dijkstras_with_sample_graph():
    weighted_graph = {
        'A': {'B': 2, 'C': 5},
        'B': {'A': 2, 'C': 1, 'D': 3},
        'C': {'A': 5, 'B': 1, 'D': 3},
        'D': {'B': 3, 'C': 3, 'E': 1},
        'E': {'D': 1}
    }
    src = 'A'
    dst = 'E'
    
    expected_path = ['A', 'B', 'D', 'E']
    assert dijkstras(weighted_graph, src, dst) == expected_path

def test_dijkstras_with_disconnected_graph():
    weighted_graph = {
        'A': {'B': 2, 'C': 5},
        'B': {'A': 2},
        'E': {'F': 4}
    }
    src = 'A'
    dst = 'F'
    
    expected_path = []
    assert dijkstras(weighted_graph, src, dst) == expected_path

def test_dijkstras_with_same_source_and_destination():
    weighted_graph = {
        'A': {'B': 2, 'C': 5}
    }
    src = 'A'
    dst = 'A'
    
    expected_path = ['A']
    assert dijkstras(weighted_graph, src, dst) == expected_path

def test_dijkstras_with_negative_weights():
    weighted_graph = {
        'A': {'B': -2, 'C': -5},
        'B': {'C': -1, 'D': -3},
        'C': {'A': -5, 'B': -1, 'D': -3},
        'D': {'B': -3, 'C': -3, 'E': -1},
        'E': {'D': -1}
    }
    src = 'A'
    dst = 'E'
    
    expected_path = ['A', 'B', 'D', 'E']
    assert dijkstras(weighted_graph, src, dst) == expected_path