import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

def test_dijkstras():
    class WeightedGraph:
        def __init__(self, vertices):
            self.vertices = vertices

    class Vertex:
        def __init__(self, adjacent):
            self.adjacent = adjacent

    vertexA = Vertex({'B': 4, 'C': 2})
    vertexB = Vertex({'A': 4, 'C': 5})
    vertexC = Vertex({'A': 2, 'B': 5})
    vertices = {'A': vertexA, 'B': vertexB, 'C': vertexC}
    weighted_graph = WeightedGraph(vertices)

    src = 'A'
    dst = 'C'
    expected_path = ['A', 'C']

    assert dijkstras(weighted_graph, src, dst) == expected_path

def test_dijkstras_no_path():
    class WeightedGraph:
        def __init__(self, vertices):
            self.vertices = vertices

    class Vertex:
        def __init__(self, adjacent):
            self.adjacent = adjacent

    vertexA = Vertex({'B': 4, 'C': 2})
    vertexB = Vertex({'A': 4, 'C': 5})
    vertexC = Vertex({'A': 2, 'B': 5})
    vertices = {'A': vertexA, 'B': vertexB, 'C': vertexC}
    weighted_graph = WeightedGraph(vertices)

    src = 'B'
    dst = 'C'
    expected_path = []  # No path from 'B' to 'C'

    assert dijkstras(weighted_graph, src, dst) == expected_path