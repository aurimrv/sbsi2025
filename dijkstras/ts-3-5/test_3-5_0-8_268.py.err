import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

def test_dijkstras():
    # Test case 1: Shortest path from source to destination in a simple graph
    weighted_graph = {
        'A': {'B': 1, 'C': 4},
        'B': {'A': 1, 'C': 2},
        'C': {'A': 4, 'B': 2}
    }
    src = 'A'
    dst = 'C'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'B', 'C']

    # Test case 2: Shortest path from source to destination in a more complex graph
    weighted_graph = {
        'A': {'B': 3, 'C': 2},
        'B': {'A': 3, 'D': 4},
        'C': {'A': 2, 'D': 1},
        'D': {'B': 4, 'C': 1}
    }
    src = 'A'
    dst = 'D'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'C', 'D']

def test_dijkstras_edge_cases():
    # Test case 1: Empty graph, source, and destination
    weighted_graph = {}
    src = 'A'
    dst = 'B'
    assert dijkstras(weighted_graph, src, dst) == []

    # Test case 2: Source and destination are the same node
    weighted_graph = {
        'A': {'B': 2, 'C': 4},
        'B': {'A': 2, 'C': 3},
        'C': {'A': 4, 'B': 3}
    }
    src = 'A'
    dst = 'A'
    assert dijkstras(weighted_graph, src, dst) == ['A']