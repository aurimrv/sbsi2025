import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

def test_dijkstras():
    # Test case 1: Shortest path from src to dst where src = 0 and dst = 4
    weighted_graph = {
        0: {1: 2, 2: 4},
        1: {3: 5},
        2: {3: 2, 4: 3},
        3: {4: 1},
        4: {}
    }
    src = 0
    dst = 4
    assert dijkstras(weighted_graph, src, dst) == [0, 2, 4]

    # Test case 2: Shortest path from src to dst where src = 1 and dst = 4
    weighted_graph = {
        0: {1: 2, 2: 4},
        1: {3: 5},
        2: {3: 2, 4: 3},
        3: {4: 1},
        4: {}
    }
    src = 1
    dst = 4
    assert dijkstras(weighted_graph, src, dst) == [1, 3, 4]

    # Test case 3: Shortest path from src to dst where src = 0 and dst = 3
    weighted_graph = {
        0: {1: 2, 2: 4},
        1: {3: 5},
        2: {3: 2, 4: 3},
        3: {4: 1},
        4: {}
    }
    src = 0
    dst = 3
    assert dijkstras(weighted_graph, src, dst) == [0, 2, 3]

    # Test case 4: Shortest path from src to dst where src = 2 and dst = 4
    weighted_graph = {
        0: {1: 2, 2: 4},
        1: {3: 5},
        2: {3: 2, 4: 3},
        3: {4: 1},
        4: {}
    }
    src = 2
    dst = 4
    assert dijkstras(weighted_graph, src, dst) == [2, 4]

    # Test case 5: Shortest path from src to dst where src = 0 and dst = 0 (same node)
    weighted_graph = {
        0: {1: 2, 2: 4},
        1: {3: 5},
        2: {3: 2, 4: 3},
        3: {4: 1},
        4: {}
    }
    src = 0
    dst = 0
    assert dijkstras(weighted_graph, src, dst) == [0]