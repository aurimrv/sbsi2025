import sys
import os
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras
import pytest

@pytest.mark.timeout(5)
class TestDijkstras:
    def test_dijkstras_shortest_path(self):
        weighted_graph = WeightedGraph()
        weighted_graph.add_vertex('A')
        weighted_graph.add_vertex('B')
        weighted_graph.add_vertex('C')
        weighted_graph.add_vertex('D')
        weighted_graph.add_vertex('E')
        
        weighted_graph.add_edge('A', 'B', 2)
        weighted_graph.add_edge('A', 'C', 4)
        weighted_graph.add_edge('B', 'D', 3)
        weighted_graph.add_edge('C', 'D', 1)
        weighted_graph.add_edge('C', 'E', 7)
        weighted_graph.add_edge('D', 'E', 5)
        
        assert dijkstras(weighted_graph, 'A', 'E') == ['A', 'B', 'D', 'E']
        
    def test_dijkstras_no_path(self):
        weighted_graph = WeightedGraph()
        weighted_graph.add_vertex('A')
        weighted_graph.add_vertex('B')
        weighted_graph.add_vertex('C')
        
        weighted_graph.add_edge('A', 'B', 2)
        weighted_graph.add_edge('B', 'C', 3)
        
        assert dijkstras(weighted_graph, 'A', 'C') == []

    def test_dijkstras_start_end_same(self):
        weighted_graph = WeightedGraph()
        weighted_graph.add_vertex('A')
        
        assert dijkstras(weighted_graph, 'A', 'A') == ['A']

class WeightedGraph:
    def __init__(self):
        self.vertices = {}
    
    def add_vertex(self, vertex_name):
        if vertex_name not in self.vertices:
            self.vertices[vertex_name] = Vertex(vertex_name)
    
    def add_edge(self, start_vertex, end_vertex, weight):
        self.vertices[start_vertex].add_edge(end_vertex, weight)
        self.vertices[end_vertex].add_edge(start_vertex, weight)

class Vertex:
    def __init__(self, name):
        self.name = name
        self.adjacent = {}
    
    def add_edge(self, vertex_name, weight):
        self.adjacent[vertex_name] = weight
