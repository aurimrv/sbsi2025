import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

def test_dijkstras_shortest_path():
    weighted_graph = {
        'A': {'B': 5, 'D': 9, 'E': 2},
        'B': {'A': 5, 'C': 2},
        'C': {'B': 2, 'F': 3},
        'D': {'A': 9, 'E': 3},
        'E': {'A': 2, 'D': 3, 'F': 2},
        'F': {'C': 3, 'E': 2}
    }
    src = 'A'
    dst = 'F'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'E', 'F']

def test_dijkstras_no_path():
    weighted_graph = {
        'A': {'B': 5, 'D': 9, 'E': 2},
        'B': {'A': 5, 'C': 2},
        'C': {'B': 2, 'F': 3},
        'D': {'A': 9, 'E': 3},
        'E': {'A': 2, 'D': 3, 'F': 2},
        'F': {'C': 3, 'E': 2}
    }
    src = 'A'
    dst = 'G'
    assert dijkstras(weighted_graph, src, dst) == []

def test_dijkstras_same_source_and_destination():
    weighted_graph = {
        'A': {'B': 5, 'D': 9, 'E': 2}
    }
    src = 'A'
    dst = 'A'
    assert dijkstras(weighted_graph, src, dst) == ['A']

def test_dijkstras_single_path():
    weighted_graph = {
        'A': {'B': 5, 'D': 9, 'E': 2},
        'B': {'A': 5, 'C': 2},
        'C': {'B': 2, 'F': 3}
    }
    src = 'A'
    dst = 'F'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'E', 'F']

def test_dijkstras_complex_path():
    weighted_graph = {
        'A': {'B': 5, 'D': 9, 'E': 2},
        'B': {'A': 5, 'C': 2},
        'C': {'B': 2, 'F': 3},
        'D': {'A': 9, 'E': 3},
        'E': {'A': 2, 'D': 3, 'F': 2},
        'F': {'C': 3, 'E': 2}
    }
    src = 'A'
    dst = 'C'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'E', 'F', 'C']