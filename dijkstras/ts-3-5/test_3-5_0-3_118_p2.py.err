import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

def test_dijkstras():
    weighted_graph = {
        'A': {'B': 1, 'C': 4},
        'B': {'A': 1, 'C': 2},
        'C': {'A': 4, 'B': 2}
    }
    src = 'A'
    dst = 'C'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'B', 'C']

    weighted_graph = {
        'A': {'B': 2, 'C': 4},
        'B': {'A': 2, 'C': 1, 'D': 7},
        'C': {'A': 4, 'B': 1, 'D': 3},
        'D': {'B': 7, 'C': 3}
    }
    src = 'A'
    dst = 'D'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'B', 'C', 'D']

    weighted_graph = {
        'A': {'B': 2, 'C': -1},
        'B': {'A': 2, 'C': 3},
        'C': {'A': -1, 'B': 3}
    }
    src = 'A'
    dst = 'C'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'C']

    weighted_graph = {
        'A': {'B': 2, 'C': 4},
        'B': {'A': 2, 'C': 1, 'D': 7},
        'C': {'A': 4, 'B': 1, 'D': 3},
        'D': {'B': 7, 'C': 3, 'A': 5}
    }
    src = 'A'
    dst = 'D'
    assert dijkstras(weighted_graph, src, dst) == ['A', 'B', 'D']

    weighted_graph = {
        'A': {'B': 2},
        'B': {'A': 2},
        'C': {'D': 3},
        'D': {'C': 3}
    }
    src = 'A'
    dst = 'D'
    assert dijkstras(weighted_graph, src, dst) == []