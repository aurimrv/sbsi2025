import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

class TestDijkstras:

    def test_shortest_path_case1(self):
        weighted_graph = {
            "A": {"B": 1, "C": 4},
            "B": {"A": 1, "C": 2, "D": 5},
            "C": {"A": 4, "B": 2, "D": 1},
            "D": {"B": 5, "C": 1}
        }
        src = "A"
        dst = "D"
        expected_path = ["A", "B", "C", "D"]
        assert dijkstras(weighted_graph, src, dst) == expected_path

    def test_shortest_path_case2(self):
        weighted_graph = {
            "A": {"B": 3, "C": 2},
            "B": {"A": 3, "C": 4, "D": 2},
            "C": {"A": 2, "B": 4, "D": 1},
            "D": {"B": 2, "C": 1}
        }
        src = "A"
        dst = "D"
        expected_path = ["A", "C", "D"]
        assert dijkstras(weighted_graph, src, dst) == expected_path

    def test_shortest_path_case3(self):
        weighted_graph = {
            "A": {"B": 2, "C": 3},
            "B": {"A": 2, "C": 1, "D": 4},
            "C": {"A": 3, "B": 1, "D": 5},
            "D": {"B": 4, "C": 5}
        }
        src = "A"
        dst = "D"
        expected_path = ["A", "B", "D"]
        assert dijkstras(weighted_graph, src, dst) == expected_path