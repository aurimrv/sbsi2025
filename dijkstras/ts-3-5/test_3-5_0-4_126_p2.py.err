import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from dijkstras import dijkstras

def test_dijkstras_simple():
    class Vertex:
        def __init__(self, adjacent):
            self.adjacent = adjacent

    class WeightedGraph:
        def __init__(self, vertices):
            self.vertices = vertices

    vertex_a = Vertex({'b': 1, 'c': 4})
    vertex_b = Vertex({'c': 2})
    vertex_c = Vertex({})
    vertices = {'a': vertex_a, 'b': vertex_b, 'c': vertex_c}
    weighted_graph = WeightedGraph(vertices)

    src = 'a'
    dst = 'c'

    assert dijkstras(weighted_graph, src, dst) == ['a', 'b', 'c']

def test_dijkstras_no_path():
    class Vertex:
        def __init__(self, adjacent):
            self.adjacent = adjacent

    class WeightedGraph:
        def __init__(self, vertices):
            self.vertices = vertices

    vertex_a = Vertex({'b': 1})
    vertex_b = Vertex({'c': 2})
    vertex_c = Vertex({})
    vertices = {'a': vertex_a, 'b': vertex_b, 'c': vertex_c}
    weighted_graph = WeightedGraph(vertices)

    src = 'a'
    dst = 'c'

    assert dijkstras(weighted_graph, src, dst) == []

def test_dijkstras_same_src_dst():
    class Vertex:
        def __init__(self, adjacent):
            self.adjacent = adjacent

    class WeightedGraph:
        def __init__(self, vertices):
            self.vertices = vertices

    vertex_a = Vertex({'b': 1, 'c': 4})
    vertex_b = Vertex({'c': 2})
    vertex_c = Vertex({})
    vertices = {'a': vertex_a, 'b': vertex_b, 'c': vertex_c}
    weighted_graph = WeightedGraph(vertices)

    src = 'a'
    dst = 'a'

    assert dijkstras(weighted_graph, src, dst) == ['a']

def test_dijkstras_unreachable_dst():
    class Vertex:
        def __init__(self, adjacent):
            self.adjacent = adjacent

    class WeightedGraph:
        def __init__(self, vertices):
            self.vertices = vertices

    vertex_a = Vertex({'b': 1})
    vertex_b = Vertex({'c': 2})
    vertex_c = Vertex({})
    vertices = {'a': vertex_a, 'b': vertex_b, 'c': vertex_c}
    weighted_graph = WeightedGraph(vertices)

    src = 'a'
    dst = 'd'

    assert dijkstras(weighted_graph, src, dst) == []