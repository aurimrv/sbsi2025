import os
import sys
from collections import deque
from naive_tree import NaiveBinaryTree, Node

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

def test_naive_binary_tree_pre_order_traversal():
    tree = NaiveBinaryTree()
    tree.head = Node(1)
    tree.head.left = Node(2)
    tree.head.right = Node(3)
    assert tree.pre_order_traversal() == [1, 2, 3]

def test_naive_binary_tree_in_order_traversal():
    tree = NaiveBinaryTree()
    tree.head = Node(4)
    tree.head.left = Node(2)
    tree.head.right = Node(6)
    assert tree.in_order_traversal() == [2, 4, 6]

def test_naive_binary_tree_post_order_traversal():
    tree = NaiveBinaryTree()
    tree.head = Node(7)
    tree.head.left = Node(5)
    tree.head.right = Node(9)
    assert tree.post_order_traversal() == [5, 9, 7]

def test_naive_binary_tree_level_order_traversal():
    tree = NaiveBinaryTree()
    tree.head = Node(1)
    tree.head.left = Node(2)
    tree.head.right = Node(3)
    tree.head.left.left = Node(4)
    tree.head.right.right = Node(5)
    assert tree.level_order_traversal() == [1, 2, 3, 4, 5]