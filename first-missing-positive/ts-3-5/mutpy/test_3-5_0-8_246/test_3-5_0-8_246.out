[*] Start mutation process:
   - targets: first_missing_positive.py
   - tests: ts-3-5/test_3-5_0-8_246.py
[*] 5 tests passed:
   - test_3-5_0-8_246 [0.11030 s]
[*] Start mutants generation and execution:
   - [#   1] AOR first_missing_positive: 
--------------------------------------------------------------------------------
  24:         The first integer greater than 0 that is not 
  25:         present in the input list.
  26:     """
  27:     start = 0
- 28:     end = len(nums) - 1
+ 28:     end = len(nums) + 1
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
--------------------------------------------------------------------------------
[0.14642 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3

ts-3-5/test_3-5_0-8_246.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [1, 2, 0]

>   ???
E   IndexError: list index out of range

first_missing_positive:38: IndexError
   - [#   2] AOR first_missing_positive: 
--------------------------------------------------------------------------------
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
  29:     while start <= end:
- 30:         i = nums[start] - 1
+ 30:         i = nums[start] + 1
  31:         
  32:         if i == start:
  33:             start += 1
  34:         
--------------------------------------------------------------------------------
[0.14607 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:11: AssertionError
   - [#   3] AOR first_missing_positive: 
--------------------------------------------------------------------------------
  40:         else:
  41:             
  42:             (nums[start], nums[i]) = (nums[i], nums[start])
  43:     
- 44:     return start + 1
+ 44:     return start - 1
--------------------------------------------------------------------------------
[0.14401 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:11: AssertionError
   - [#   4] ASR first_missing_positive: 
--------------------------------------------------------------------------------
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
- 33:             start += 1
+ 33:             start -= 1
  34:         
  35:         
  36:         
  37:         elif (i < 0 or i > end or nums[start] == nums[i]):
--------------------------------------------------------------------------------
[0.14509 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:11: AssertionError
   - [#   5] ASR first_missing_positive: 
--------------------------------------------------------------------------------
  35:         
  36:         
  37:         elif (i < 0 or i > end or nums[start] == nums[i]):
  38:             nums[start] = nums[end]
- 39:             end -= 1
+ 39:             end += 1
  40:         else:
  41:             
  42:             (nums[start], nums[i]) = (nums[i], nums[start])
  43:     
--------------------------------------------------------------------------------
[0.14053 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3

ts-3-5/test_3-5_0-8_246.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [1, 2, 0]

>   ???
E   IndexError: list index out of range

first_missing_positive:38: IndexError
   - [#   6] COI first_missing_positive: 
--------------------------------------------------------------------------------
  25:         present in the input list.
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
- 29:     while start <= end:
+ 29:     while not (start <= end):
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
  33:             start += 1
--------------------------------------------------------------------------------
[0.13460 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:11: AssertionError
   - [#   7] COI first_missing_positive: 
--------------------------------------------------------------------------------
  28:     end = len(nums) - 1
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
- 32:         if i == start:
+ 32:         if not (i == start):
  33:             start += 1
  34:         
  35:         
  36:         
--------------------------------------------------------------------------------
[0.13467 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:11: AssertionError
   - [#   8] COI first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):
+ 37:         elif not ((i < 0 or i > end or nums[start] == nums[i])):
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[5.00666 s] timeout
   - [#   9] LCR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):
+ 37:         elif (i < 0 and i > end and nums[start] == nums[i]):
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[5.00665 s] timeout
   - [#  10] OIL first_missing_positive: 
--------------------------------------------------------------------------------
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
- 42:             (nums[start], nums[i]) = (nums[i], nums[start])
+ 42:             (nums[start], nums[i]) = (nums[i], nums[start])break
  43:     
  44:     return start + 1
--------------------------------------------------------------------------------
[0.13229 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:11: AssertionError
   - [#  11] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  25:         present in the input list.
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
- 29:     while start <= end:
+ 29:     while start >= end:
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
  33:             start += 1
--------------------------------------------------------------------------------
[0.13003 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:11: AssertionError
   - [#  12] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  25:         present in the input list.
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
- 29:     while start <= end:
+ 29:     while start < end:
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
  33:             start += 1
--------------------------------------------------------------------------------
[0.13329 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_duplicates

def test_first_missing_positive_duplicates():
>       assert first_missing_positive([1, 1, 2, 3]) == 4
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:17: AssertionError
   - [#  13] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  28:     end = len(nums) - 1
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
- 32:         if i == start:
+ 32:         if i != start:
  33:             start += 1
  34:         
  35:         
  36:         
--------------------------------------------------------------------------------
[0.13505 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:11: AssertionError
   - [#  14] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):
+ 37:         elif (i > 0 or i > end or nums[start] == nums[i]):
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[0.13709 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_negative

def test_first_missing_positive_negative():
>       assert first_missing_positive([-1, -2, -3]) == 1

ts-3-5/test_3-5_0-8_246.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [-3, -1, -3]

>   ???
E   IndexError: list index out of range

first_missing_positive:37: IndexError
   - [#  15] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):
+ 37:         elif (i <= 0 or i > end or nums[start] == nums[i]):
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[0.11150 s] survived
   - [#  16] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):
+ 37:         elif (i < 0 or i < end or nums[start] == nums[i]):
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[0.13701 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_large

def test_first_missing_positive_large():
>       assert first_missing_positive([7, 8, 9, 11, 12]) == 1

ts-3-5/test_3-5_0-8_246.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [7, 8, 9, 11, 12]

>   ???
E   IndexError: list index out of range

first_missing_positive:37: IndexError
   - [#  17] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):
+ 37:         elif (i < 0 or i >= end or nums[start] == nums[i]):
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[0.13638 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_duplicates

def test_first_missing_positive_duplicates():
>       assert first_missing_positive([1, 1, 2, 3]) == 4
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:17: AssertionError
   - [#  18] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):
+ 37:         elif (i < 0 or i > end or nums[start] != nums[i]):
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[5.00670 s] timeout
   - [#  19] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  23:     Returns:
  24:         The first integer greater than 0 that is not 
  25:         present in the input list.
  26:     """
- 27:     start = 0
+ 27:     pass
  28:     end = len(nums) - 1
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
--------------------------------------------------------------------------------
[0.12589 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3

ts-3-5/test_3-5_0-8_246.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [1, 2, 0]

>   ???
E   UnboundLocalError: local variable 'start' referenced before assignment

first_missing_positive:29: UnboundLocalError
   - [#  20] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  24:         The first integer greater than 0 that is not 
  25:         present in the input list.
  26:     """
  27:     start = 0
- 28:     end = len(nums) - 1
+ 28:     pass
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
--------------------------------------------------------------------------------
[0.12882 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3

ts-3-5/test_3-5_0-8_246.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [1, 2, 0]

>   ???
E   UnboundLocalError: local variable 'end' referenced before assignment

first_missing_positive:29: UnboundLocalError
   - [#  21] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
  29:     while start <= end:
- 30:         i = nums[start] - 1
+ 30:         pass
  31:         
  32:         if i == start:
  33:             start += 1
  34:         
--------------------------------------------------------------------------------
[0.12822 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3

ts-3-5/test_3-5_0-8_246.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [1, 2, 0]

>   ???
E   NameError: name 'i' is not defined

first_missing_positive:32: NameError
   - [#  22] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  34:         
  35:         
  36:         
  37:         elif (i < 0 or i > end or nums[start] == nums[i]):
- 38:             nums[start] = nums[end]
+ 38:             pass
  39:             end -= 1
  40:         else:
  41:             
  42:             (nums[start], nums[i]) = (nums[i], nums[start])
--------------------------------------------------------------------------------
[0.13270 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_duplicates

def test_first_missing_positive_duplicates():
>       assert first_missing_positive([1, 1, 2, 3]) == 4
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:17: AssertionError
   - [#  23] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
- 42:             (nums[start], nums[i]) = (nums[i], nums[start])
+ 42:             pass
  43:     
  44:     return start + 1
--------------------------------------------------------------------------------
[5.00672 s] timeout
   - [#  24] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  40:         else:
  41:             
  42:             (nums[start], nums[i]) = (nums[i], nums[start])
  43:     
- 44:     return start + 1
+ 44:     pass
--------------------------------------------------------------------------------
[0.12620 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:11: AssertionError
   - [#  25] ZIL first_missing_positive: 
--------------------------------------------------------------------------------
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
  29:     while start <= end:
- 30:         i = nums[start] - 1
- 31:         
- 32:         if i == start:
- 33:             start += 1
- 34:         
- 35:         
- 36:         
- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):
- 38:             nums[start] = nums[end]
- 39:             end -= 1
- 40:         else:
- 41:             
- 42:             (nums[start], nums[i]) = (nums[i], nums[start])
+ 30:         break
+ 31:     
+ 32:     
+ 33:     
+ 34:     
+ 35:     
+ 36:     
+ 37:     
+ 38:     
+ 39:     
+ 40:     
+ 41:     
+ 42:     
  43:     
  44:     return start + 1
--------------------------------------------------------------------------------
[0.12824 s] killed by ts-3-5/test_3-5_0-8_246.py::test_first_missing_positive_basic

def test_first_missing_positive_basic():
>       assert first_missing_positive([1, 2, 0]) == 3
E       AssertionError

ts-3-5/test_3-5_0-8_246.py:11: AssertionError
[*] Mutation score [23.38188 s]: 96.0%
   - all: 25
   - killed: 20 (80.0%)
   - survived: 1 (4.0%)
   - incompetent: 0 (0.0%)
   - timeout: 4 (16.0%)
