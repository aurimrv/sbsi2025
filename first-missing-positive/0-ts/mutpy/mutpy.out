[34m[*][0m Start mutation process:
[36m   -[0m targets: first_missing_positive.py
[36m   -[0m tests: ./0-ts
[34m[*][0m 3 tests passed:
[36m   -[0m test_first_missing_positive [0.15975 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] AOR first_missing_positive: 
--------------------------------------------------------------------------------
  24:         The first integer greater than 0 that is not 
  25:         present in the input list.
  26:     """
  27:     start = 0
[34m- 28:     end = len(nums) - 1[0m
[32m+ 28:     end = len(nums) + 1[0m
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
--------------------------------------------------------------------------------
[0.12160 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6

0-ts/test_first_missing_positive.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [1, 2, 3, 4, 5]

>   ???
E   IndexError: list index out of range

first_missing_positive:30: IndexError
[36m   -[0m [#   2] AOR first_missing_positive: 
--------------------------------------------------------------------------------
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
  29:     while start <= end:
[34m- 30:         i = nums[start] - 1[0m
[32m+ 30:         i = nums[start] + 1[0m
  31:         
  32:         if i == start:
  33:             start += 1
  34:         
--------------------------------------------------------------------------------
[0.09359 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#   3] AOR first_missing_positive: 
--------------------------------------------------------------------------------
  40:         else:
  41:             
  42:             (nums[start], nums[i]) = (nums[i], nums[start])
  43:     
[34m- 44:     return start + 1[0m
[32m+ 44:     return start - 1[0m
--------------------------------------------------------------------------------
[0.09481 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#   4] ASR first_missing_positive: 
--------------------------------------------------------------------------------
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
[34m- 33:             start += 1[0m
[32m+ 33:             start -= 1[0m
  34:         
  35:         
  36:         
  37:         elif (i < 0 or i > end or nums[start] == nums[i]):
--------------------------------------------------------------------------------
[0.11714 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#   5] ASR first_missing_positive: 
--------------------------------------------------------------------------------
  35:         
  36:         
  37:         elif (i < 0 or i > end or nums[start] == nums[i]):
  38:             nums[start] = nums[end]
[34m- 39:             end -= 1[0m
[32m+ 39:             end += 1[0m
  40:         else:
  41:             
  42:             (nums[start], nums[i]) = (nums[i], nums[start])
  43:     
--------------------------------------------------------------------------------
[0.11880 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
        assert first_missing_positive([1,2,3,4,5]) == 6
>       assert first_missing_positive([0,1,2,3,4,5]) == 6

0-ts/test_first_missing_positive.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [1, 2, 3, 4, 5, 5]

>   ???
E   IndexError: list index out of range

first_missing_positive:38: IndexError
[36m   -[0m [#   6] COI first_missing_positive: 
--------------------------------------------------------------------------------
  25:         present in the input list.
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
[34m- 29:     while start <= end:[0m
[32m+ 29:     while not (start <= end):[0m
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
  33:             start += 1
--------------------------------------------------------------------------------
[0.12271 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#   7] COI first_missing_positive: 
--------------------------------------------------------------------------------
  28:     end = len(nums) - 1
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
[34m- 32:         if i == start:[0m
[32m+ 32:         if not (i == start):[0m
  33:             start += 1
  34:         
  35:         
  36:         
--------------------------------------------------------------------------------
[0.12358 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#   8] COI first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
[34m- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):[0m
[32m+ 37:         elif not ((i < 0 or i > end or nums[start] == nums[i])):[0m
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[5.00790 s] [33mtimeout[0m
[36m   -[0m [#   9] CRP first_missing_positive: 
--------------------------------------------------------------------------------
  23:     Returns:
  24:         The first integer greater than 0 that is not 
  25:         present in the input list.
  26:     """
[34m- 27:     start = 0[0m
[32m+ 27:     start = 1[0m
  28:     end = len(nums) - 1
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
--------------------------------------------------------------------------------
[0.10669 s] [31msurvived[0m
[36m   -[0m [#  10] CRP first_missing_positive: 
--------------------------------------------------------------------------------
  24:         The first integer greater than 0 that is not 
  25:         present in the input list.
  26:     """
  27:     start = 0
[34m- 28:     end = len(nums) - 1[0m
[32m+ 28:     end = len(nums) - 2[0m
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
--------------------------------------------------------------------------------
[0.10646 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#  11] CRP first_missing_positive: 
--------------------------------------------------------------------------------
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
  29:     while start <= end:
[34m- 30:         i = nums[start] - 1[0m
[32m+ 30:         i = nums[start] - 2[0m
  31:         
  32:         if i == start:
  33:             start += 1
  34:         
--------------------------------------------------------------------------------
[0.12335 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#  12] CRP first_missing_positive: 
--------------------------------------------------------------------------------
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
[34m- 33:             start += 1[0m
[32m+ 33:             start += 2[0m
  34:         
  35:         
  36:         
  37:         elif (i < 0 or i > end or nums[start] == nums[i]):
--------------------------------------------------------------------------------
[0.12062 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#  13] CRP first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
[34m- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):[0m
[32m+ 37:         elif (i < 1 or i > end or nums[start] == nums[i]):[0m
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[0.08450 s] [31msurvived[0m
[36m   -[0m [#  14] CRP first_missing_positive: 
--------------------------------------------------------------------------------
  35:         
  36:         
  37:         elif (i < 0 or i > end or nums[start] == nums[i]):
  38:             nums[start] = nums[end]
[34m- 39:             end -= 1[0m
[32m+ 39:             end -= 2[0m
  40:         else:
  41:             
  42:             (nums[start], nums[i]) = (nums[i], nums[start])
  43:     
--------------------------------------------------------------------------------
[0.12896 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
        assert first_missing_positive([1,2,3,4,5]) == 6
>       assert first_missing_positive([0,1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:6: AssertionError
[36m   -[0m [#  15] CRP first_missing_positive: 
--------------------------------------------------------------------------------
  40:         else:
  41:             
  42:             (nums[start], nums[i]) = (nums[i], nums[start])
  43:     
[34m- 44:     return start + 1[0m
[32m+ 44:     return start + 2[0m
--------------------------------------------------------------------------------
[0.12305 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#  16] LCR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
[34m- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):[0m
[32m+ 37:         elif (i < 0 and i > end and nums[start] == nums[i]):[0m
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[5.00377 s] [33mtimeout[0m
[36m   -[0m [#  17] OIL first_missing_positive: 
--------------------------------------------------------------------------------
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
[34m- 42:             (nums[start], nums[i]) = (nums[i], nums[start])[0m
[32m+ 42:             (nums[start], nums[i]) = (nums[i], nums[start])break[0m
  43:     
  44:     return start + 1
--------------------------------------------------------------------------------
[0.11652 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#  18] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  25:         present in the input list.
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
[34m- 29:     while start <= end:[0m
[32m+ 29:     while start >= end:[0m
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
  33:             start += 1
--------------------------------------------------------------------------------
[0.12652 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#  19] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  25:         present in the input list.
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
[34m- 29:     while start <= end:[0m
[32m+ 29:     while start < end:[0m
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
  33:             start += 1
--------------------------------------------------------------------------------
[0.12503 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#  20] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  28:     end = len(nums) - 1
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
[34m- 32:         if i == start:[0m
[32m+ 32:         if i != start:[0m
  33:             start += 1
  34:         
  35:         
  36:         
--------------------------------------------------------------------------------
[0.11242 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#  21] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
[34m- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):[0m
[32m+ 37:         elif (i > 0 or i > end or nums[start] == nums[i]):[0m
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[0.12501 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
        assert first_missing_positive([1,2,3,4,5]) == 6
>       assert first_missing_positive([0,1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:6: AssertionError
[36m   -[0m [#  22] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
[34m- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):[0m
[32m+ 37:         elif (i <= 0 or i > end or nums[start] == nums[i]):[0m
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[0.09652 s] [31msurvived[0m
[36m   -[0m [#  23] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
[34m- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):[0m
[32m+ 37:         elif (i < 0 or i < end or nums[start] == nums[i]):[0m
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[0.12649 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
        assert first_missing_positive([1,2,3,4,5]) == 6
>       assert first_missing_positive([0,1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:6: AssertionError
[36m   -[0m [#  24] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
[34m- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):[0m
[32m+ 37:         elif (i < 0 or i >= end or nums[start] == nums[i]):[0m
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[0.11986 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
        assert first_missing_positive([1,2,3,4,5]) == 6
>       assert first_missing_positive([0,1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:6: AssertionError
[36m   -[0m [#  25] ROR first_missing_positive: 
--------------------------------------------------------------------------------
  33:             start += 1
  34:         
  35:         
  36:         
[34m- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):[0m
[32m+ 37:         elif (i < 0 or i > end or nums[start] != nums[i]):[0m
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
--------------------------------------------------------------------------------
[0.12434 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
        assert first_missing_positive([1,2,3,4,5]) == 6
>       assert first_missing_positive([0,1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:6: AssertionError
[36m   -[0m [#  26] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  23:     Returns:
  24:         The first integer greater than 0 that is not 
  25:         present in the input list.
  26:     """
[34m- 27:     start = 0[0m
[32m+ 27:     pass[0m
  28:     end = len(nums) - 1
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
--------------------------------------------------------------------------------
[0.11848 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6

0-ts/test_first_missing_positive.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [1, 2, 3, 4, 5]

>   ???
E   UnboundLocalError: local variable 'start' referenced before assignment

first_missing_positive:29: UnboundLocalError
[36m   -[0m [#  27] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  24:         The first integer greater than 0 that is not 
  25:         present in the input list.
  26:     """
  27:     start = 0
[34m- 28:     end = len(nums) - 1[0m
[32m+ 28:     pass[0m
  29:     while start <= end:
  30:         i = nums[start] - 1
  31:         
  32:         if i == start:
--------------------------------------------------------------------------------
[0.09436 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6

0-ts/test_first_missing_positive.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [1, 2, 3, 4, 5]

>   ???
E   UnboundLocalError: local variable 'end' referenced before assignment

first_missing_positive:29: UnboundLocalError
[36m   -[0m [#  28] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
  29:     while start <= end:
[34m- 30:         i = nums[start] - 1[0m
[32m+ 30:         pass[0m
  31:         
  32:         if i == start:
  33:             start += 1
  34:         
--------------------------------------------------------------------------------
[0.12035 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6

0-ts/test_first_missing_positive.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

nums = [1, 2, 3, 4, 5]

>   ???
E   NameError: name 'i' is not defined

first_missing_positive:32: NameError
[36m   -[0m [#  29] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  34:         
  35:         
  36:         
  37:         elif (i < 0 or i > end or nums[start] == nums[i]):
[34m- 38:             nums[start] = nums[end][0m
[32m+ 38:             pass[0m
  39:             end -= 1
  40:         else:
  41:             
  42:             (nums[start], nums[i]) = (nums[i], nums[start])
--------------------------------------------------------------------------------
[0.12260 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
        assert first_missing_positive([1,2,3,4,5]) == 6
>       assert first_missing_positive([0,1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:6: AssertionError
[36m   -[0m [#  30] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  38:             nums[start] = nums[end]
  39:             end -= 1
  40:         else:
  41:             
[34m- 42:             (nums[start], nums[i]) = (nums[i], nums[start])[0m
[32m+ 42:             pass[0m
  43:     
  44:     return start + 1
--------------------------------------------------------------------------------
[5.00767 s] [33mtimeout[0m
[36m   -[0m [#  31] SDL first_missing_positive: 
--------------------------------------------------------------------------------
  40:         else:
  41:             
  42:             (nums[start], nums[i]) = (nums[i], nums[start])
  43:     
[34m- 44:     return start + 1[0m
[32m+ 44:     pass[0m
--------------------------------------------------------------------------------
[0.09536 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[36m   -[0m [#  32] ZIL first_missing_positive: 
--------------------------------------------------------------------------------
  26:     """
  27:     start = 0
  28:     end = len(nums) - 1
  29:     while start <= end:
[34m- 30:         i = nums[start] - 1[0m
[34m- 31:         [0m
[34m- 32:         if i == start:[0m
[34m- 33:             start += 1[0m
[34m- 34:         [0m
[34m- 35:         [0m
[34m- 36:         [0m
[34m- 37:         elif (i < 0 or i > end or nums[start] == nums[i]):[0m
[34m- 38:             nums[start] = nums[end][0m
[34m- 39:             end -= 1[0m
[34m- 40:         else:[0m
[34m- 41:             [0m
[34m- 42:             (nums[start], nums[i]) = (nums[i], nums[start])[0m
[32m+ 30:         break[0m
[32m+ 31:     [0m
[32m+ 32:     [0m
[32m+ 33:     [0m
[32m+ 34:     [0m
[32m+ 35:     [0m
[32m+ 36:     [0m
[32m+ 37:     [0m
[32m+ 38:     [0m
[32m+ 39:     [0m
[32m+ 40:     [0m
[32m+ 41:     [0m
[32m+ 42:     [0m
  43:     
  44:     return start + 1
--------------------------------------------------------------------------------
[0.11379 s] [32mkilled[0m by 0-ts/test_first_missing_positive.py::test_in_order

def test_in_order():
>       assert first_missing_positive([1,2,3,4,5]) == 6
E       AssertionError

0-ts/test_first_missing_positive.py:5: AssertionError
[34m[*][0m Mutation score [19.70239 s]: [1m[34m90.6%[0m
[36m   -[0m all: 32
[36m   -[0m killed: 26 (81.2%)
[36m   -[0m survived: 3 (9.4%)
[36m   -[0m incompetent: 0 (0.0%)
[36m   -[0m timeout: 3 (9.4%)
