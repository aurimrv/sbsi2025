import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from bst2 import Bst, Node


@pytest.fixture
def bst_empty():
    return Bst()


@pytest.fixture
def bst_filled():
    return Bst([5, 3, 8, 1, 4, 7, 9])


def test_insert(bst_empty):
    bst_empty.insert(5)
    assert bst_empty.size() == 1
    assert bst_empty.root.val == 5

    bst_empty.insert(3)
    assert bst_empty.size() == 2
    assert bst_empty.root.left.val == 3

    bst_empty.insert(7)
    assert bst_empty.size() == 3
    assert bst_empty.root.right.val == 7


def test_search(bst_filled):
    assert bst_filled.search(5).val == 5
    assert bst_filled.search(3).val == 3
    assert bst_filled.search(8).val == 8
    assert bst_filled.search(1).val == 1
    assert bst_filled.search(4).val == 4
    assert bst_filled.search(7).val == 7
    assert bst_filled.search(9).val == 9


def test_size(bst_filled):
    assert bst_filled.size() == 7


def test_depth(bst_filled):
    assert bst_filled.depth() == 3


def test_contains(bst_filled):
    assert bst_filled.contains(5) is True
    assert bst_filled.contains(10) is False


def test_balance(bst_filled):
    assert bst_filled.balance() == -1


def test_pre_order(bst_filled):
    assert list(bst_filled.pre_order()) == [5, 3, 1, 4, 8, 7, 9]


def test_in_order(bst_filled):
    assert list(bst_filled.in_order()) == [1, 3, 4, 5, 7, 8, 9]


def test_post_order(bst_filled):
    assert list(bst_filled.post_order()) == [1, 4, 3, 7, 9, 8, 5]


def test_breadth_first(bst_filled):
    assert list(bst_filled.breadth_first()) == [5, 3, 8, 1, 4, 7, 9]


def test_delete():
    bst = Bst([5, 3, 8, 1, 4, 7, 9])
    bst.delete(1)
    assert bst.size() == 6
    assert bst.search(1) is None

    bst.delete(3)
    assert bst.size() == 5
    assert bst.search(3) is None

    bst.delete(8)
    assert bst.size() == 4
    assert bst.search(8) is None