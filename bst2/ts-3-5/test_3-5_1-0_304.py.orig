import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from bst2 import Bst

@pytest.fixture
def bst_fixture():
    return Bst

def test_insert(bst_fixture):
    bst = bst_fixture()
    bst.insert(5)
    assert bst.root.val == 5

def test_search(bst_fixture):
    bst = bst_fixture()
    bst.insert(5)
    bst.insert(10)
    assert bst.search(5).val == 5
    assert bst.search(10).val == 10

def test_size(bst_fixture):
    bst = bst_fixture()
    bst.insert(5)
    assert bst.size() == 1

def test_depth(bst_fixture):
    bst = bst_fixture()
    bst.insert(5)
    assert bst.depth() == 1

def test_contains(bst_fixture):
    bst = bst_fixture()
    bst.insert(5)
    assert bst.contains(5) is True

def test_balance(bst_fixture):
    bst = bst_fixture([3, 2, 6, 4, 8, 7])
    assert bst.balance() == 1

def test_pre_order(bst_fixture):
    bst = bst_fixture([5, 3, 7, 2, 4, 6, 8])
    assert list(bst.pre_order()) == [5, 3, 2, 4, 7, 6, 8]

def test_in_order(bst_fixture):
    bst = bst_fixture([5, 3, 7, 2, 4, 6, 8])
    assert list(bst.in_order()) == [2, 3, 4, 5, 6, 7, 8]

def test_post_order(bst_fixture):
    bst = bst_fixture([5, 3, 7, 2, 4, 6, 8])
    assert list(bst.post_order()) == [2, 4, 3, 6, 8, 7, 5]

def test_breadth_first(bst_fixture):
    bst = bst_fixture([5, 3, 7, 2, 4, 6, 8])
    assert list(bst.breadth_first()) == [5, 3, 7, 2, 4, 6, 8]