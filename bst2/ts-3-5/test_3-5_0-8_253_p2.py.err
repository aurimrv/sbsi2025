import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from bst2 import Bst, Node


@pytest.fixture
def sample_bst():
    data = [8, 3, 10, 1, 6, 4, 7]
    return Bst(data)


def test_insert(sample_bst):
    sample_bst.insert(5)
    assert sample_bst.size() == 8
    assert sample_bst.search(5).val == 5


def test_search(sample_bst):
    assert sample_bst.search(3).val == 3
    assert sample_bst.search(9) is None


def test_size(sample_bst):
    assert sample_bst.size() == 7
    sample_bst.insert(9)
    assert sample_bst.size() == 8


def test_depth(sample_bst):
    assert sample_bst.depth() == 4
    sample_bst.insert(9)
    assert sample_bst.depth() == 4


def test_contains(sample_bst):
    assert sample_bst.contains(6) is True
    assert sample_bst.contains(11) is False


def test_balance(sample_bst):
    assert sample_bst.balance() == 1
    sample_bst.insert(9)
    assert sample_bst.balance() == 2


def test_pre_order(sample_bst):
    assert list(sample_bst.pre_order()) == [8, 3, 1, 6, 4, 7, 10]


def test_in_order(sample_bst):
    assert list(sample_bst.in_order()) == [1, 3, 4, 6, 7, 8, 10]


def test_post_order(sample_bst):
    assert list(sample_bst.post_order()) == [1, 4, 7, 6, 3, 10, 8]


def test_breadth_first(sample_bst):
    assert list(sample_bst.breadth_first()) == [8, 3, 10, 1, 6, 4, 7]


def test_delete(sample_bst):
    sample_bst.delete(3)
    assert sample_bst.search(3) is None
    assert list(sample_bst.in_order()) == [1, 4, 6, 7, 8, 10]