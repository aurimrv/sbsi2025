/home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:18: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_queues[0]._container.tail.data is 3
/home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_queues[1]._container.tail.data is 2
/home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:30: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_queues[1]._container.tail.prev.data is 3
/home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:36: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_queues[2]._container._length is 6
/home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:48: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_queues[1]._container.head.data is 3
/home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:54: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_queues[2]._container._length is 4
/home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:59: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_queues[2].peek() is 5
/home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:83: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_queues[0].size() is 0
/home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:88: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_queues[1].size() is 1
/home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:93: SyntaxWarning: "is" with a literal. Did you mean "=="?
  assert test_queues[2].size() is 5
[34m[*][0m Start mutation process:
[36m   -[0m targets: a_queue.py
[36m   -[0m tests: ./0-ts
[34m[*][0m 14 tests passed:
[36m   -[0m test_queue [0.17261 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] CDI a_queue: 
--------------------------------------------------------------------------------
  15:     If the queue is empty, returns None
  16:     size(): return the size of the queue. Returns 0 if the queue is empty.
  17:     '''
  18:     
[34m- 19:     def __init__(self, data=None):[0m
[34m- 20:         '''Initialize queue data structure.'''[0m
[34m- 21:         self._container = DoubleLinkedList(data)[0m
[34m- 22:     [0m
[32m+ 19:     @classmethod[0m
[32m+ 20:     def __init__(self, data=None):[0m
[32m+ 21:         '''Initialize queue data structure.'''[0m
[32m+ 22:         self._container = DoubleLinkedList(data)[0m
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
--------------------------------------------------------------------------------
[0.12778 s] [32mkilled[0m by 0-ts/test_queue.py::test_enqueue_adds_data_to_tail_and_points_to_prev

test_queues = (<a_queue.Queue object at 0x7f74520c49a0>, <a_queue.Queue object at 0x7f74520c4700>, <a_queue.Queue object at 0x7f74520c4040>)

    def test_enqueue_adds_data_to_tail_and_points_to_prev(test_queues):
        """Test enqueue adds to the tail and point to prev tail."""
        test_queues[1].enqueue(2)
>       assert test_queues[1]._container.tail.prev.data is 3
E       AssertionError

0-ts/test_queue.py:30: AssertionError
[36m   -[0m [#   2] CDI a_queue: 
--------------------------------------------------------------------------------
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
  21:         self._container = DoubleLinkedList(data)
  22:     
[34m- 23:     def enqueue(self, val):[0m
[34m- 24:         '''Add a value to the queue.'''[0m
[34m- 25:         self._container.append(val)[0m
[34m- 26:     [0m
[32m+ 23:     @classmethod[0m
[32m+ 24:     def enqueue(self, val):[0m
[32m+ 25:         '''Add a value to the queue.'''[0m
[32m+ 26:         self._container.append(val)[0m
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
--------------------------------------------------------------------------------
[0.12834 s] [32mkilled[0m by 0-ts/test_queue.py::test_enque_adds_data

test_queues = (<a_queue.Queue object at 0x7f745205f2b0>, <a_queue.Queue object at 0x7f745205f7f0>, <a_queue.Queue object at 0x7f745205c9d0>)

    def test_enque_adds_data(test_queues):
        """Test enque adds data to the tail."""
>       test_queues[0].enqueue(3)

0-ts/test_queue.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'a_queue.Queue'>, val = 3

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

a_queue:26: AttributeError
[36m   -[0m [#   3] CDI a_queue: 
--------------------------------------------------------------------------------
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
[34m- 27:     def dequeue(self):[0m
[34m- 28:         '''Remove a value from the front of the queue.'''[0m
[34m- 29:         return self._container.pop()[0m
[34m- 30:     [0m
[32m+ 27:     @classmethod[0m
[32m+ 28:     def dequeue(self):[0m
[32m+ 29:         '''Remove a value from the front of the queue.'''[0m
[32m+ 30:         return self._container.pop()[0m
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
--------------------------------------------------------------------------------
[0.13093 s] [32mkilled[0m by 0-ts/test_queue.py::test_dequeue_removes_data

test_queues = (<a_queue.Queue object at 0x7f745204ec50>, <a_queue.Queue object at 0x7f745204c4f0>, <a_queue.Queue object at 0x7f745205df60>)

    def test_dequeue_removes_data(test_queues):
        """Test dequeue removes data."""
>       test_queues[1].dequeue()

0-ts/test_queue.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'a_queue.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

a_queue:30: AttributeError
[36m   -[0m [#   4] CDI a_queue: 
--------------------------------------------------------------------------------
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
[34m- 31:     def peek(self):[0m
[34m- 32:         '''Return the next value in the queue without dequing it.'''[0m
[34m- 33:         try:[0m
[34m- 34:             return self._container.head.data[0m
[34m- 35:         except AttributeError:[0m
[34m- 36:             return None[0m
[34m- 37:     [0m
[32m+ 31:     @classmethod[0m
[32m+ 32:     def peek(self):[0m
[32m+ 33:         '''Return the next value in the queue without dequing it.'''[0m
[32m+ 34:         try:[0m
[32m+ 35:             return self._container.head.data[0m
[32m+ 36:         except AttributeError:[0m
[32m+ 37:             return None[0m
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.12798 s] [32mkilled[0m by 0-ts/test_queue.py::test_peek_returns_head

test_queues = (<a_queue.Queue object at 0x7f745205cb50>, <a_queue.Queue object at 0x7f745205cc70>, <a_queue.Queue object at 0x7f745205ea70>)

    def test_peek_returns_head(test_queues):
        """Test peek returns head of list."""
>       assert test_queues[2].peek() is 5
E       AssertionError

0-ts/test_queue.py:59: AssertionError
[36m   -[0m [#   5] CDI a_queue: 
--------------------------------------------------------------------------------
  34:             return self._container.head.data
  35:         except AttributeError:
  36:             return None
  37:     
[34m- 38:     def size(self):[0m
[34m- 39:         '''Return the size of the queue.'''[0m
[34m- 40:         return self._container._length[0m
[32m+ 38:     @classmethod[0m
[32m+ 39:     def size(self):[0m
[32m+ 40:         '''Return the size of the queue.'''[0m
[32m+ 41:         return self._container._length[0m
--------------------------------------------------------------------------------
[0.12895 s] [32mkilled[0m by 0-ts/test_queue.py::test_size_on_empty_queue

test_queues = (<a_queue.Queue object at 0x7f74520607c0>, <a_queue.Queue object at 0x7f7452060130>, <a_queue.Queue object at 0x7f7452063610>)

    def test_size_on_empty_queue(test_queues):
        """Test size method on empty."""
>       assert test_queues[0].size() is 0

0-ts/test_queue.py:83: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'a_queue.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

a_queue:41: AttributeError
[36m   -[0m [#   6] EHD a_queue: 
--------------------------------------------------------------------------------
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
  35:         except AttributeError:
[34m- 36:             return None[0m
[32m+ 36:             raise[0m
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.13899 s] [32mkilled[0m by 0-ts/test_queue.py::test_peek_on_empty

test_queues = (<a_queue.Queue object at 0x7f7452062920>, <a_queue.Queue object at 0x7f7452062e30>, <a_queue.Queue object at 0x7f74520633d0>)

    def test_peek_on_empty(test_queues):
        """Test peek returns None when empty."""
>       assert test_queues[0].peek() is None

0-ts/test_queue.py:64: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f7452062920>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

a_queue:34: AttributeError
[36m   -[0m [#   7] EXS a_queue: 
--------------------------------------------------------------------------------
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
  35:         except AttributeError:
[34m- 36:             return None[0m
[32m+ 36:             pass[0m
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.11621 s] [31msurvived[0m
[36m   -[0m [#   8] SDI a_queue: 
--------------------------------------------------------------------------------
  15:     If the queue is empty, returns None
  16:     size(): return the size of the queue. Returns 0 if the queue is empty.
  17:     '''
  18:     
[34m- 19:     def __init__(self, data=None):[0m
[34m- 20:         '''Initialize queue data structure.'''[0m
[34m- 21:         self._container = DoubleLinkedList(data)[0m
[34m- 22:     [0m
[32m+ 19:     @staticmethod[0m
[32m+ 20:     def __init__(self, data=None):[0m
[32m+ 21:         '''Initialize queue data structure.'''[0m
[32m+ 22:         self._container = DoubleLinkedList(data)[0m
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
--------------------------------------------------------------------------------
[0.12645 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:9: TypeError: Queue.__init__() missing 1 required positional argument: 'self'

[36m   -[0m [#   9] SDI a_queue: 
--------------------------------------------------------------------------------
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
  21:         self._container = DoubleLinkedList(data)
  22:     
[34m- 23:     def enqueue(self, val):[0m
[34m- 24:         '''Add a value to the queue.'''[0m
[34m- 25:         self._container.append(val)[0m
[34m- 26:     [0m
[32m+ 23:     @staticmethod[0m
[32m+ 24:     def enqueue(self, val):[0m
[32m+ 25:         '''Add a value to the queue.'''[0m
[32m+ 26:         self._container.append(val)[0m
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
--------------------------------------------------------------------------------
[0.11650 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:17: TypeError: Queue.enqueue() missing 1 required positional argument: 'val'

[36m   -[0m [#  10] SDI a_queue: 
--------------------------------------------------------------------------------
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
[34m- 27:     def dequeue(self):[0m
[34m- 28:         '''Remove a value from the front of the queue.'''[0m
[34m- 29:         return self._container.pop()[0m
[34m- 30:     [0m
[32m+ 27:     @staticmethod[0m
[32m+ 28:     def dequeue(self):[0m
[32m+ 29:         '''Remove a value from the front of the queue.'''[0m
[32m+ 30:         return self._container.pop()[0m
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
--------------------------------------------------------------------------------
[0.10140 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:41: TypeError: Queue.dequeue() missing 1 required positional argument: 'self'

[36m   -[0m [#  11] SDI a_queue: 
--------------------------------------------------------------------------------
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
[34m- 31:     def peek(self):[0m
[34m- 32:         '''Return the next value in the queue without dequing it.'''[0m
[34m- 33:         try:[0m
[34m- 34:             return self._container.head.data[0m
[34m- 35:         except AttributeError:[0m
[34m- 36:             return None[0m
[34m- 37:     [0m
[32m+ 31:     @staticmethod[0m
[32m+ 32:     def peek(self):[0m
[32m+ 33:         '''Return the next value in the queue without dequing it.'''[0m
[32m+ 34:         try:[0m
[32m+ 35:             return self._container.head.data[0m
[32m+ 36:         except AttributeError:[0m
[32m+ 37:             return None[0m
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.13402 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:59: TypeError: Queue.peek() missing 1 required positional argument: 'self'

[36m   -[0m [#  12] SDI a_queue: 
--------------------------------------------------------------------------------
  34:             return self._container.head.data
  35:         except AttributeError:
  36:             return None
  37:     
[34m- 38:     def size(self):[0m
[34m- 39:         '''Return the size of the queue.'''[0m
[34m- 40:         return self._container._length[0m
[32m+ 38:     @staticmethod[0m
[32m+ 39:     def size(self):[0m
[32m+ 40:         '''Return the size of the queue.'''[0m
[32m+ 41:         return self._container._length[0m
--------------------------------------------------------------------------------
[0.10888 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments2/queue/0-ts/test_queue.py:83: TypeError: Queue.size() missing 1 required positional argument: 'self'

[36m   -[0m [#  13] SDL a_queue: 
--------------------------------------------------------------------------------
  17:     '''
  18:     
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
[34m- 21:         self._container = DoubleLinkedList(data)[0m
[32m+ 21:         pass[0m
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
--------------------------------------------------------------------------------
[0.09883 s] [32mkilled[0m by 0-ts/test_queue.py::test_enque_adds_data

test_queues = (<a_queue.Queue object at 0x7f74520c4340>, <a_queue.Queue object at 0x7f74520c44c0>, <a_queue.Queue object at 0x7f74520c50f0>)

    def test_enque_adds_data(test_queues):
        """Test enque adds data to the tail."""
>       test_queues[0].enqueue(3)

0-ts/test_queue.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f74520c4340>, val = 3

>   ???
E   AttributeError: 'Queue' object has no attribute '_container'

a_queue:25: AttributeError
[36m   -[0m [#  14] SDL a_queue: 
--------------------------------------------------------------------------------
  21:         self._container = DoubleLinkedList(data)
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
[34m- 25:         self._container.append(val)[0m
[32m+ 25:         pass[0m
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
--------------------------------------------------------------------------------
[0.10225 s] [32mkilled[0m by 0-ts/test_queue.py::test_enque_adds_data

test_queues = (<a_queue.Queue object at 0x7f7452143880>, <a_queue.Queue object at 0x7f74520c5c30>, <a_queue.Queue object at 0x7f74520c5930>)

    def test_enque_adds_data(test_queues):
        """Test enque adds data to the tail."""
        test_queues[0].enqueue(3)
>       assert test_queues[0]._container.tail.data is 3
E       AttributeError: 'NoneType' object has no attribute 'data'

0-ts/test_queue.py:18: AttributeError
[36m   -[0m [#  15] SDL a_queue: 
--------------------------------------------------------------------------------
  25:         self._container.append(val)
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
[34m- 29:         return self._container.pop()[0m
[32m+ 29:         pass[0m
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
--------------------------------------------------------------------------------
[0.10317 s] [32mkilled[0m by 0-ts/test_queue.py::test_dequeue_removes_data

test_queues = (<a_queue.Queue object at 0x7f745204d3c0>, <a_queue.Queue object at 0x7f745204ffa0>, <a_queue.Queue object at 0x7f745204e7a0>)

    def test_dequeue_removes_data(test_queues):
        """Test dequeue removes data."""
        test_queues[1].dequeue()
>       assert test_queues[1]._container.head is None
E       AssertionError

0-ts/test_queue.py:42: AssertionError
[36m   -[0m [#  16] SDL a_queue: 
--------------------------------------------------------------------------------
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
[34m- 34:             return self._container.head.data[0m
[32m+ 34:             pass[0m
  35:         except AttributeError:
  36:             return None
  37:     
  38:     def size(self):
--------------------------------------------------------------------------------
[0.10418 s] [32mkilled[0m by 0-ts/test_queue.py::test_peek_returns_head

test_queues = (<a_queue.Queue object at 0x7f74520c42e0>, <a_queue.Queue object at 0x7f74520c5150>, <a_queue.Queue object at 0x7f74520c7820>)

    def test_peek_returns_head(test_queues):
        """Test peek returns head of list."""
>       assert test_queues[2].peek() is 5
E       AssertionError

0-ts/test_queue.py:59: AssertionError
[36m   -[0m [#  17] SDL a_queue: 
--------------------------------------------------------------------------------
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
  35:         except AttributeError:
[34m- 36:             return None[0m
[32m+ 36:             pass[0m
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.11683 s] [31msurvived[0m
[36m   -[0m [#  18] SDL a_queue: 
--------------------------------------------------------------------------------
  36:             return None
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
[34m- 40:         return self._container._length[0m
[32m+ 40:         pass[0m
--------------------------------------------------------------------------------
[0.10915 s] [32mkilled[0m by 0-ts/test_queue.py::test_size_on_empty_queue

test_queues = (<a_queue.Queue object at 0x7f745205da80>, <a_queue.Queue object at 0x7f745205d750>, <a_queue.Queue object at 0x7f745205e9b0>)

    def test_size_on_empty_queue(test_queues):
        """Test size method on empty."""
>       assert test_queues[0].size() is 0
E       AssertionError

0-ts/test_queue.py:83: AssertionError
[36m   -[0m [#  19] SVD a_queue: 
--------------------------------------------------------------------------------
  17:     '''
  18:     
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
[34m- 21:         self._container = DoubleLinkedList(data)[0m
[32m+ 21:         _container = DoubleLinkedList(data)[0m
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  20] SVD a_queue: 
--------------------------------------------------------------------------------
  21:         self._container = DoubleLinkedList(data)
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
[34m- 25:         self._container.append(val)[0m
[32m+ 25:         _container.append(val)[0m
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
--------------------------------------------------------------------------------
[0.12930 s] [32mkilled[0m by 0-ts/test_queue.py::test_enque_adds_data

test_queues = (<a_queue.Queue object at 0x7f745204f280>, <a_queue.Queue object at 0x7f7452583fa0>, <a_queue.Queue object at 0x7f7452580040>)

    def test_enque_adds_data(test_queues):
        """Test enque adds data to the tail."""
>       test_queues[0].enqueue(3)

0-ts/test_queue.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f745204f280>, val = 3

>   ???
E   NameError: name '_container' is not defined

a_queue:25: NameError
[36m   -[0m [#  21] SVD a_queue: 
--------------------------------------------------------------------------------
  25:         self._container.append(val)
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
[34m- 29:         return self._container.pop()[0m
[32m+ 29:         return _container.pop()[0m
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
--------------------------------------------------------------------------------
[0.10225 s] [32mkilled[0m by 0-ts/test_queue.py::test_dequeue_removes_data

test_queues = (<a_queue.Queue object at 0x7f74521411b0>, <a_queue.Queue object at 0x7f7452143d90>, <a_queue.Queue object at 0x7f7452143fa0>)

    def test_dequeue_removes_data(test_queues):
        """Test dequeue removes data."""
>       test_queues[1].dequeue()

0-ts/test_queue.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f7452143d90>

>   ???
E   NameError: name '_container' is not defined

a_queue:29: NameError
[36m   -[0m [#  22] SVD a_queue: 
--------------------------------------------------------------------------------
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
[34m- 34:             return self._container.head.data[0m
[32m+ 34:             return _container.head.data[0m
  35:         except AttributeError:
  36:             return None
  37:     
  38:     def size(self):
--------------------------------------------------------------------------------
[0.11614 s] [32mkilled[0m by 0-ts/test_queue.py::test_peek_returns_head

test_queues = (<a_queue.Queue object at 0x7f745205ee30>, <a_queue.Queue object at 0x7f745205ce50>, <a_queue.Queue object at 0x7f745205fb80>)

    def test_peek_returns_head(test_queues):
        """Test peek returns head of list."""
>       assert test_queues[2].peek() is 5

0-ts/test_queue.py:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f745205fb80>

>   ???
E   NameError: name '_container' is not defined

a_queue:34: NameError
[36m   -[0m [#  23] SVD a_queue: 
--------------------------------------------------------------------------------
  36:             return None
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
[34m- 40:         return self._container._length[0m
[32m+ 40:         return _container._length[0m
--------------------------------------------------------------------------------
[0.13903 s] [32mkilled[0m by 0-ts/test_queue.py::test_size_on_empty_queue

test_queues = (<a_queue.Queue object at 0x7f74520c5330>, <a_queue.Queue object at 0x7f74520c6f80>, <a_queue.Queue object at 0x7f745204fdf0>)

    def test_size_on_empty_queue(test_queues):
        """Test size method on empty."""
>       assert test_queues[0].size() is 0

0-ts/test_queue.py:83: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f74520c5330>

>   ???
E   NameError: name '_container' is not defined

a_queue:40: NameError
[34m[*][0m Mutation score [3.54734 s]: [1m[34m88.2%[0m
[36m   -[0m all: 23
[36m   -[0m killed: 15 (65.2%)
[36m   -[0m survived: 2 (8.7%)
[36m   -[0m incompetent: 6 (26.1%)
[36m   -[0m timeout: 0 (0.0%)
