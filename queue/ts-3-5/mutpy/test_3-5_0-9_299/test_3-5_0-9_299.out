[*] Start mutation process:
   - targets: a_queue.py
   - tests: ts-3-5/test_3-5_0-9_299.py
[*] 4 tests passed:
   - test_3-5_0-9_299 [0.12904 s]
[*] Start mutants generation and execution:
   - [#   1] CDI a_queue: 
--------------------------------------------------------------------------------
  15:     If the queue is empty, returns None
  16:     size(): return the size of the queue. Returns 0 if the queue is empty.
  17:     '''
  18:     
- 19:     def __init__(self, data=None):
- 20:         '''Initialize queue data structure.'''
- 21:         self._container = DoubleLinkedList(data)
- 22:     
+ 19:     @classmethod
+ 20:     def __init__(self, data=None):
+ 21:         '''Initialize queue data structure.'''
+ 22:         self._container = DoubleLinkedList(data)
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
--------------------------------------------------------------------------------
[0.14244 s] killed by ts-3-5/test_3-5_0-9_299.py::test_enqueue

queue_empty = <a_queue.Queue object at 0x7577e3467460>
queue_with_values = <a_queue.Queue object at 0x7577e3467c70>

    def test_enqueue(queue_empty, queue_with_values):
>       assert queue_empty.size() == 0
E       AssertionError

ts-3-5/test_3-5_0-9_299.py:24: AssertionError
   - [#   2] CDI a_queue: 
--------------------------------------------------------------------------------
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
  21:         self._container = DoubleLinkedList(data)
  22:     
- 23:     def enqueue(self, val):
- 24:         '''Add a value to the queue.'''
- 25:         self._container.append(val)
- 26:     
+ 23:     @classmethod
+ 24:     def enqueue(self, val):
+ 25:         '''Add a value to the queue.'''
+ 26:         self._container.append(val)
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
--------------------------------------------------------------------------------
[0.14693 s] killed by ts-3-5/test_3-5_0-9_299.py::test_enqueue

@pytest.fixture
    def queue_with_values():
        queue = Queue()
>       queue.enqueue(10)

ts-3-5/test_3-5_0-9_299.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'a_queue.Queue'>, val = 10

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

a_queue:26: AttributeError
   - [#   3] CDI a_queue: 
--------------------------------------------------------------------------------
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
- 27:     def dequeue(self):
- 28:         '''Remove a value from the front of the queue.'''
- 29:         return self._container.pop()
- 30:     
+ 27:     @classmethod
+ 28:     def dequeue(self):
+ 29:         '''Remove a value from the front of the queue.'''
+ 30:         return self._container.pop()
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
--------------------------------------------------------------------------------
[0.14863 s] killed by ts-3-5/test_3-5_0-9_299.py::test_dequeue

queue_empty = <a_queue.Queue object at 0x7577e3643550>
queue_with_values = <a_queue.Queue object at 0x7577e3641570>

    def test_dequeue(queue_empty, queue_with_values):
        with pytest.raises(Exception):
            queue_empty.dequeue()
    
>       assert queue_with_values.dequeue() == 10

ts-3-5/test_3-5_0-9_299.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'a_queue.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

a_queue:30: AttributeError
   - [#   4] CDI a_queue: 
--------------------------------------------------------------------------------
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
- 31:     def peek(self):
- 32:         '''Return the next value in the queue without dequing it.'''
- 33:         try:
- 34:             return self._container.head.data
- 35:         except AttributeError:
- 36:             return None
- 37:     
+ 31:     @classmethod
+ 32:     def peek(self):
+ 33:         '''Return the next value in the queue without dequing it.'''
+ 34:         try:
+ 35:             return self._container.head.data
+ 36:         except AttributeError:
+ 37:             return None
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.14749 s] killed by ts-3-5/test_3-5_0-9_299.py::test_peek

queue_empty = <a_queue.Queue object at 0x7577e36410f0>
queue_with_values = <a_queue.Queue object at 0x7577e36400a0>

    def test_peek(queue_empty, queue_with_values):
        assert queue_empty.peek() == None
        queue_empty.enqueue(5)
>       assert queue_empty.peek() == 5
E       AssertionError

ts-3-5/test_3-5_0-9_299.py:42: AssertionError
   - [#   5] CDI a_queue: 
--------------------------------------------------------------------------------
  34:             return self._container.head.data
  35:         except AttributeError:
  36:             return None
  37:     
- 38:     def size(self):
- 39:         '''Return the size of the queue.'''
- 40:         return self._container._length
+ 38:     @classmethod
+ 39:     def size(self):
+ 40:         '''Return the size of the queue.'''
+ 41:         return self._container._length
--------------------------------------------------------------------------------
[0.13788 s] killed by ts-3-5/test_3-5_0-9_299.py::test_enqueue

queue_empty = <a_queue.Queue object at 0x7577e34a4910>
queue_with_values = <a_queue.Queue object at 0x7577e34a61d0>

    def test_enqueue(queue_empty, queue_with_values):
>       assert queue_empty.size() == 0

ts-3-5/test_3-5_0-9_299.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'a_queue.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

a_queue:41: AttributeError
   - [#   6] EHD a_queue: 
--------------------------------------------------------------------------------
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
  35:         except AttributeError:
- 36:             return None
+ 36:             raise
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.13303 s] killed by ts-3-5/test_3-5_0-9_299.py::test_peek

queue_empty = <a_queue.Queue object at 0x7577e3716590>
queue_with_values = <a_queue.Queue object at 0x7577e37160b0>

    def test_peek(queue_empty, queue_with_values):
>       assert queue_empty.peek() == None

ts-3-5/test_3-5_0-9_299.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7577e3716590>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

a_queue:34: AttributeError
   - [#   7] EXS a_queue: 
--------------------------------------------------------------------------------
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
  35:         except AttributeError:
- 36:             return None
+ 36:             pass
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.11027 s] survived
   - [#   8] SDI a_queue: 
--------------------------------------------------------------------------------
  15:     If the queue is empty, returns None
  16:     size(): return the size of the queue. Returns 0 if the queue is empty.
  17:     '''
  18:     
- 19:     def __init__(self, data=None):
- 20:         '''Initialize queue data structure.'''
- 21:         self._container = DoubleLinkedList(data)
- 22:     
+ 19:     @staticmethod
+ 20:     def __init__(self, data=None):
+ 21:         '''Initialize queue data structure.'''
+ 22:         self._container = DoubleLinkedList(data)
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
--------------------------------------------------------------------------------
[0.13637 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/queue/ts-3-5/test_3-5_0-9_299.py:13: TypeError: Queue.__init__() missing 1 required positional argument: 'self'

   - [#   9] SDI a_queue: 
--------------------------------------------------------------------------------
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
  21:         self._container = DoubleLinkedList(data)
  22:     
- 23:     def enqueue(self, val):
- 24:         '''Add a value to the queue.'''
- 25:         self._container.append(val)
- 26:     
+ 23:     @staticmethod
+ 24:     def enqueue(self, val):
+ 25:         '''Add a value to the queue.'''
+ 26:         self._container.append(val)
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
--------------------------------------------------------------------------------
[0.13396 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/queue/ts-3-5/test_3-5_0-9_299.py:18: TypeError: Queue.enqueue() missing 1 required positional argument: 'val'

   - [#  10] SDI a_queue: 
--------------------------------------------------------------------------------
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
- 27:     def dequeue(self):
- 28:         '''Remove a value from the front of the queue.'''
- 29:         return self._container.pop()
- 30:     
+ 27:     @staticmethod
+ 28:     def dequeue(self):
+ 29:         '''Remove a value from the front of the queue.'''
+ 30:         return self._container.pop()
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
--------------------------------------------------------------------------------
[0.13291 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/queue/ts-3-5/test_3-5_0-9_299.py:36: TypeError: Queue.dequeue() missing 1 required positional argument: 'self'

   - [#  11] SDI a_queue: 
--------------------------------------------------------------------------------
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
- 31:     def peek(self):
- 32:         '''Return the next value in the queue without dequing it.'''
- 33:         try:
- 34:             return self._container.head.data
- 35:         except AttributeError:
- 36:             return None
- 37:     
+ 31:     @staticmethod
+ 32:     def peek(self):
+ 33:         '''Return the next value in the queue without dequing it.'''
+ 34:         try:
+ 35:             return self._container.head.data
+ 36:         except AttributeError:
+ 37:             return None
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.13261 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/queue/ts-3-5/test_3-5_0-9_299.py:40: TypeError: Queue.peek() missing 1 required positional argument: 'self'

   - [#  12] SDI a_queue: 
--------------------------------------------------------------------------------
  34:             return self._container.head.data
  35:         except AttributeError:
  36:             return None
  37:     
- 38:     def size(self):
- 39:         '''Return the size of the queue.'''
- 40:         return self._container._length
+ 38:     @staticmethod
+ 39:     def size(self):
+ 40:         '''Return the size of the queue.'''
+ 41:         return self._container._length
--------------------------------------------------------------------------------
[0.13141 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/queue/ts-3-5/test_3-5_0-9_299.py:24: TypeError: Queue.size() missing 1 required positional argument: 'self'

   - [#  13] SDL a_queue: 
--------------------------------------------------------------------------------
  17:     '''
  18:     
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
- 21:         self._container = DoubleLinkedList(data)
+ 21:         pass
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
--------------------------------------------------------------------------------
[0.13186 s] killed by ts-3-5/test_3-5_0-9_299.py::test_enqueue

@pytest.fixture
    def queue_with_values():
        queue = Queue()
>       queue.enqueue(10)

ts-3-5/test_3-5_0-9_299.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7577e34a7c10>, val = 10

>   ???
E   AttributeError: 'Queue' object has no attribute '_container'

a_queue:25: AttributeError
   - [#  14] SDL a_queue: 
--------------------------------------------------------------------------------
  21:         self._container = DoubleLinkedList(data)
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
- 25:         self._container.append(val)
+ 25:         pass
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
--------------------------------------------------------------------------------
[0.14337 s] killed by ts-3-5/test_3-5_0-9_299.py::test_enqueue

queue_empty = <a_queue.Queue object at 0x7577e34a7520>
queue_with_values = <a_queue.Queue object at 0x7577e34a4340>

    def test_enqueue(queue_empty, queue_with_values):
        assert queue_empty.size() == 0
        queue_empty.enqueue(5)
>       assert queue_empty.size() == 1
E       AssertionError

ts-3-5/test_3-5_0-9_299.py:26: AssertionError
   - [#  15] SDL a_queue: 
--------------------------------------------------------------------------------
  25:         self._container.append(val)
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
- 29:         return self._container.pop()
+ 29:         pass
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
--------------------------------------------------------------------------------
[0.14332 s] killed by ts-3-5/test_3-5_0-9_299.py::test_dequeue

queue_empty = <a_queue.Queue object at 0x7577e3386440>
queue_with_values = <a_queue.Queue object at 0x7577e3385c90>

    def test_dequeue(queue_empty, queue_with_values):
>       with pytest.raises(Exception):
E       Failed: DID NOT RAISE <class 'Exception'>

ts-3-5/test_3-5_0-9_299.py:33: Failed
   - [#  16] SDL a_queue: 
--------------------------------------------------------------------------------
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
- 34:             return self._container.head.data
+ 34:             pass
  35:         except AttributeError:
  36:             return None
  37:     
  38:     def size(self):
--------------------------------------------------------------------------------
[0.14796 s] killed by ts-3-5/test_3-5_0-9_299.py::test_peek

queue_empty = <a_queue.Queue object at 0x7577e35a0280>
queue_with_values = <a_queue.Queue object at 0x7577e35a3b50>

    def test_peek(queue_empty, queue_with_values):
        assert queue_empty.peek() == None
        queue_empty.enqueue(5)
>       assert queue_empty.peek() == 5
E       AssertionError

ts-3-5/test_3-5_0-9_299.py:42: AssertionError
   - [#  17] SDL a_queue: 
--------------------------------------------------------------------------------
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
  35:         except AttributeError:
- 36:             return None
+ 36:             pass
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.11938 s] survived
   - [#  18] SDL a_queue: 
--------------------------------------------------------------------------------
  36:             return None
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
- 40:         return self._container._length
+ 40:         pass
--------------------------------------------------------------------------------
[0.14143 s] killed by ts-3-5/test_3-5_0-9_299.py::test_enqueue

queue_empty = <a_queue.Queue object at 0x7577e34a4130>
queue_with_values = <a_queue.Queue object at 0x7577e34a4520>

    def test_enqueue(queue_empty, queue_with_values):
>       assert queue_empty.size() == 0
E       AssertionError

ts-3-5/test_3-5_0-9_299.py:24: AssertionError
   - [#  19] SVD a_queue: 
--------------------------------------------------------------------------------
  17:     '''
  18:     
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
- 21:         self._container = DoubleLinkedList(data)
+ 21:         _container = DoubleLinkedList(data)
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  20] SVD a_queue: 
--------------------------------------------------------------------------------
  21:         self._container = DoubleLinkedList(data)
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
- 25:         self._container.append(val)
+ 25:         _container.append(val)
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
--------------------------------------------------------------------------------
[0.14216 s] killed by ts-3-5/test_3-5_0-9_299.py::test_enqueue

@pytest.fixture
    def queue_with_values():
        queue = Queue()
>       queue.enqueue(10)

ts-3-5/test_3-5_0-9_299.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7577e3384ca0>, val = 10

>   ???
E   NameError: name '_container' is not defined

a_queue:25: NameError
   - [#  21] SVD a_queue: 
--------------------------------------------------------------------------------
  25:         self._container.append(val)
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
- 29:         return self._container.pop()
+ 29:         return _container.pop()
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
--------------------------------------------------------------------------------
[0.13283 s] killed by ts-3-5/test_3-5_0-9_299.py::test_dequeue

queue_empty = <a_queue.Queue object at 0x7577e338b790>
queue_with_values = <a_queue.Queue object at 0x7577e338b070>

    def test_dequeue(queue_empty, queue_with_values):
        with pytest.raises(Exception):
            queue_empty.dequeue()
    
>       assert queue_with_values.dequeue() == 10

ts-3-5/test_3-5_0-9_299.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7577e338b070>

>   ???
E   NameError: name '_container' is not defined

a_queue:29: NameError
   - [#  22] SVD a_queue: 
--------------------------------------------------------------------------------
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
- 34:             return self._container.head.data
+ 34:             return _container.head.data
  35:         except AttributeError:
  36:             return None
  37:     
  38:     def size(self):
--------------------------------------------------------------------------------
[0.14324 s] killed by ts-3-5/test_3-5_0-9_299.py::test_peek

queue_empty = <a_queue.Queue object at 0x7577e3508370>
queue_with_values = <a_queue.Queue object at 0x7577e3509c00>

    def test_peek(queue_empty, queue_with_values):
>       assert queue_empty.peek() == None

ts-3-5/test_3-5_0-9_299.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7577e3508370>

>   ???
E   NameError: name '_container' is not defined

a_queue:34: NameError
   - [#  23] SVD a_queue: 
--------------------------------------------------------------------------------
  36:             return None
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
- 40:         return self._container._length
+ 40:         return _container._length
--------------------------------------------------------------------------------
[0.14197 s] killed by ts-3-5/test_3-5_0-9_299.py::test_enqueue

queue_empty = <a_queue.Queue object at 0x7577e34fca00>
queue_with_values = <a_queue.Queue object at 0x7577e36424a0>

    def test_enqueue(queue_empty, queue_with_values):
>       assert queue_empty.size() == 0

ts-3-5/test_3-5_0-9_299.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7577e34fca00>

>   ???
E   NameError: name '_container' is not defined

a_queue:40: NameError
[*] Mutation score [3.48018 s]: 88.2%
   - all: 23
   - killed: 15 (65.2%)
   - survived: 2 (8.7%)
   - incompetent: 6 (26.1%)
   - timeout: 0 (0.0%)
