[*] Start mutation process:
   - targets: a_queue.py
   - tests: ts-3-5/test_3-5_0-9_280.py
[*] 5 tests passed:
   - test_3-5_0-9_280 [0.11394 s]
[*] Start mutants generation and execution:
   - [#   1] CDI a_queue: 
--------------------------------------------------------------------------------
  15:     If the queue is empty, returns None
  16:     size(): return the size of the queue. Returns 0 if the queue is empty.
  17:     '''
  18:     
- 19:     def __init__(self, data=None):
- 20:         '''Initialize queue data structure.'''
- 21:         self._container = DoubleLinkedList(data)
- 22:     
+ 19:     @classmethod
+ 20:     def __init__(self, data=None):
+ 21:         '''Initialize queue data structure.'''
+ 22:         self._container = DoubleLinkedList(data)
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
--------------------------------------------------------------------------------
[0.14185 s] killed by ts-3-5/test_3-5_0-9_280.py::test_peek

empty_queue = <a_queue.Queue object at 0x7f008a2df5e0>
queue_with_values = <a_queue.Queue object at 0x7f008a2df6d0>

    def test_peek(empty_queue, queue_with_values):
>       assert empty_queue.peek() is None
E       AssertionError

ts-3-5/test_3-5_0-9_280.py:32: AssertionError
   - [#   2] CDI a_queue: 
--------------------------------------------------------------------------------
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
  21:         self._container = DoubleLinkedList(data)
  22:     
- 23:     def enqueue(self, val):
- 24:         '''Add a value to the queue.'''
- 25:         self._container.append(val)
- 26:     
+ 23:     @classmethod
+ 24:     def enqueue(self, val):
+ 25:         '''Add a value to the queue.'''
+ 26:         self._container.append(val)
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
--------------------------------------------------------------------------------
[0.14755 s] killed by ts-3-5/test_3-5_0-9_280.py::test_enqueue

empty_queue = <a_queue.Queue object at 0x7f008a17f790>

    def test_enqueue(empty_queue):
>       empty_queue.enqueue(100)

ts-3-5/test_3-5_0-9_280.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'a_queue.Queue'>, val = 100

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

a_queue:26: AttributeError
   - [#   3] CDI a_queue: 
--------------------------------------------------------------------------------
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
- 27:     def dequeue(self):
- 28:         '''Remove a value from the front of the queue.'''
- 29:         return self._container.pop()
- 30:     
+ 27:     @classmethod
+ 28:     def dequeue(self):
+ 29:         '''Remove a value from the front of the queue.'''
+ 30:         return self._container.pop()
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
--------------------------------------------------------------------------------
[0.14741 s] killed by ts-3-5/test_3-5_0-9_280.py::test_dequeue

queue_with_values = <a_queue.Queue object at 0x7f008a3526b0>

    def test_dequeue(queue_with_values):
>       assert queue_with_values.dequeue() == 10

ts-3-5/test_3-5_0-9_280.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'a_queue.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

a_queue:30: AttributeError
   - [#   4] CDI a_queue: 
--------------------------------------------------------------------------------
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
- 31:     def peek(self):
- 32:         '''Return the next value in the queue without dequing it.'''
- 33:         try:
- 34:             return self._container.head.data
- 35:         except AttributeError:
- 36:             return None
- 37:     
+ 31:     @classmethod
+ 32:     def peek(self):
+ 33:         '''Return the next value in the queue without dequing it.'''
+ 34:         try:
+ 35:             return self._container.head.data
+ 36:         except AttributeError:
+ 37:             return None
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.16802 s] killed by ts-3-5/test_3-5_0-9_280.py::test_peek

empty_queue = <a_queue.Queue object at 0x7f008a335a80>
queue_with_values = <a_queue.Queue object at 0x7f008a3371f0>

    def test_peek(empty_queue, queue_with_values):
        assert empty_queue.peek() is None
>       assert queue_with_values.peek() == 10
E       AssertionError

ts-3-5/test_3-5_0-9_280.py:33: AssertionError
   - [#   5] CDI a_queue: 
--------------------------------------------------------------------------------
  34:             return self._container.head.data
  35:         except AttributeError:
  36:             return None
  37:     
- 38:     def size(self):
- 39:         '''Return the size of the queue.'''
- 40:         return self._container._length
+ 38:     @classmethod
+ 39:     def size(self):
+ 40:         '''Return the size of the queue.'''
+ 41:         return self._container._length
--------------------------------------------------------------------------------
[0.14819 s] killed by ts-3-5/test_3-5_0-9_280.py::test_enqueue

empty_queue = <a_queue.Queue object at 0x7f008a199030>

    def test_enqueue(empty_queue):
        empty_queue.enqueue(100)
>       assert empty_queue.size() == 1

ts-3-5/test_3-5_0-9_280.py:25: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'a_queue.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

a_queue:41: AttributeError
   - [#   6] EHD a_queue: 
--------------------------------------------------------------------------------
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
  35:         except AttributeError:
- 36:             return None
+ 36:             raise
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.13579 s] killed by ts-3-5/test_3-5_0-9_280.py::test_peek

empty_queue = <a_queue.Queue object at 0x7f008a201840>
queue_with_values = <a_queue.Queue object at 0x7f008a201d80>

    def test_peek(empty_queue, queue_with_values):
>       assert empty_queue.peek() is None

ts-3-5/test_3-5_0-9_280.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f008a201840>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

a_queue:34: AttributeError
   - [#   7] EXS a_queue: 
--------------------------------------------------------------------------------
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
  35:         except AttributeError:
- 36:             return None
+ 36:             pass
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.11434 s] survived
   - [#   8] SDI a_queue: 
--------------------------------------------------------------------------------
  15:     If the queue is empty, returns None
  16:     size(): return the size of the queue. Returns 0 if the queue is empty.
  17:     '''
  18:     
- 19:     def __init__(self, data=None):
- 20:         '''Initialize queue data structure.'''
- 21:         self._container = DoubleLinkedList(data)
- 22:     
+ 19:     @staticmethod
+ 20:     def __init__(self, data=None):
+ 21:         '''Initialize queue data structure.'''
+ 22:         self._container = DoubleLinkedList(data)
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
--------------------------------------------------------------------------------
[0.14199 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/queue/ts-3-5/test_3-5_0-9_280.py:13: TypeError: Queue.__init__() missing 1 required positional argument: 'self'

   - [#   9] SDI a_queue: 
--------------------------------------------------------------------------------
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
  21:         self._container = DoubleLinkedList(data)
  22:     
- 23:     def enqueue(self, val):
- 24:         '''Add a value to the queue.'''
- 25:         self._container.append(val)
- 26:     
+ 23:     @staticmethod
+ 24:     def enqueue(self, val):
+ 25:         '''Add a value to the queue.'''
+ 26:         self._container.append(val)
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
--------------------------------------------------------------------------------
[0.13409 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/queue/ts-3-5/test_3-5_0-9_280.py:24: TypeError: Queue.enqueue() missing 1 required positional argument: 'val'

   - [#  10] SDI a_queue: 
--------------------------------------------------------------------------------
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
  26:     
- 27:     def dequeue(self):
- 28:         '''Remove a value from the front of the queue.'''
- 29:         return self._container.pop()
- 30:     
+ 27:     @staticmethod
+ 28:     def dequeue(self):
+ 29:         '''Remove a value from the front of the queue.'''
+ 30:         return self._container.pop()
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
--------------------------------------------------------------------------------
[0.13653 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/queue/ts-3-5/test_3-5_0-9_280.py:28: TypeError: Queue.dequeue() missing 1 required positional argument: 'self'

   - [#  11] SDI a_queue: 
--------------------------------------------------------------------------------
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
  30:     
- 31:     def peek(self):
- 32:         '''Return the next value in the queue without dequing it.'''
- 33:         try:
- 34:             return self._container.head.data
- 35:         except AttributeError:
- 36:             return None
- 37:     
+ 31:     @staticmethod
+ 32:     def peek(self):
+ 33:         '''Return the next value in the queue without dequing it.'''
+ 34:         try:
+ 35:             return self._container.head.data
+ 36:         except AttributeError:
+ 37:             return None
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.14222 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/queue/ts-3-5/test_3-5_0-9_280.py:32: TypeError: Queue.peek() missing 1 required positional argument: 'self'

   - [#  12] SDI a_queue: 
--------------------------------------------------------------------------------
  34:             return self._container.head.data
  35:         except AttributeError:
  36:             return None
  37:     
- 38:     def size(self):
- 39:         '''Return the size of the queue.'''
- 40:         return self._container._length
+ 38:     @staticmethod
+ 39:     def size(self):
+ 40:         '''Return the size of the queue.'''
+ 41:         return self._container._length
--------------------------------------------------------------------------------
[0.14158 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/queue/ts-3-5/test_3-5_0-9_280.py:25: TypeError: Queue.size() missing 1 required positional argument: 'self'

   - [#  13] SDL a_queue: 
--------------------------------------------------------------------------------
  17:     '''
  18:     
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
- 21:         self._container = DoubleLinkedList(data)
+ 21:         pass
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
--------------------------------------------------------------------------------
[0.12409 s] killed by ts-3-5/test_3-5_0-9_280.py::test_enqueue

empty_queue = <a_queue.Queue object at 0x7f008a19ac20>

    def test_enqueue(empty_queue):
>       empty_queue.enqueue(100)

ts-3-5/test_3-5_0-9_280.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f008a19ac20>, val = 100

>   ???
E   AttributeError: 'Queue' object has no attribute '_container'

a_queue:25: AttributeError
   - [#  14] SDL a_queue: 
--------------------------------------------------------------------------------
  21:         self._container = DoubleLinkedList(data)
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
- 25:         self._container.append(val)
+ 25:         pass
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
--------------------------------------------------------------------------------
[0.13264 s] killed by ts-3-5/test_3-5_0-9_280.py::test_enqueue

empty_queue = <a_queue.Queue object at 0x7f008a19b370>

    def test_enqueue(empty_queue):
        empty_queue.enqueue(100)
>       assert empty_queue.size() == 1
E       AssertionError

ts-3-5/test_3-5_0-9_280.py:25: AssertionError
   - [#  15] SDL a_queue: 
--------------------------------------------------------------------------------
  25:         self._container.append(val)
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
- 29:         return self._container.pop()
+ 29:         pass
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
--------------------------------------------------------------------------------
[0.13490 s] killed by ts-3-5/test_3-5_0-9_280.py::test_dequeue

queue_with_values = <a_queue.Queue object at 0x7f008a075780>

    def test_dequeue(queue_with_values):
>       assert queue_with_values.dequeue() == 10
E       AssertionError

ts-3-5/test_3-5_0-9_280.py:28: AssertionError
   - [#  16] SDL a_queue: 
--------------------------------------------------------------------------------
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
- 34:             return self._container.head.data
+ 34:             pass
  35:         except AttributeError:
  36:             return None
  37:     
  38:     def size(self):
--------------------------------------------------------------------------------
[0.13953 s] killed by ts-3-5/test_3-5_0-9_280.py::test_peek

empty_queue = <a_queue.Queue object at 0x7f008a2dd750>
queue_with_values = <a_queue.Queue object at 0x7f008a2dc820>

    def test_peek(empty_queue, queue_with_values):
        assert empty_queue.peek() is None
>       assert queue_with_values.peek() == 10
E       AssertionError

ts-3-5/test_3-5_0-9_280.py:33: AssertionError
   - [#  17] SDL a_queue: 
--------------------------------------------------------------------------------
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
  34:             return self._container.head.data
  35:         except AttributeError:
- 36:             return None
+ 36:             pass
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
  40:         return self._container._length
--------------------------------------------------------------------------------
[0.11786 s] survived
   - [#  18] SDL a_queue: 
--------------------------------------------------------------------------------
  36:             return None
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
- 40:         return self._container._length
+ 40:         pass
--------------------------------------------------------------------------------
[0.13908 s] killed by ts-3-5/test_3-5_0-9_280.py::test_enqueue

empty_queue = <a_queue.Queue object at 0x7f008a21c040>

    def test_enqueue(empty_queue):
        empty_queue.enqueue(100)
>       assert empty_queue.size() == 1
E       AssertionError

ts-3-5/test_3-5_0-9_280.py:25: AssertionError
   - [#  19] SVD a_queue: 
--------------------------------------------------------------------------------
  17:     '''
  18:     
  19:     def __init__(self, data=None):
  20:         '''Initialize queue data structure.'''
- 21:         self._container = DoubleLinkedList(data)
+ 21:         _container = DoubleLinkedList(data)
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
  25:         self._container.append(val)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  20] SVD a_queue: 
--------------------------------------------------------------------------------
  21:         self._container = DoubleLinkedList(data)
  22:     
  23:     def enqueue(self, val):
  24:         '''Add a value to the queue.'''
- 25:         self._container.append(val)
+ 25:         _container.append(val)
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
  29:         return self._container.pop()
--------------------------------------------------------------------------------
[0.13385 s] killed by ts-3-5/test_3-5_0-9_280.py::test_enqueue

empty_queue = <a_queue.Queue object at 0x7f008a080eb0>

    def test_enqueue(empty_queue):
>       empty_queue.enqueue(100)

ts-3-5/test_3-5_0-9_280.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f008a080eb0>, val = 100

>   ???
E   NameError: name '_container' is not defined

a_queue:25: NameError
   - [#  21] SVD a_queue: 
--------------------------------------------------------------------------------
  25:         self._container.append(val)
  26:     
  27:     def dequeue(self):
  28:         '''Remove a value from the front of the queue.'''
- 29:         return self._container.pop()
+ 29:         return _container.pop()
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
--------------------------------------------------------------------------------
[0.13622 s] killed by ts-3-5/test_3-5_0-9_280.py::test_dequeue

queue_with_values = <a_queue.Queue object at 0x7f008a082b60>

    def test_dequeue(queue_with_values):
>       assert queue_with_values.dequeue() == 10

ts-3-5/test_3-5_0-9_280.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f008a082b60>

>   ???
E   NameError: name '_container' is not defined

a_queue:29: NameError
   - [#  22] SVD a_queue: 
--------------------------------------------------------------------------------
  30:     
  31:     def peek(self):
  32:         '''Return the next value in the queue without dequing it.'''
  33:         try:
- 34:             return self._container.head.data
+ 34:             return _container.head.data
  35:         except AttributeError:
  36:             return None
  37:     
  38:     def size(self):
--------------------------------------------------------------------------------
[0.13648 s] killed by ts-3-5/test_3-5_0-9_280.py::test_peek

empty_queue = <a_queue.Queue object at 0x7f008a350dc0>
queue_with_values = <a_queue.Queue object at 0x7f008a350fa0>

    def test_peek(empty_queue, queue_with_values):
>       assert empty_queue.peek() is None

ts-3-5/test_3-5_0-9_280.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f008a350dc0>

>   ???
E   NameError: name '_container' is not defined

a_queue:34: NameError
   - [#  23] SVD a_queue: 
--------------------------------------------------------------------------------
  36:             return None
  37:     
  38:     def size(self):
  39:         '''Return the size of the queue.'''
- 40:         return self._container._length
+ 40:         return _container._length
--------------------------------------------------------------------------------
[0.13903 s] killed by ts-3-5/test_3-5_0-9_280.py::test_enqueue

empty_queue = <a_queue.Queue object at 0x7f008a203820>

    def test_enqueue(empty_queue):
        empty_queue.enqueue(100)
>       assert empty_queue.size() == 1

ts-3-5/test_3-5_0-9_280.py:25: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <a_queue.Queue object at 0x7f008a203820>

>   ???
E   NameError: name '_container' is not defined

a_queue:40: NameError
[*] Mutation score [3.47816 s]: 88.2%
   - all: 23
   - killed: 15 (65.2%)
   - survived: 2 (8.7%)
   - incompetent: 6 (26.1%)
   - timeout: 0 (0.0%)
