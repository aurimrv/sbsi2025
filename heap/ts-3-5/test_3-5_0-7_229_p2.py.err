import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

@pytest.fixture
def empty_heap():
    h = Heap()
    return h

@pytest.fixture
def filled_heap():
    h = Heap()
    h.build([3, 5, 2, 8, 1, 7])
    return h

def test_insert(empty_heap):
    empty_heap.insert(4)
    assert empty_heap.size() == 1
    assert empty_heap.min() == 4

def test_percolate(empty_heap):
    h = empty_heap
    h.heap_list = [0, 3, 5, 2, 8, 1, 7]
    h.percolate(6)
    assert h.heap_list == [0, 1, 5, 2, 8, 3, 7]

def test_sift(filled_heap):
    h = filled_heap
    h.sift(1)
    assert h.min() == 2

def test_find_min_child_index(filled_heap):
    h = filled_heap
    assert h.find_min_child_index(1) == 2

def test_min(filled_heap):
    assert filled_heap.min() == 1

def test_delete_min(filled_heap):
    min_val = filled_heap.delete_min()
    assert min_val == 1
    assert filled_heap.size() == 5

def test_build(empty_heap):
    empty_heap.build([9, 4, 6, 2, 1])
    assert empty_heap.size() == 5
    assert empty_heap.min() == 1

def test_size(filled_heap):
    assert filled_heap.size() == 6