import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

@pytest.fixture
def sample_heap():
    h = Heap()
    h.build([9, 5, 7, 3, 1])
    return h

def test_insert(sample_heap):
    sample_heap.insert(4)
    assert sample_heap.heap_list == [0, 1, 4, 7, 3, 5, 9]

def test_percolate(sample_heap):
    sample_heap.heap_list = [0, 5, 3, 7, 9, 1]
    sample_heap.percolate(5)
    assert sample_heap.heap_list == [0, 1, 3, 7, 9, 5]

def test_sift(sample_heap):
    sample_heap.heap_list = [0, 5, 3, 7, 9, 1]
    sample_heap.sift(1)
    assert sample_heap.heap_list == [0, 3, 1, 7, 9, 5]

def test_find_min_child_index(sample_heap):
    assert sample_heap.find_min_child_index(1) == 2

def test_min(sample_heap):
    assert sample_heap.min() == 1

def test_delete_min(sample_heap):
    assert sample_heap.delete_min() == 1
    assert sample_heap.heap_list == [0, 3, 5, 7, 9]

def test_build():
    h = Heap()
    h.build([1, 3, 5, 7, 9])
    assert h.heap_list == [0, 1, 3, 5, 7, 9]

def test_size():
    h = Heap()
    assert h.size() == 0
    h.insert(1)
    assert h.size() == 1