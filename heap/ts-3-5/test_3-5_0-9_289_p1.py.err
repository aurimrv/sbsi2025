import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

@pytest.fixture
def heap():
    return Heap()

def test_insert(heap):
    heap.insert(5)
    assert heap.heap_list[1] == 5

    heap.insert(2)
    assert heap.heap_list[1] == 2
    assert heap.heap_list[2] == 5

def test_percolate(heap):
    heap.heap_list = [0, 3, 9, 10, 11, 15, 6]
    heap.percolate(6)
    assert heap.heap_list == [0, 3, 6, 10, 11, 15, 9]

    heap.heap_list = [0, 7, 10, 12, 15, 11, 9]
    heap.percolate(6)
    assert heap.heap_list == [0, 7, 9, 12, 15, 11, 10]

def test_sift(heap):
    heap.heap_list = [0, 3, 6, 9, 10, 15]
    heap.sift(1)
    assert heap.heap_list == [0, 3, 6, 9, 10, 15]

    heap.heap_list = [0, 7, 10, 9, 15, 11]
    heap.sift(1)
    assert heap.heap_list == [0, 7, 10, 9, 15, 11]

def test_find_min_child_index(heap):
    heap.heap_list = [0, 3, 6, 9, 10, 15]
    assert heap.find_min_child_index(1) == 2

    heap.heap_list = [0, 7, 10, 9, 15, 11]
    assert heap.find_min_child_index(1) == 3

def test_min(heap):
    heap.heap_list = [0, 3, 6, 9, 10, 15]
    assert heap.min() == 3

    heap.heap_list = [0]
    assert heap.min() is None

def test_delete_min(heap):
    heap.heap_list = [0, 3, 6, 9, 10, 15]
    assert heap.delete_min() == 3

    heap.heap_list = [0]
    assert heap.delete_min() is None

def test_build(heap):
    heap.build([3, 6, 9, 10, 15])
    assert heap.heap_list == [0, 3, 6, 9, 10, 15]

    heap.build([7, 10, 9, 15, 11])
    assert heap.heap_list == [0, 7, 10, 9, 15, 11]

def test_size(heap):
    heap.heap_list = [0, 3, 6, 9, 10, 15]
    assert heap.size() == 5

    heap.heap_list = [0]
    assert heap.size() == 0