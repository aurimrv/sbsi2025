import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

@pytest.fixture
def empty_heap():
    return Heap()

@pytest.fixture
def prebuilt_heap():
    h = Heap()
    h.build([9, 3, 6, 1, 8, 2])
    return h

def test_insert(empty_heap):
    empty_heap.insert(5)
    assert empty_heap.heap_list == [0, 5]

def test_percolate(empty_heap):
    empty_heap.heap_list = [0, 3, 6, 8, 5]
    empty_heap.percolate(4)
    assert empty_heap.heap_list == [0, 3, 5, 8, 6]

def test_sift(prebuilt_heap):
    prebuilt_heap.sift(1)
    assert prebuilt_heap.heap_list == [0, 1, 3, 6, 8, 2, 9]

def test_find_min_child_index(prebuilt_heap):
    assert prebuilt_heap.find_min_child_index(1) == 2

def test_min(empty_heap):
    assert empty_heap.min() is None

def test_delete_min(prebuilt_heap):
    min_val = prebuilt_heap.delete_min()
    assert min_val == 1
    assert prebuilt_heap.heap_list == [0, 2, 3, 6, 8, 9]

def test_build(empty_heap):
    empty_heap.build([4, 2, 8, 3, 5])
    assert empty_heap.heap_list == [0, 2, 3, 8, 4, 5]

def test_size(empty_heap):
    assert empty_heap.size() == 0