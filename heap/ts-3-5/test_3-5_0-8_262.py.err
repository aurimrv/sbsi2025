import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

@pytest.fixture
def heap_instance():
    return Heap()

def test_insert(heap_instance):
    heap_instance.insert(5)
    assert heap_instance.min() == 5
    
    heap_instance.insert(3)
    assert heap_instance.min() == 3

def test_percolate(heap_instance):
    heap_instance.heap_list = [0, 5, 3]
    heap_instance.percolate(2)
    assert heap_instance.heap_list == [0, 3, 5]

def test_sift(heap_instance):
    heap_instance.heap_list = [0, 3, 5]
    heap_instance.sift(1)
    assert heap_instance.heap_list == [0, 5, 3]

def test_find_min_child_index(heap_instance):
    heap_instance.heap_list = [0, 3, 5, 8]
    assert heap_instance.find_min_child_index(1) == 2

def test_min(heap_instance):
    heap_instance.heap_list = [0, 3, 5, 8]
    assert heap_instance.min() == 3

def test_delete_min(heap_instance):
    heap_instance.heap_list = [0, 3, 5, 8]
    assert heap_instance.delete_min() == 3
    assert heap_instance.heap_list == [0, 5, 8]

def test_build(heap_instance):
    heap_instance.build([3, 8, 5])
    assert heap_instance.heap_list == [0, 3, 5, 8]

def test_size(heap_instance):
    heap_instance.heap_list = [0, 3, 5, 8]
    assert heap_instance.size() == 3