import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

@pytest.fixture
def empty_heap():
    return Heap()

@pytest.fixture
def populated_heap():
    heap = Heap()
    heap.build([9, 1, 5, 3, 7])
    return heap

def test_insert(empty_heap):
    empty_heap.insert(10)
    assert empty_heap.size() == 1
    assert empty_heap.min() == 10

def test_percolate(empty_heap):
    empty_heap.heap_list = [0, 3, 2, 1]
    empty_heap.percolate(empty_heap.size())
    assert empty_heap.heap_list == [0, 1, 2, 3]

def test_sift(populated_heap):
    populated_heap.sift(1)
    assert populated_heap.heap_list == [0, 1, 3, 5, 7, 9]

def test_find_min_child_index(populated_heap):
    assert populated_heap.find_min_child_index(1) == 2

def test_min(populated_heap):
    assert populated_heap.min() == 1

def test_delete_min(populated_heap):
    min_val = populated_heap.delete_min()
    assert min_val == 1
    assert populated_heap.min() == 3
    assert populated_heap.size() == 4

def test_build(empty_heap):
    empty_heap.build([5, 2, 7, 1])
    assert empty_heap.size() == 4
    assert empty_heap.min() == 1