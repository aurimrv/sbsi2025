import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

@pytest.fixture
def new_heap():
    return Heap()

def test_heap_insert(new_heap):
    new_heap.insert(5)
    assert new_heap.heap_list == [0, 5]

    new_heap.insert(3)
    assert new_heap.heap_list == [0, 3, 5]

def test_heap_percolate(new_heap):
    new_heap.heap_list = [0, 3, 5, 2]
    new_heap.percolate(3)
    assert new_heap.heap_list == [0, 2, 5, 3]

    new_heap.heap_list = [0, 7, 6, 5, 3, 2, 4]
    new_heap.percolate(6)
    assert new_heap.heap_list == [0, 2, 6, 5, 3, 7, 4]

def test_heap_sift(new_heap):
    new_heap.heap_list = [0, 3, 5, 2]
    new_heap.sift(1)
    assert new_heap.heap_list == [0, 2, 5, 3]

    new_heap.heap_list = [0, 7, 6, 5, 3, 2, 4]
    new_heap.sift(1)
    assert new_heap.heap_list == [0, 2, 6, 5, 3, 7, 4]

def test_heap_find_min_child_index(new_heap):
    new_heap.heap_list = [0, 3, 5, 2, 7, 6]
    assert new_heap.find_min_child_index(1) == 3

    new_heap.heap_list = [0, 7, 6, 5, 3, 2, 4]
    assert new_heap.find_min_child_index(1) == 5

def test_heap_min(new_heap):
    new_heap.heap_list = [0, 3, 5, 2]
    assert new_heap.min() == 2

    new_heap.heap_list = [0]
    assert new_heap.min() == None

def test_heap_delete_min(new_heap):
    new_heap.heap_list = [0, 3, 5, 2]
    assert new_heap.delete_min() == 2
    assert new_heap.heap_list == [0, 3, 5]

    new_heap.heap_list = [0]
    assert new_heap.delete_min() == None

def test_heap_build(new_heap):
    new_heap.build([3, 5, 2])
    assert new_heap.heap_list == [0, 2, 5, 3]

    new_heap.build([7, 6, 5, 3, 2, 4])
    assert new_heap.heap_list == [0, 2, 6, 5, 3, 7, 4]

def test_heap_size(new_heap):
    new_heap.heap_list = [0, 3, 5, 2]
    assert new_heap.size() == 3

    new_heap.heap_list = [0]
    assert new_heap.size() == 0