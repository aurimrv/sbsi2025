import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

@pytest.fixture
def setup_heap():
    heap = Heap()
    return heap

def test_insert(setup_heap):
    heap = setup_heap
    heap.insert(5)
    assert heap.heap_list == [0, 5]

def test_percolate(setup_heap):
    heap = setup_heap
    heap.heap_list = [0, 5, 3]
    heap.percolate(2)
    assert heap.heap_list == [0, 3, 5]

def test_sift(setup_heap):
    heap = setup_heap
    heap.heap_list = [0, 1, 5, 2, 7]
    heap.sift(1)
    assert heap.heap_list == [0, 1, 2, 5, 7]

def test_find_min_child_index(setup_heap):
    heap = setup_heap
    heap.heap_list = [0, 10, 5, 8, 3]
    assert heap.find_min_child_index(1) == 3

def test_min(setup_heap):
    heap = setup_heap
    heap.heap_list = [0, 3, 7, 1]
    assert heap.min() == 3

def test_delete_min(setup_heap):
    heap = setup_heap
    heap.heap_list = [0, 5, 8, 7]
    assert heap.delete_min() == 5

def test_build(setup_heap):
    heap = setup_heap
    heap.build([3, 8, 1, 4, 2])
    assert heap.heap_list == [0, 1, 2, 3, 8, 4]

def test_size(setup_heap):
    heap = setup_heap
    heap.heap_list = [0, 6, 3, 9]
    assert heap.size() == 3