import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

@pytest.fixture
def empty_heap():
    return Heap()

@pytest.fixture
def initialized_heap():
    heap = Heap()
    heap.build([7, 10, 5, 20, 15])
    return heap

def test_insert(empty_heap):
    empty_heap.insert(5)
    assert empty_heap.heap_list == [0, 5]

def test_percolate(empty_heap):
    empty_heap.heap_list = [0, 3, 8, 10, 9]
    empty_heap.percolate(4)
    assert empty_heap.heap_list == [0, 3, 8, 9, 10]

def test_sift(initialized_heap):
    initialized_heap.sift(1)
    assert initialized_heap.heap_list == [0, 5, 10, 7, 20, 15]

def test_find_min_child_index(initialized_heap):
    assert initialized_heap.find_min_child_index(1) == 2

def test_min(initialized_heap):
    assert initialized_heap.min() == 5

def test_delete_min(initialized_heap):
    assert initialized_heap.delete_min() == 5
    assert initialized_heap.heap_list == [0, 7, 10, 15, 20]

def test_build(empty_heap):
    empty_heap.build([4, 9, 2])
    assert empty_heap.heap_list == [0, 2, 4, 9]

def test_size(empty_heap):
    assert empty_heap.size() == 0