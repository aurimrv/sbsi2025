import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

@pytest.fixture
def sample_heap():
    heap = Heap()
    heap.heap_list = [0, 4, 7, 9, 10, 8, 15, 12]
    return heap

def test_insert(sample_heap):
    sample_heap.insert(5)
    assert sample_heap.heap_list == [0, 4, 5, 9, 7, 8, 15, 12, 10]

    sample_heap.insert(2)
    assert sample_heap.heap_list == [0, 2, 4, 5, 7, 8, 15, 12, 10, 9]

def test_percolate(sample_heap):
    sample_heap.percolate(4)
    assert sample_heap.heap_list == [0, 4, 7, 9, 10, 8, 15, 12]

    sample_heap.heap_list = [0, 4, 9, 7, 10, 8, 15, 12]
    sample_heap.percolate(8)
    assert sample_heap.heap_list == [0, 4, 7, 9, 10, 8, 15, 12]

def test_sift(sample_heap):
    sample_heap.sift(2)
    assert sample_heap.heap_list == [0, 4, 7, 9, 10, 8, 15, 12]

    sample_heap.heap_list = [0, 10, 7, 9, 4, 8, 15, 12]
    sample_heap.sift(1)
    assert sample_heap.heap_list == [0, 4, 7, 9, 10, 8, 15, 12]

def test_find_min_child_index(sample_heap):
    assert sample_heap.find_min_child_index(1) == 2

    assert sample_heap.find_min_child_index(5) is None

def test_min(sample_heap):
    assert sample_heap.min() == 4

def test_delete_min(sample_heap):
    assert sample_heap.delete_min() == 4
    assert sample_heap.heap_list == [0, 7, 8, 9, 10, 12, 15]

def test_build():
    heap = Heap()
    heap.build([3, 6, 1, 9, 5, 7])
    assert heap.heap_list == [0, 1, 5, 3, 9, 6, 7]

def test_size(sample_heap):
    assert sample_heap.size() == 7