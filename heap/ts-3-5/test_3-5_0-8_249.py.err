import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

import pytest

@pytest.fixture
def empty_heap():
    return Heap()

@pytest.fixture
def example_heap():
    heap = Heap()
    heap.insert(3)
    heap.insert(1)
    heap.insert(6)
    heap.insert(4)
    heap.insert(5)
    return heap

def test_insert(empty_heap):
    empty_heap.insert(3)
    assert empty_heap.min() == 3

def test_percolate(empty_heap):
    empty_heap.heap_list = [0, 3, 6, 8, 10, 9]
    empty_heap.percolate(5)
    assert empty_heap.heap_list == [0, 3, 6, 8, 10, 9]

def test_sift(example_heap):
    example_heap.sift(1)
    assert example_heap.heap_list == [0, 1, 5, 6, 4, 3]

def test_find_min_child_index(example_heap):
    assert example_heap.find_min_child_index(1) == 2

def test_min(example_heap):
    assert example_heap.min() == 1

def test_delete_min(example_heap):
    min_val = example_heap.delete_min()
    assert min_val == 1
    assert example_heap.min() == 3

def test_build():
    lst = [9, 4, 7, 2, 1, 8]
    heap = Heap()
    heap.build(lst)
    assert heap.min() == 1
    assert heap.size() == 6