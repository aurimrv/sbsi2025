import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

# Test cases for the Heap class and its methods

def test_insert():
    heap = Heap()
    heap.insert(5)
    assert heap.size() == 1
    assert heap.min() == 5

def test_percolate():
    heap = Heap()
    heap.heap_list = [0, 3, 2, 1, 4]
    heap.percolate(4)
    assert heap.heap_list == [0, 1, 2, 3, 4]

def test_sift():
    heap = Heap()
    heap.heap_list = [0, 3, 2, 1, 4]
    heap.sift(1)
    assert heap.heap_list == [0, 1, 2, 3, 4]

def test_find_min_child_index():
    heap = Heap()
    heap.heap_list = [0, 3, 2, 1, 4]
    result = heap.find_min_child_index(1)
    assert result == 3

def test_min():
    heap = Heap()
    heap.heap_list = [0, 3, 2, 1, 4]
    assert heap.min() == 1

def test_delete_min():
    heap = Heap()
    heap.heap_list = [0, 3, 2, 1, 4]
    min_val = heap.delete_min()
    assert min_val == 1
    assert heap.heap_list == [0, 2, 3, 4]

def test_build():
    heap = Heap()
    heap.build([4, 1, 3, 2])
    assert heap.heap_list == [0, 1, 2, 3, 4]
