import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from heap import Heap

@pytest.fixture
def sample_heap():
    heap = Heap()
    heap.heap_list = [0, 5, 7, 9, 15, 18, 12, 10]
    return heap

def test_insert(sample_heap):
    sample_heap.insert(13)
    assert sample_heap.heap_list == [0, 5, 7, 9, 13, 18, 12, 10, 15]

    sample_heap.insert(3)
    assert sample_heap.heap_list == [0, 3, 7, 5, 13, 18, 12, 10, 15, 9]

def test_percolate(sample_heap):
    sample_heap.percolate(3)
    assert sample_heap.heap_list == [0, 5, 7, 9, 15, 18, 12, 10]

    sample_heap.percolate(6)
    assert sample_heap.heap_list == [0, 5, 7, 9, 15, 18, 12, 10]

def test_sift(sample_heap):
    sample_heap.sift(3)
    assert sample_heap.heap_list == [0, 5, 7, 9, 15, 18, 12, 10]

    sample_heap.sift(1)
    assert sample_heap.heap_list == [0, 7, 12, 9, 15, 18, 5, 10]

def test_find_min_child_index(sample_heap):
    assert sample_heap.find_min_child_index(1) == 2
    assert sample_heap.find_min_child_index(2) == 4

def test_min(sample_heap):
    assert sample_heap.min() == 5

def test_delete_min(sample_heap):
    assert sample_heap.delete_min() == 5
    assert sample_heap.heap_list == [0, 7, 10, 9, 15, 18, 12]

def test_build(sample_heap):
    sample_heap.build([5, 9, 1, 4, 8])
    assert sample_heap.heap_list == [0, 1, 4, 5, 9, 8, 12, 7, 15, 18]

def test_size(sample_heap):
    assert sample_heap.size() == 7