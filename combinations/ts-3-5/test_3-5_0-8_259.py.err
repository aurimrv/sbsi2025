import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from combinations import combinations_of_word, combinations_of_phone_input

def test_combinations_of_word():
    # Test case for empty string
    assert combinations_of_word("") == []
    
    # Test case for single letter
    assert combinations_of_word("a") == ["a"]
    
    # Test case for word with 2 unique letters
    assert combinations_of_word("ab") == ["a", "ab", "b"]
    
    # Test case for word with repeating letters
    assert combinations_of_word("aaa") == ["a", "aa", "aaa"]
    
    # Test case for word with alternating letters
    assert combinations_of_word("abc") == ["a", "ab", "abc", "b", "bc", "c"]

def test_combinations_of_phone_input():
    # Test case for single digit
    assert combinations_of_phone_input("2") == ['a', 'b', 'c']
    
    # Test case for two different digits
    assert combinations_of_phone_input("23") == ['ad', 'ae', 'af', 'bd', 'be', 'bf', 'cd', 'ce', 'cf']
    
    # Test case for three different digits
    assert combinations_of_phone_input("234") == ['adg', 'adh', 'adi', 'aeg', 'aeh', 'aei', 'afg', 'afh', 'afi', 
                                                   'bdg', 'bdh', 'bdi', 'beg', 'beh', 'bei', 'bfg', 'bfh', 'bfi', 
                                                   'cdg', 'cdh', 'cdi', 'ceg', 'ceh', 'cei', 'cfg', 'cfh', 'cfi']
    
    # Test case for same digits
    assert combinations_of_phone_input("222") == ['aaa', 'aab', 'aac', 'aba', 'abb', 'abc', 'aca', 'acb', 'acc']

    # Test case for mixed digits
    assert combinations_of_phone_input("239") == ['adw', 'adx', 'ady', 'adz', 'aew', 'aex', 'aey', 'aez', 'afw', 'afx', 'afy', 'afz',
                                                  'bdw', 'bdx', 'bdy', 'bdz', 'bew', 'bex', 'bey', 'bez', 'bfw', 'bfx', 'bfy', 'bfz',
                                                  'cdw', 'cdx', 'cdy', 'cdz', 'cew', 'cex', 'cey', 'cez', 'cfw', 'cfx', 'cfy', 'cfz']
