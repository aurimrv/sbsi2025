import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from lru_cache import ListNode, LruCache

import pytest

class TestLruCache:

    def test_put_get_single_element(self):
        cache = LruCache(1)
        cache.put(1, 'a')
        assert cache.get(1) == 'a'

    def test_put_multiple_elements_capacity_one(self):
        cache = LruCache(1)
        cache.put(1, 'a')
        cache.put(2, 'b')  # Should drop key 'a'
        assert cache.get(1) == -1
        assert cache.get(2) == 'b'

    def test_put_get_multiple_elements(self):
        cache = LruCache(3)
        cache.put(1, 'a')
        cache.put(2, 'b')
        cache.put(3, 'c')
        assert cache.get(1) == 'a'  # Update order
        assert cache.get(2) == 'b'  # Update order
        assert cache.get(4) == -1   # Key not found

    def test_put_same_key_multiple_times(self):
        cache = LruCache(2)
        cache.put(1, 'a')
        cache.put(1, 'b')  # Update value
        assert cache.get(1) == 'b'

    def test_put_capacity_zero(self):
        with pytest.raises(ValueError):
            cache = LruCache(0)

    def test_get_missing_key(self):
        cache = LruCache(2)
        cache.put(1, 'a')
        assert cache.get(2) == -1

    def test_remove_node_from_list(self):
        cache = LruCache(3)
        node = ListNode(1, 'a')
        cache._add(node)
        cache._remove(node)
        assert cache.head.next == cache.tail
        assert cache.tail.prev == cache.head

    def test_add_node_to_list(self):
        cache = LruCache(3)
        node1 = ListNode(1, 'a')
        node2 = ListNode(2, 'b')
        cache._add(node1)
        cache._add(node2)
        assert cache.head.next == node1
        assert cache.head.next.next == node2
        assert cache.tail.prev == node2
