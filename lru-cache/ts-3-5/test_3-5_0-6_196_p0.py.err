import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from lru_cache import ListNode, LruCache

def test_list_node_init():
    node = ListNode(1, 'value')
    assert node.key == 1
    assert node.val == 'value'
    assert node.next is None
    assert node.prev is None

def test_lru_cache_init():
    cache = LruCache(3)
    assert cache.head.key == cache.terminal_value
    assert cache.tail.val == cache.terminal_value
    assert cache.head.next == cache.tail
    assert cache.tail.prev == cache.head
    assert cache.lookup_map == {}
    assert cache.capacity == 3

def test_lru_cache_put():
    cache = LruCache(2)
    cache.put('a', 1)
    cache.put('b', 2)
    assert cache.get('a') == 1
    cache.put('c', 3)
    assert cache.get('a') == -1

def test_lru_cache_get():
    cache = LruCache(2)
    cache.put('a', 1)
    cache.put('b', 2)
    assert cache.get('a') == 1
    cache.put('c', 3)
    assert cache.get('b') == -1

def test_lru_cache_private_methods():
    cache = LruCache(3)
    node1 = ListNode('a', 1)
    node2 = ListNode('b', 2)
    node3 = ListNode('c', 3)
    
    cache._add(node1)
    assert cache.head.next == node1
    assert cache.tail.prev == node1

    cache._add(node2)
    assert cache.head.next == node1
    assert cache.tail.prev == node2

    cache._remove(node1)
    assert cache.head.next == node2
    assert cache.tail.prev == node2

    cache._add(node3)
    cache._remove(node3)
    assert cache.head.next == node2
    assert cache.tail.prev == node2