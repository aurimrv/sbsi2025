import sys
import os
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from lru_cache import ListNode, LruCache

class TestListNode:
    
    def test_listnode_init(self):
        node = ListNode(1, 'a')
        assert node.key == 1
        assert node.val == 'a'
        
    def test_listnode_next_prev(self):
        node1 = ListNode(1, 'a')
        node2 = ListNode(2, 'b')
        
        node1.next = node2
        node2.prev = node1
        
        assert node1.next == node2
        assert node2.prev == node1

class TestLruCache:
    
    def test_lru_cache_init(self):
        cache = LruCache(3)
        assert cache.capacity == 3
        assert cache.head.val == cache.tail.val == 0
        assert cache.head.next == cache.tail
        assert cache.tail.prev == cache.head
        assert cache.lookup_map == {}
        
    def test_lru_cache_put(self):
        cache = LruCache(2)
        cache.put(1, 'a')
        cache.put(2, 'b')
        assert cache.head.next.val == 'b'
        
        cache.put(3, 'c')
        assert cache.head.next.val == 'c'
        assert 1 not in cache.lookup_map
        
    def test_lru_cache_get(self):
        cache = LruCache(2)
        cache.put(1, 'a')
        cache.put(2, 'b')
        
        assert cache.get(1) == 'a'
        cache.put(3, 'c')
        
        assert cache.get(1) == -1
        assert cache.get(3) == 'c'
        
    def test_lru_cache_private_methods(self):
        cache = LruCache(2)
        node1 = ListNode(1, 'a')
        node2 = ListNode(2, 'b')
        
        cache._add(node1)
        assert cache.head.next == node1
        assert cache.tail.prev == node1
        
        cache._add(node2)
        assert cache.head.next == node2
        assert cache.tail.prev == node2
        
        cache._remove(node1)
        assert cache.head.next == node2
        assert cache.tail.prev == node2