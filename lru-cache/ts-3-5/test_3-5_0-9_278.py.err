import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from lru_cache import ListNode, LruCache

# Test for ListNode class
def test_list_node_init():
    node = ListNode(1, 100)
    assert node.key == 1
    assert node.val == 100
    assert node.next is None
    assert node.prev is None

# Test for LruCache class
def test_lru_cache_init():
    cache = LruCache(2)
    assert cache.capacity == 2
    assert cache.head.key == cache.terminal_value
    assert cache.head.val == cache.terminal_value
    assert cache.tail.key == cache.terminal_value
    assert cache.tail.val == cache.terminal_value
    assert len(cache.lookup_map) == 0

def test_lru_cache_put_get():
    cache = LruCache(2)
    cache.put(1, 10)
    cache.put(2, 20)
    
    assert cache.get(1) == 10
    assert cache.get(2) == 20

    cache.put(3, 30)
    assert cache.get(1) == -1

def test_lru_cache_put_capacity():
    cache = LruCache(2)
    cache.put(1, 10)
    cache.put(2, 20)
    cache.put(3, 30)
    
    assert cache.get(1) == -1
    assert cache.get(2) == 20
    assert cache.get(3) == 30

def test_lru_cache_put_update():
    cache = LruCache(2)
    cache.put(1, 10)
    cache.put(2, 20)
    cache.put(1, 100)
    
    assert cache.get(1) == 100
    assert cache.get(2) == 20

def test_lru_cache_get_not_found():
    cache = LruCache(2)
    cache.put(1, 10)
    
    assert cache.get(2) == -1

def test_lru_cache_remove():
    cache = LruCache(2)
    cache.put(1, 10)
    cache.put(2, 20)

    assert cache.get(1) == 10

    cache.put(3, 30)
    assert cache.get(2) == -1

def test_lru_cache_get_not_found_empty_cache():
    cache = LruCache(2)
    
    assert cache.get(1) == -1

def test_lru_cache_remove_empty_cache():
    cache = LruCache(2)
    
    cache.put(1, 10)
    cache.get(1)
    
    assert len(cache.lookup_map) == 0
