import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from lru_cache import ListNode, LruCache

import pytest

# Test cases for ListNode class
def test_list_node_init():
    node = ListNode(1, "value")
    assert node.key == 1
    assert node.val == "value"
    assert node.next is None
    assert node.prev is None

def test_list_node_key_val_updated():
    node = ListNode(1, "value")
    node.key = 2
    node.val = "updated"
    assert node.key == 2
    assert node.val == "updated"

# Test cases for LruCache class
def test_lru_cache_init():
    cache = LruCache(3)
    assert cache.capacity == 3
    assert cache.head.key == LruCache.terminal_value
    assert cache.tail.val == LruCache.terminal_value
    assert len(cache.lookup_map) == 0

def test_lru_cache_put():
    cache = LruCache(2)
    cache.put(1, "one")
    cache.put(2, "two")
    assert cache.head.next.key == 1
    assert cache.tail.prev.key == 2
    assert len(cache.lookup_map) == 2

def test_lru_cache_put_capacity_exceeded():
    cache = LruCache(2)
    cache.put(1, "one")
    cache.put(2, "two")
    cache.put(3, "three")
    assert cache.head.next.key == 2
    assert len(cache.lookup_map) == 2

def test_lru_cache_get():
    cache = LruCache(2)
    cache.put(1, "one")
    cache.put(2, "two")
    assert cache.get(1) == "one"
    assert cache.head.next.key == 2

def test_lru_cache_get_non_existent_key():
    cache = LruCache(2)
    cache.put(1, "one")
    cache.put(2, "two")
    assert cache.get(3) == -1

def test_lru_cache_private_add():
    cache = LruCache(2)
    node = ListNode(1, "one")
    cache._add(node)
    assert cache.head.next.key == 1
    assert cache.tail.prev.key == LruCache.terminal_value

def test_lru_cache_private_remove():
    cache = LruCache(2)
    node = ListNode(1, "one")
    cache._add(node)
    cache._remove(node)
    assert cache.head.next.key == LruCache.terminal_value
    assert cache.tail.prev.key == LruCache.terminal_value