import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from lru_cache import ListNode, LruCache

# Tests for ListNode class
def test_list_node_creation():
    node = ListNode(1, 'a')
    assert node.key == 1
    assert node.val == 'a'

def test_list_node_next_prev():
    node1 = ListNode(1, 'a')
    node2 = ListNode(2, 'b')
    
    node1.next = node2
    node2.prev = node1
    
    assert node1.next == node2
    assert node2.prev == node1

# Tests for LruCache class
def test_lru_cache_creation():
    cache = LruCache(3)
    assert cache.capacity == 3
    assert cache.head.next == cache.tail
    assert cache.tail.prev == cache.head

def test_lru_cache_put():
    cache = LruCache(2)
    cache.put(1, 'a')
    cache.put(2, 'b')
    
    assert cache.head.next.key == 1
    assert cache.head.next.val == 'a'
    
    cache.put(3, 'c')
    assert cache.head.next.key == 2
    assert cache.head.next.val == 'b'

def test_lru_cache_get():
    cache = LruCache(2)
    cache.put(1, 'a')
    cache.put(2, 'b')
    
    assert cache.get(1) == 'a'
    
    cache.put(3, 'c')
    assert cache.get(1) == -1

def test_lru_cache_add():
    cache = LruCache(2)
    node1 = ListNode(1, 'a')
    node2 = ListNode(2, 'b')
    
    cache._add(node1)
    cache._add(node2)
    
    assert cache.head.next == node1
    assert cache.tail.prev == node2

def test_lru_cache_remove():
    cache = LruCache(2)
    node1 = ListNode(1, 'a')
    node2 = ListNode(2, 'b')
    
    cache._add(node1)
    cache._add(node2)
    
    cache._remove(node1)
    
    assert cache.head.next == node2
    assert cache.tail.prev == node2