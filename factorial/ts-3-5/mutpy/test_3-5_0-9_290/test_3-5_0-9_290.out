[*] Start mutation process:
   - targets: factorial.py
   - tests: ts-3-5/test_3-5_0-9_290.py
[*] 4 tests passed:
   - test_3-5_0-9_290 [0.11557 s]
[*] Start mutants generation and execution:
   - [#   1] AOR factorial: 
--------------------------------------------------------------------------------
  14:     
  15:     if n <= 0:
  16:         return 0
  17:     
- 18:     return reduce((lambda x, y: (x * y)), range(1, n + 1))
+ 18:     return reduce((lambda x, y: (x / y)), range(1, n + 1))
--------------------------------------------------------------------------------
[0.14954 s] killed by ts-3-5/test_3-5_0-9_290.py::test_factorial_with_positive_input

def test_factorial_with_positive_input():
>       assert factorial(5) == 120
E       AssertionError

ts-3-5/test_3-5_0-9_290.py:13: AssertionError
   - [#   2] AOR factorial: 
--------------------------------------------------------------------------------
  14:     
  15:     if n <= 0:
  16:         return 0
  17:     
- 18:     return reduce((lambda x, y: (x * y)), range(1, n + 1))
+ 18:     return reduce((lambda x, y: (x // y)), range(1, n + 1))
--------------------------------------------------------------------------------
[0.14623 s] killed by ts-3-5/test_3-5_0-9_290.py::test_factorial_with_positive_input

def test_factorial_with_positive_input():
>       assert factorial(5) == 120
E       AssertionError

ts-3-5/test_3-5_0-9_290.py:13: AssertionError
   - [#   3] AOR factorial: 
--------------------------------------------------------------------------------
  14:     
  15:     if n <= 0:
  16:         return 0
  17:     
- 18:     return reduce((lambda x, y: (x * y)), range(1, n + 1))
+ 18:     return reduce((lambda x, y: (x ** y)), range(1, n + 1))
--------------------------------------------------------------------------------
[0.14947 s] killed by ts-3-5/test_3-5_0-9_290.py::test_factorial_with_positive_input

def test_factorial_with_positive_input():
>       assert factorial(5) == 120
E       AssertionError

ts-3-5/test_3-5_0-9_290.py:13: AssertionError
   - [#   4] AOR factorial: 
--------------------------------------------------------------------------------
  14:     
  15:     if n <= 0:
  16:         return 0
  17:     
- 18:     return reduce((lambda x, y: (x * y)), range(1, n + 1))
+ 18:     return reduce((lambda x, y: (x * y)), range(1, n - 1))
--------------------------------------------------------------------------------
[0.14937 s] killed by ts-3-5/test_3-5_0-9_290.py::test_factorial_with_positive_input

def test_factorial_with_positive_input():
>       assert factorial(5) == 120
E       AssertionError

ts-3-5/test_3-5_0-9_290.py:13: AssertionError
   - [#   5] COI factorial: 
--------------------------------------------------------------------------------
  11:         The factorial number for n (n!).  Input
  12:         of 0 or less will output 0.
  13:     '''
  14:     
- 15:     if n <= 0:
+ 15:     if not (n <= 0):
  16:         return 0
  17:     
  18:     return reduce((lambda x, y: (x * y)), range(1, n + 1))
--------------------------------------------------------------------------------
[0.15024 s] killed by ts-3-5/test_3-5_0-9_290.py::test_factorial_with_positive_input

def test_factorial_with_positive_input():
>       assert factorial(5) == 120
E       AssertionError

ts-3-5/test_3-5_0-9_290.py:13: AssertionError
   - [#   6] ROR factorial: 
--------------------------------------------------------------------------------
  11:         The factorial number for n (n!).  Input
  12:         of 0 or less will output 0.
  13:     '''
  14:     
- 15:     if n <= 0:
+ 15:     if n >= 0:
  16:         return 0
  17:     
  18:     return reduce((lambda x, y: (x * y)), range(1, n + 1))
--------------------------------------------------------------------------------
[0.14336 s] killed by ts-3-5/test_3-5_0-9_290.py::test_factorial_with_positive_input

def test_factorial_with_positive_input():
>       assert factorial(5) == 120
E       AssertionError

ts-3-5/test_3-5_0-9_290.py:13: AssertionError
   - [#   7] ROR factorial: 
--------------------------------------------------------------------------------
  11:         The factorial number for n (n!).  Input
  12:         of 0 or less will output 0.
  13:     '''
  14:     
- 15:     if n <= 0:
+ 15:     if n < 0:
  16:         return 0
  17:     
  18:     return reduce((lambda x, y: (x * y)), range(1, n + 1))
--------------------------------------------------------------------------------
[0.15330 s] incompetent

TypeError: factorial:18: TypeError: reduce() of empty iterable with no initial value

   - [#   8] SDL factorial: 
--------------------------------------------------------------------------------
  12:         of 0 or less will output 0.
  13:     '''
  14:     
  15:     if n <= 0:
- 16:         return 0
+ 16:         pass
  17:     
  18:     return reduce((lambda x, y: (x * y)), range(1, n + 1))
--------------------------------------------------------------------------------
[0.14461 s] incompetent

TypeError: factorial:18: TypeError: reduce() of empty iterable with no initial value

   - [#   9] SDL factorial: 
--------------------------------------------------------------------------------
  14:     
  15:     if n <= 0:
  16:         return 0
  17:     
- 18:     return reduce((lambda x, y: (x * y)), range(1, n + 1))
+ 18:     pass
--------------------------------------------------------------------------------
[0.14532 s] killed by ts-3-5/test_3-5_0-9_290.py::test_factorial_with_positive_input

def test_factorial_with_positive_input():
>       assert factorial(5) == 120
E       AssertionError

ts-3-5/test_3-5_0-9_290.py:13: AssertionError
[*] Mutation score [1.54791 s]: 100.0%
   - all: 9
   - killed: 7 (77.8%)
   - survived: 0 (0.0%)
   - incompetent: 2 (22.2%)
   - timeout: 0 (0.0%)
