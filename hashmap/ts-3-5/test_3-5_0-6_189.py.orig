import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from hash_map import HashMap, djb2, sdbm, lose_lose

@pytest.fixture
def hash_map():
    return HashMap(buckets=10, hash_function=djb2)

def test_insert(hash_map):
    hash_map.insert('test_key', 'test_value')
    assert hash_map.get('test_key') == 'test_value'

def test_get_non_existent_key(hash_map):
    with pytest.raises(KeyError):
        hash_map.get('non_existent_key')

def test_override_value(hash_map):
    hash_map.insert('test_key', 'original_value')
    hash_map.insert('test_key', 'new_value')
    assert hash_map.get('test_key') == 'new_value'

def test_delete(hash_map):
    hash_map.insert('test_key', 'test_value')
    deleted_value = hash_map.delete('test_key')
    assert deleted_value == ('test_key', 'test_value')
    with pytest.raises(KeyError):
        hash_map.get('test_key')

def test_djb2_hash_function():
    assert djb2('test_key') == 2032032689

def test_sdbm_hash_function():
    assert sdbm('test_key') == 3735928559

def test_lose_lose_hash_function():
    assert lose_lose('test_key') == 101