import os
import sys

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from hash_map import HashMap, djb2, sdbm, lose_lose

import pytest

@pytest.fixture
def hash_map():
    hm = HashMap()
    return hm

def test_insert(hash_map):
    hash_map.insert('test_key', 'test_value')
    assert hash_map.get('test_key') == 'test_value'

def test_insert_override(hash_map):
    hash_map.insert('test_key', 'test_value')
    hash_map.insert('test_key', 'new_test_value')
    assert hash_map.get('test_key') == 'new_test_value'

def test_get(hash_map):
    hash_map.insert('test_key', 'test_value')
    assert hash_map.get('test_key') == 'test_value'

def test_get_nonexistent_key(hash_map):
    with pytest.raises(KeyError):
        hash_map.get('nonexistent_key')

def test_delete(hash_map):
    hash_map.insert('test_key', 'test_value')
    deleted_value = hash_map.delete('test_key')
    assert deleted_value[1] == 'test_value'
    with pytest.raises(KeyError):
        hash_map.get('test_key')

def test_delete_nonexistent_key(hash_map):
    with pytest.raises(KeyError):
        hash_map.delete('nonexistent_key')

def test_hash_functions():
    assert djb2('test_key') == 140188717
    assert sdbm('test_key') == 530514816
    assert lose_lose('test_key') == 835