import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from hash_map import HashMap, djb2, sdbm, lose_lose

@pytest.fixture
def hashmap():
    return HashMap()

def test_insert(hashmap):
    hashmap.insert('test_key', 'test_value')
    assert hashmap.get('test_key') == 'test_value'

def test_get(hashmap):
    hashmap.insert('test_key', 'test_value')
    assert hashmap.get('test_key') == 'test_value'

def test_delete(hashmap):
    hashmap.insert('test_key', 'test_value')
    assert hashmap.delete('test_key') == ('test_key', 'test_value')
    with pytest.raises(KeyError):
        hashmap.get('test_key')

def test_insert_override(hashmap):
    hashmap.insert('test_key', 'test_value')
    hashmap.insert('test_key', 'new_test_value')
    assert hashmap.get('test_key') == 'new_test_value'

def test_get_nonexistent_key(hashmap):
    with pytest.raises(KeyError):
        hashmap.get('nonexistent_key')

def test_delete_nonexistent_key(hashmap):
    with pytest.raises(KeyError):
        hashmap.delete('nonexistent_key')

def test_djb2():
    assert djb2('test_key') == 2147194940

def test_sdbm():
    assert sdbm('test_key') == -1670818822

def test_lose_lose():
    assert lose_lose('test_key') == 664