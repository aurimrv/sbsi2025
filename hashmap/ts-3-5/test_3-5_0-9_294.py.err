import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from hash_map import HashMap, djb2, sdbm, lose_lose

@pytest.fixture
def hashmap():
    return HashMap()

def test_insert(hashmap):
    # Test inserting a new key-value pair
    hashmap.insert('test_key', 'test_value')
    assert hashmap.get('test_key') == 'test_value'

    # Test inserting and overwriting an existing key
    hashmap.insert('test_key', 'new_value')
    assert hashmap.get('test_key') == 'new_value'

def test_get(hashmap):
    # Test getting a value that exists in the map
    hashmap.insert('test_key', 'test_value')
    assert hashmap.get('test_key') == 'test_value'

    # Test getting a value that does not exist in the map
    with pytest.raises(KeyError):
        hashmap.get('nonexistent_key')

def test_delete(hashmap):
    # Test deleting a key that exists in the map
    hashmap.insert('test_key', 'test_value')
    deleted_value = hashmap.delete('test_key')
    assert deleted_value == ('test_key', 'test_value')
    with pytest.raises(KeyError):
        hashmap.get('test_key')

    # Test deleting a key that does not exist in the map
    with pytest.raises(KeyError):
        hashmap.delete('nonexistent_key')

def test_djb2():
    # Test the djb2 hash function with a known input
    assert djb2('test') == 209077374

def test_sdbm():
    # Test the sdbm hash function with a known input
    assert sdbm('test') == 287033879

def test_lose_lose():
    # Test the lose_lose hash function with a known input
    assert lose_lose('test') == 448