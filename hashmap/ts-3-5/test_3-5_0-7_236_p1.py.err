import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from hash_map import HashMap, djb2, sdbm, lose_lose

class TestHashMap:
    
    def test_insert(self):
        h = HashMap()
        h.insert('test_key', 'test_value')
        assert h.get('test_key') == 'test_value'

    def test_insert_override(self):
        h = HashMap()
        h.insert('test_key', 'test_value')
        h.insert('test_key', 'new_test_value')
        assert h.get('test_key') == 'new_test_value'
    
    def test_get_existing_key(self):
        h = HashMap()
        h.insert('test_key', 'test_value')
        assert h.get('test_key') == 'test_value'
    
    def test_get_non_existing_key(self):
        h = HashMap()
        with pytest.raises(KeyError):
            h.get('non_existing_key')
    
    def test_delete_existing_key(self):
        h = HashMap()
        h.insert('test_key', 'test_value')
        assert h.delete('test_key') == ('test_key', 'test_value')
    
    def test_delete_non_existing_key(self):
        h = HashMap()
        with pytest.raises(KeyError):
            h.delete('non_existing_key')

class TestHashFunctions:

    def test_djb2(self):
        assert djb2('test_key') == 7572963594076045
        assert djb2('another_key') == 272120904768718951198

    def test_sdbm(self):
        assert sdbm('test_key') == 606379187146086983188292032049998418
        assert sdbm('another_key') == 1431368422081132731475424722844769731

    def test_lose_lose(self):
        assert lose_lose('test_key') == 872
        assert lose_lose('another_key') == 1177