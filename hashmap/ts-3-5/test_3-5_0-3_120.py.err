import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from hash_map import HashMap, djb2, sdbm, lose_lose

# Test cases for HashMap class
class TestHashMap:
    def test_insert(self):
        hm = HashMap()
        hm.insert('key1', 'value1')
        assert hm.get('key1') == 'value1'

    def test_get(self):
        hm = HashMap()
        hm.insert('key1', 'value1')
        assert hm.get('key1') == 'value1'

    def test_delete(self):
        hm = HashMap()
        hm.insert('key1', 'value1')
        assert hm.delete('key1') == ('key1', 'value1')

# Test cases for hash functions
class TestHashFunctions:
    def test_djb2(self):
        assert djb2('test') == 2090770982

    def test_sdbm(self):
        assert sdbm('test') == 2090770982

    def test_lose_lose(self):
        assert lose_lose('test') == 448

    def test_hash_collision(self):
        hm = HashMap()
        hm.insert('key1', 'value1')
        hm.insert('key2', 'value2')
        assert hm.get('key1') == 'value1'
        assert hm.get('key2') == 'value2'

    def test_key_not_found(self):
        hm = HashMap()
        with pytest.raises(KeyError):
            hm.get('non_existent_key')

    def test_delete_non_existent_key(self):
        hm = HashMap()
        with pytest.raises(KeyError):
            hm.delete('non_existent_key')