import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from hash_map import HashMap, djb2, sdbm, lose_lose

@pytest.fixture
def hashmap():
    return HashMap()

@pytest.fixture
def custom_hashmap():
    return HashMap(buckets=64, hash_function=djb2)

def test_insert(hashmap):
    hashmap.insert('test_key', 'test_value')
    assert hashmap.get('test_key') == 'test_value'

    hashmap.insert('test_key', 'new_value')
    assert hashmap.get('test_key') == 'new_value'

def test_get(hashmap):
    hashmap.insert('existing_key', 'existing_value')
    assert hashmap.get('existing_key') == 'existing_value'

    with pytest.raises(KeyError):
        hashmap.get('non_existing_key')

def test_delete(hashmap):
    hashmap.insert('delete_key', 'delete_value')
    deleted_value = hashmap.delete('delete_key')
    assert deleted_value == ('delete_key', 'delete_value')
    with pytest.raises(KeyError):
        hashmap.get('delete_key')

def test_custom_hash_function(custom_hashmap):
    custom_hashmap.insert('test_key', 'test_value')
    assert custom_hashmap.get('test_key') == 'test_value'

def test_djb2_hash_function():
    assert djb2('test') == 6385723493

def test_sdbm_hash_function():
    assert sdbm('test') == 32745785343201586

def test_lose_lose_hash_function():
    assert lose_lose('test') == 448