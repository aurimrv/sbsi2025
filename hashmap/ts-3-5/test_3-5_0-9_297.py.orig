import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from hash_map import HashMap, djb2, sdbm, lose_lose

@pytest.fixture
def hashmap():
    return HashMap()

def test_insert(hashmap):
    # Test inserting a key-value pair
    hashmap.insert('key1', 'value1')
    assert hashmap.get('key1') == 'value1'

    # Test overriding a value for an existing key
    hashmap.insert('key1', 'value2')
    assert hashmap.get('key1') == 'value2'

def test_get(hashmap):
    # Test getting a value for an existing key
    hashmap.insert('key1', 'value1')
    assert hashmap.get('key1') == 'value1'

    # Test getting a value for a non-existing key
    with pytest.raises(KeyError):
        hashmap.get('non_existing_key')

def test_delete(hashmap):
    # Test deleting a key and getting its value
    hashmap.insert('key1', 'value1')
    deleted_value = hashmap.delete('key1')
    assert deleted_value == ('key1', 'value1')

    # Test deleting a non-existing key
    with pytest.raises(KeyError):
        hashmap.delete('non_existing_key')

def test_djb2_hash_function():
    # Test the djb2 hash function
    assert djb2('key1') == 1208401018

def test_sdbm_hash_function():
    # Test the sdbm hash function
    assert sdbm('key1') == -408849800

def test_lose_lose_hash_function():
    # Test the lose_lose hash function
    assert lose_lose('key1') == 509