import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from linked_list1 import ListNode

import pytest

class TestListNode:

    def test_contains_cycle_no_cycle(self):
        head = ListNode(1)
        assert not head.contains_cycle()

    def test_contains_cycle_cycle_exists(self):
        head = ListNode(1)
        head.next = ListNode(2)
        head.next.next = head
        assert head.contains_cycle()

    def test_get_beginning_of_cycle_exists(self):
        head = ListNode(1)
        head.next = ListNode(2)
        head.next.next = head
        assert head.get_beginning_of_cycle_if_exists() == head

    def test_get_beginning_of_cycle_no_cycle(self):
        head = ListNode(1)
        head.next = ListNode(2)
        head.next.next = ListNode(3)
        assert head.get_beginning_of_cycle_if_exists() is None

    def test_reverse(self):
        head = ListNode(1)
        head.next = ListNode(2)
        new_head = head.reverse()
        assert new_head.val == 2
        assert new_head.next.val == 1
        assert new_head.next.next is None

    def test_reverse_recursive(self):
        head = ListNode(1)
        head.next = ListNode(2)
        head.next.next = ListNode(3)
        new_head = head.reverse_recursive()
        assert new_head.val == 3
        assert new_head.next.val == 2
        assert new_head.next.next.val == 1
        assert new_head.next.next.next is None