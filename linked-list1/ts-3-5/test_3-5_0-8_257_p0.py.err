import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from linked_list1 import ListNode

@pytest.fixture
def example_linked_list():
    n1 = ListNode(1)
    n2 = ListNode(2)
    n3 = ListNode(3)
    n1.next = n2
    n2.next = n3
    n3.next = n1  # creating a cycle
    return n1

def test_contains_cycle(example_linked_list):
    assert example_linked_list.contains_cycle() == True

def test_get_beginning_of_cycle_if_exists(example_linked_list):
    assert example_linked_list.get_beginning_of_cycle_if_exists().val == 1

def test_reverse(example_linked_list):
    reversed_list = example_linked_list.reverse()
    assert reversed_list.val == 3
    assert reversed_list.next.val == 2
    assert reversed_list.next.next.val == 1

def test_reverse_recursive(example_linked_list):
    reversed_list = example_linked_list.reverse_recursive()
    assert reversed_list.val == 3
    assert reversed_list.next.val == 2
    assert reversed_list.next.next.val == 1