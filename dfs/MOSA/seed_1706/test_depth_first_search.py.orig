# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import depth_first_search as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "aqELL5X>"
    module_0.depth_first_search(str_0, str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.depth_first_search(tuple_0, tuple_0, tuple_0)
    str_0 = 'B@"wJ'
    module_0.depth_first_search(str_0, str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 2627
    module_0.depth_first_search(int_0, int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    tuple_1 = (tuple_0, bool_0)
    module_0.depth_first_search(tuple_1, tuple_0, tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    tuple_1 = (tuple_0, bool_0)
    var_0 = module_0.depth_first_search(tuple_1, tuple_0, bool_0)
    module_0.depth_first_search(tuple_1, tuple_0, tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    tuple_1 = ()
    str_0 = "I"
    var_0 = module_0.depth_first_search(str_0, tuple_0, tuple_1)
    var_1 = module_0.depth_first_search(tuple_1, tuple_1, tuple_1)
    module_0.depth_first_search(var_1, bool_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    tuple_1 = (tuple_0, bool_0)
    var_0 = module_0.depth_first_search(tuple_1, tuple_0, bool_0)
    str_0 = "nKtKU\x0c(K_"
    var_1 = module_0.depth_first_search(str_0, tuple_0, tuple_1)
    module_0.depth_first_search(tuple_1, tuple_0, tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = False
    tuple_0 = (bool_0, bool_0, bool_0)
    tuple_1 = (tuple_0, bool_0)
    list_0 = [tuple_1, tuple_0]
    var_0 = module_0.depth_first_search(list_0, tuple_0, bool_0)
    var_1 = module_0.depth_first_search(tuple_1, tuple_0, bool_0)
    module_0.depth_first_search(tuple_1, tuple_0, tuple_1)
