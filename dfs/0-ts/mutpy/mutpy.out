[34m[*][0m Start mutation process:
[36m   -[0m targets: depth_first_search.py
[36m   -[0m tests: ./0-ts
[34m[*][0m 5 tests passed:
[36m   -[0m test_2d_dfs [0.17069 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] AOR depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] + 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.12434 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_complex

self = <test_2d_dfs.TestDFS object at 0x7efc48e23d60>

    def test_dfs_complex(self):
>       assert depth_first_search(self.make_complex_grid(), (7, 4), 111) == (7, 0)
E       AssertionError

0-ts/test_2d_dfs.py:29: AssertionError
[36m   -[0m [#   2] AOR depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[0] + 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.11964 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48daf3d0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#   3] AOR depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] - 1, current[1]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.12824 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_find_farther_first

self = <test_2d_dfs.TestDFS object at 0x7efc48df6fb0>

    def test_find_farther_first(self):
>       assert depth_first_search(self.make_simple_grid(), (0, 2), 3) == (3, 2)
E       AssertionError

0-ts/test_2d_dfs.py:26: AssertionError
[36m   -[0m [#   4] AOR depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] - 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.09786 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48df4ac0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#   5] AOR depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] > width + 1 or coor[1] < 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.09837 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48df5600>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: list index out of range

depth_first_search:35: IndexError
[36m   -[0m [#   6] AOR depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height + 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.09752 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48df7790>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: list index out of range

depth_first_search:35: IndexError
[36m   -[0m [#   7] BCR depth_first_search: 
--------------------------------------------------------------------------------
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
[34m- 34:                 continue[0m
[32m+ 34:                 break[0m
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
  38:             elif coor not in visited:
--------------------------------------------------------------------------------
[0.12215 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48dae6e0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#   8] COD depth_first_search: 
--------------------------------------------------------------------------------
   9:     Returns:
  10:         Coordinate of the target. Or None if cannot be found. 
  11:     '''
  12:     height = len(grid)
[34m- 13:     if not height:[0m
[32m+ 13:     if height:[0m
  14:         return None
  15:     width = len(grid[0])
  16:     
  17:     x_start = start[0]
--------------------------------------------------------------------------------
[0.12004 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48e21db0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#   9] COD depth_first_search: 
--------------------------------------------------------------------------------
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
[34m- 38:             elif coor not in visited:[0m
[32m+ 38:             elif coor in visited:[0m
  39:                 stack.append(coor)
  40:                 visited.add(current)
  41:     return None
--------------------------------------------------------------------------------
[0.09833 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48e55690>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  10] COI depth_first_search: 
--------------------------------------------------------------------------------
   9:     Returns:
  10:         Coordinate of the target. Or None if cannot be found. 
  11:     '''
  12:     height = len(grid)
[34m- 13:     if not height:[0m
[32m+ 13:     if not ((not height)):[0m
  14:         return None
  15:     width = len(grid[0])
  16:     
  17:     x_start = start[0]
--------------------------------------------------------------------------------
[0.10664 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48df5de0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  11] COI depth_first_search: 
--------------------------------------------------------------------------------
  17:     x_start = start[0]
  18:     y_start = start[1]
  19:     
  20:     
[34m- 21:     if grid[y_start][x_start] == target:[0m
[32m+ 21:     if not (grid[y_start][x_start] == target):[0m
  22:         return (x_start, y_start)
  23:     
  24:     visited = set()
  25:     
--------------------------------------------------------------------------------
[0.13274 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48df6aa0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  12] COI depth_first_search: 
--------------------------------------------------------------------------------
  25:     
  26:     stack = [(x_start, y_start)]
  27:     visited.add((x_start, y_start))
  28:     
[34m- 29:     while stack:[0m
[32m+ 29:     while not stack:[0m
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
--------------------------------------------------------------------------------
[0.13023 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48d33430>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  13] COI depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if not ((coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1)):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.13162 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48e54310>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: list index out of range

depth_first_search:35: IndexError
[36m   -[0m [#  14] COI depth_first_search: 
--------------------------------------------------------------------------------
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
[34m- 35:             if grid[coor[1]][coor[0]] == target:[0m
[32m+ 35:             if not (grid[coor[1]][coor[0]] == target):[0m
  36:                 return coor
  37:             
  38:             elif coor not in visited:
  39:                 stack.append(coor)
--------------------------------------------------------------------------------
[0.12851 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48daf580>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  15] COI depth_first_search: 
--------------------------------------------------------------------------------
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
[34m- 38:             elif coor not in visited:[0m
[32m+ 38:             elif not (coor not in visited):[0m
  39:                 stack.append(coor)
  40:                 visited.add(current)
  41:     return None
--------------------------------------------------------------------------------
[0.12591 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48df40a0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  16] CRP depth_first_search: 
--------------------------------------------------------------------------------
  11:     '''
  12:     height = len(grid)
  13:     if not height:
  14:         return None
[34m- 15:     width = len(grid[0])[0m
[32m+ 15:     width = len(grid[1])[0m
  16:     
  17:     x_start = start[0]
  18:     y_start = start[1]
  19:     
--------------------------------------------------------------------------------
[0.11503 s] [31msurvived[0m
[36m   -[0m [#  17] CRP depth_first_search: 
--------------------------------------------------------------------------------
  13:     if not height:
  14:         return None
  15:     width = len(grid[0])
  16:     
[34m- 17:     x_start = start[0][0m
[32m+ 17:     x_start = start[1][0m
  18:     y_start = start[1]
  19:     
  20:     
  21:     if grid[y_start][x_start] == target:
--------------------------------------------------------------------------------
[0.12647 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48e20d60>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  18] CRP depth_first_search: 
--------------------------------------------------------------------------------
  14:         return None
  15:     width = len(grid[0])
  16:     
  17:     x_start = start[0]
[34m- 18:     y_start = start[1][0m
[32m+ 18:     y_start = start[2][0m
  19:     
  20:     
  21:     if grid[y_start][x_start] == target:
  22:         return (x_start, y_start)
--------------------------------------------------------------------------------
[0.12769 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48b99c00>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: tuple index out of range

depth_first_search:18: IndexError
[36m   -[0m [#  19] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[1], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.12570 s] [31msurvived[0m
[36m   -[0m [#  20] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[2] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.14372 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48be87f0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: tuple index out of range

depth_first_search:32: IndexError
[36m   -[0m [#  21] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 2), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.13911 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_find_farther_first

self = <test_2d_dfs.TestDFS object at 0x7efc48d07e20>

    def test_find_farther_first(self):
>       assert depth_first_search(self.make_simple_grid(), (0, 2), 3) == (3, 2)
E       AssertionError

0-ts/test_2d_dfs.py:26: AssertionError
[36m   -[0m [#  22] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[1] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.08063 s] [31msurvived[0m
[36m   -[0m [#  23] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[0] - 2, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.08768 s] [31msurvived[0m
[36m   -[0m [#  24] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[2]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.12118 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48e57070>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: tuple index out of range

depth_first_search:32: IndexError
[36m   -[0m [#  25] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[1] + 1, current[1]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.10056 s] [31msurvived[0m
[36m   -[0m [#  26] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 2, current[1]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.09780 s] [31msurvived[0m
[36m   -[0m [#  27] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[2]), (current[0], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.12772 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48cd7790>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: tuple index out of range

depth_first_search:32: IndexError
[36m   -[0m [#  28] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[1], current[1] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.08179 s] [31msurvived[0m
[36m   -[0m [#  29] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[2] + 1)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.12184 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48e23af0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: tuple index out of range

depth_first_search:32: IndexError
[36m   -[0m [#  30] CRP depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 2)]:[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.10259 s] [31msurvived[0m
[36m   -[0m [#  31] CRP depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[1] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.12254 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_find_farther_first

self = <test_2d_dfs.TestDFS object at 0x7efc48d050c0>

    def test_find_farther_first(self):
>       assert depth_first_search(self.make_simple_grid(), (0, 2), 3) == (3, 2)
E       AssertionError

0-ts/test_2d_dfs.py:26: AssertionError
[36m   -[0m [#  32] CRP depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 1 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.10785 s] [31msurvived[0m
[36m   -[0m [#  33] CRP depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[1] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.09970 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48e23040>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: list index out of range

depth_first_search:35: IndexError
[36m   -[0m [#  34] CRP depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] > width - 2 or coor[1] < 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.12279 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_find_farther_first

self = <test_2d_dfs.TestDFS object at 0x7efc48daf4f0>

    def test_find_farther_first(self):
>       assert depth_first_search(self.make_simple_grid(), (0, 2), 3) == (3, 2)
E       AssertionError

0-ts/test_2d_dfs.py:26: AssertionError
[36m   -[0m [#  35] CRP depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[2] < 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.12246 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48cd7be0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: tuple index out of range

depth_first_search:33: IndexError
[36m   -[0m [#  36] CRP depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 1 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.11936 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_complex

self = <test_2d_dfs.TestDFS object at 0x7efc48ab37f0>

    def test_dfs_complex(self):
>       assert depth_first_search(self.make_complex_grid(), (7, 4), 111) == (7, 0)
E       AssertionError

0-ts/test_2d_dfs.py:29: AssertionError
[36m   -[0m [#  37] CRP depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[2] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.12788 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48df55a0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: tuple index out of range

depth_first_search:33: IndexError
[36m   -[0m [#  38] CRP depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 2):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.12965 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48ab3be0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  39] CRP depth_first_search: 
--------------------------------------------------------------------------------
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
[34m- 35:             if grid[coor[1]][coor[0]] == target:[0m
[32m+ 35:             if grid[coor[2]][coor[0]] == target:[0m
  36:                 return coor
  37:             
  38:             elif coor not in visited:
  39:                 stack.append(coor)
--------------------------------------------------------------------------------
[0.12813 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48b7ca90>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: tuple index out of range

depth_first_search:35: IndexError
[36m   -[0m [#  40] CRP depth_first_search: 
--------------------------------------------------------------------------------
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
[34m- 35:             if grid[coor[1]][coor[0]] == target:[0m
[32m+ 35:             if grid[coor[1]][coor[1]] == target:[0m
  36:                 return coor
  37:             
  38:             elif coor not in visited:
  39:                 stack.append(coor)
--------------------------------------------------------------------------------
[0.12319 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48d6b910>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  41] LCR depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 and coor[0] > width - 1 and coor[1] < 0 and coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.14937 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48df6680>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: list index out of range

depth_first_search:35: IndexError
[36m   -[0m [#  42] OIL depth_first_search: 
--------------------------------------------------------------------------------
  36:                 return coor
  37:             
  38:             elif coor not in visited:
  39:                 stack.append(coor)
[34m- 40:                 visited.add(current)[0m
[32m+ 40:                 visited.add(current)break[0m
  41:     return None
--------------------------------------------------------------------------------
[0.15349 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48bc3820>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  43] OIL depth_first_search: 
--------------------------------------------------------------------------------
  36:                 return coor
  37:             
  38:             elif coor not in visited:
  39:                 stack.append(coor)
[34m- 40:                 visited.add(current)[0m
[32m+ 40:                 visited.add(current)break[0m
  41:     return None
--------------------------------------------------------------------------------
[0.12755 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48c19ab0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  44] RIL depth_first_search: 
--------------------------------------------------------------------------------
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[32m+ 32:         for coor in reversed([(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]):[0m
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
--------------------------------------------------------------------------------
[0.12983 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48d76050>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  45] ROR depth_first_search: 
--------------------------------------------------------------------------------
  17:     x_start = start[0]
  18:     y_start = start[1]
  19:     
  20:     
[34m- 21:     if grid[y_start][x_start] == target:[0m
[32m+ 21:     if grid[y_start][x_start] != target:[0m
  22:         return (x_start, y_start)
  23:     
  24:     visited = set()
  25:     
--------------------------------------------------------------------------------
[0.10103 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48c1af20>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  46] ROR depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] > 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.09969 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48d757b0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  47] ROR depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] <= 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.08406 s] [31msurvived[0m
[36m   -[0m [#  48] ROR depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] < width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.12578 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48dacd00>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   IndexError: list index out of range

depth_first_search:35: IndexError
[36m   -[0m [#  49] ROR depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] >= width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.12203 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_find_farther_first

self = <test_2d_dfs.TestDFS object at 0x7efc48df5660>

    def test_find_farther_first(self):
>       assert depth_first_search(self.make_simple_grid(), (0, 2), 3) == (3, 2)
E       AssertionError

0-ts/test_2d_dfs.py:26: AssertionError
[36m   -[0m [#  50] ROR depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] > 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.12045 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48e22410>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  51] ROR depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] <= 0 or coor[1] > height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.12567 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_complex

self = <test_2d_dfs.TestDFS object at 0x7efc48d6aaa0>

    def test_dfs_complex(self):
>       assert depth_first_search(self.make_complex_grid(), (7, 4), 111) == (7, 0)
E       AssertionError

0-ts/test_2d_dfs.py:29: AssertionError
[36m   -[0m [#  52] ROR depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] < height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.10119 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48df5e10>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  53] ROR depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[32m+ 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] >= height - 1):[0m
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
--------------------------------------------------------------------------------
[0.10314 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48c1b580>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  54] ROR depth_first_search: 
--------------------------------------------------------------------------------
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
[34m- 35:             if grid[coor[1]][coor[0]] == target:[0m
[32m+ 35:             if grid[coor[1]][coor[0]] != target:[0m
  36:                 return coor
  37:             
  38:             elif coor not in visited:
  39:                 stack.append(coor)
--------------------------------------------------------------------------------
[0.12720 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48d756f0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  55] SDL depth_first_search: 
--------------------------------------------------------------------------------
   8:         target: the target value to find in the grid
   9:     Returns:
  10:         Coordinate of the target. Or None if cannot be found. 
  11:     '''
[34m- 12:     height = len(grid)[0m
[32m+ 12:     pass[0m
  13:     if not height:
  14:         return None
  15:     width = len(grid[0])
  16:     
--------------------------------------------------------------------------------
[0.12791 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48ab0b20>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   NameError: name 'height' is not defined

depth_first_search:13: NameError
[36m   -[0m [#  56] SDL depth_first_search: 
--------------------------------------------------------------------------------
  10:         Coordinate of the target. Or None if cannot be found. 
  11:     '''
  12:     height = len(grid)
  13:     if not height:
[34m- 14:         return None[0m
[32m+ 14:         pass[0m
  15:     width = len(grid[0])
  16:     
  17:     x_start = start[0]
  18:     y_start = start[1]
--------------------------------------------------------------------------------
[0.13329 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_empty

self = <test_2d_dfs.TestDFS object at 0x7efc48b7f430>

    def test_dfs_empty(self):
>       assert depth_first_search([], (0, 1), 0) is None

0-ts/test_2d_dfs.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [], start = (0, 1), target = 0

>   ???
E   IndexError: list index out of range

depth_first_search:15: IndexError
[36m   -[0m [#  57] SDL depth_first_search: 
--------------------------------------------------------------------------------
  11:     '''
  12:     height = len(grid)
  13:     if not height:
  14:         return None
[34m- 15:     width = len(grid[0])[0m
[32m+ 15:     pass[0m
  16:     
  17:     x_start = start[0]
  18:     y_start = start[1]
  19:     
--------------------------------------------------------------------------------
[0.10337 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48b7c1f0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   NameError: name 'width' is not defined

depth_first_search:33: NameError
[36m   -[0m [#  58] SDL depth_first_search: 
--------------------------------------------------------------------------------
  13:     if not height:
  14:         return None
  15:     width = len(grid[0])
  16:     
[34m- 17:     x_start = start[0][0m
[32m+ 17:     pass[0m
  18:     y_start = start[1]
  19:     
  20:     
  21:     if grid[y_start][x_start] == target:
--------------------------------------------------------------------------------
[0.13116 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48c6bd90>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   NameError: name 'x_start' is not defined

depth_first_search:21: NameError
[36m   -[0m [#  59] SDL depth_first_search: 
--------------------------------------------------------------------------------
  14:         return None
  15:     width = len(grid[0])
  16:     
  17:     x_start = start[0]
[34m- 18:     y_start = start[1][0m
[32m+ 18:     pass[0m
  19:     
  20:     
  21:     if grid[y_start][x_start] == target:
  22:         return (x_start, y_start)
--------------------------------------------------------------------------------
[0.10359 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48d681f0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   NameError: name 'y_start' is not defined

depth_first_search:21: NameError
[36m   -[0m [#  60] SDL depth_first_search: 
--------------------------------------------------------------------------------
  18:     y_start = start[1]
  19:     
  20:     
  21:     if grid[y_start][x_start] == target:
[34m- 22:         return (x_start, y_start)[0m
[32m+ 22:         pass[0m
  23:     
  24:     visited = set()
  25:     
  26:     stack = [(x_start, y_start)]
--------------------------------------------------------------------------------
[0.13062 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_complex

self = <test_2d_dfs.TestDFS object at 0x7efc48c5b2e0>

    def test_dfs_complex(self):
        assert depth_first_search(self.make_complex_grid(), (7, 4), 111) == (7, 0)
>       assert depth_first_search(self.make_complex_grid(), (0, 4), 8) == (0, 4)
E       AssertionError

0-ts/test_2d_dfs.py:30: AssertionError
[36m   -[0m [#  61] SDL depth_first_search: 
--------------------------------------------------------------------------------
  20:     
  21:     if grid[y_start][x_start] == target:
  22:         return (x_start, y_start)
  23:     
[34m- 24:     visited = set()[0m
[32m+ 24:     pass[0m
  25:     
  26:     stack = [(x_start, y_start)]
  27:     visited.add((x_start, y_start))
  28:     
--------------------------------------------------------------------------------
[0.14625 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48b8ef50>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   NameError: name 'visited' is not defined

depth_first_search:27: NameError
[36m   -[0m [#  62] SDL depth_first_search: 
--------------------------------------------------------------------------------
  22:         return (x_start, y_start)
  23:     
  24:     visited = set()
  25:     
[34m- 26:     stack = [(x_start, y_start)][0m
[32m+ 26:     pass[0m
  27:     visited.add((x_start, y_start))
  28:     
  29:     while stack:
  30:         current = stack.pop()
--------------------------------------------------------------------------------
[0.15384 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48babdf0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   NameError: name 'stack' is not defined

depth_first_search:29: NameError
[36m   -[0m [#  63] SDL depth_first_search: 
--------------------------------------------------------------------------------
  23:     
  24:     visited = set()
  25:     
  26:     stack = [(x_start, y_start)]
[34m- 27:     visited.add((x_start, y_start))[0m
[32m+ 27:     pass[0m
  28:     
  29:     while stack:
  30:         current = stack.pop()
  31:         
--------------------------------------------------------------------------------
[0.12106 s] [31msurvived[0m
[36m   -[0m [#  64] SDL depth_first_search: 
--------------------------------------------------------------------------------
  26:     stack = [(x_start, y_start)]
  27:     visited.add((x_start, y_start))
  28:     
  29:     while stack:
[34m- 30:         current = stack.pop()[0m
[32m+ 30:         pass[0m
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
--------------------------------------------------------------------------------
[0.12098 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48c694b0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)

0-ts/test_2d_dfs.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

grid = [[1, 0, 3, 4], [5, 6, 2, 6], [8, 8, 1, 3]], start = (3, 0), target = 8

>   ???
E   NameError: name 'current' is not defined

depth_first_search:32: NameError
[36m   -[0m [#  65] SDL depth_first_search: 
--------------------------------------------------------------------------------
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
  33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):
  34:                 continue
  35:             if grid[coor[1]][coor[0]] == target:
[34m- 36:                 return coor[0m
[32m+ 36:                 pass[0m
  37:             
  38:             elif coor not in visited:
  39:                 stack.append(coor)
  40:                 visited.add(current)
--------------------------------------------------------------------------------
[0.13029 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48bd9120>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  66] SDL depth_first_search: 
--------------------------------------------------------------------------------
  35:             if grid[coor[1]][coor[0]] == target:
  36:                 return coor
  37:             
  38:             elif coor not in visited:
[34m- 39:                 stack.append(coor)[0m
[32m+ 39:                 pass[0m
  40:                 visited.add(current)
  41:     return None
--------------------------------------------------------------------------------
[0.11211 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48d06bc0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  67] SDL depth_first_search: 
--------------------------------------------------------------------------------
  36:                 return coor
  37:             
  38:             elif coor not in visited:
  39:                 stack.append(coor)
[34m- 40:                 visited.add(current)[0m
[32m+ 40:                 pass[0m
  41:     return None
--------------------------------------------------------------------------------
[5.00780 s] [33mtimeout[0m
[36m   -[0m [#  68] SDL depth_first_search: 
--------------------------------------------------------------------------------
  37:             
  38:             elif coor not in visited:
  39:                 stack.append(coor)
  40:                 visited.add(current)
[34m- 41:     return None[0m
[32m+ 41:     pass[0m
--------------------------------------------------------------------------------
[0.08037 s] [31msurvived[0m
[36m   -[0m [#  69] ZIL depth_first_search: 
--------------------------------------------------------------------------------
  26:     stack = [(x_start, y_start)]
  27:     visited.add((x_start, y_start))
  28:     
  29:     while stack:
[34m- 30:         current = stack.pop()[0m
[34m- 31:         [0m
[34m- 32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:[0m
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[34m- 34:                 continue[0m
[34m- 35:             if grid[coor[1]][coor[0]] == target:[0m
[34m- 36:                 return coor[0m
[34m- 37:             [0m
[34m- 38:             elif coor not in visited:[0m
[34m- 39:                 stack.append(coor)[0m
[34m- 40:                 visited.add(current)[0m
[32m+ 30:         break[0m
[32m+ 31:     [0m
[32m+ 32:     [0m
[32m+ 33:     [0m
[32m+ 34:     [0m
[32m+ 35:     [0m
[32m+ 36:     [0m
[32m+ 37:     [0m
[32m+ 38:     [0m
[32m+ 39:     [0m
[32m+ 40:     [0m
  41:     return None
--------------------------------------------------------------------------------
[0.12949 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48df5780>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[36m   -[0m [#  70] ZIL depth_first_search: 
--------------------------------------------------------------------------------
  29:     while stack:
  30:         current = stack.pop()
  31:         
  32:         for coor in [(current[0], current[1] - 1), (current[0] - 1, current[1]), (current[0] + 1, current[1]), (current[0], current[1] + 1)]:
[34m- 33:             if (coor[0] < 0 or coor[0] > width - 1 or coor[1] < 0 or coor[1] > height - 1):[0m
[34m- 34:                 continue[0m
[34m- 35:             if grid[coor[1]][coor[0]] == target:[0m
[34m- 36:                 return coor[0m
[34m- 37:             [0m
[34m- 38:             elif coor not in visited:[0m
[34m- 39:                 stack.append(coor)[0m
[34m- 40:                 visited.add(current)[0m
[32m+ 33:             break[0m
[32m+ 34:     [0m
[32m+ 35:     [0m
[32m+ 36:     [0m
[32m+ 37:     [0m
[32m+ 38:     [0m
[32m+ 39:     [0m
[32m+ 40:     [0m
  41:     return None
--------------------------------------------------------------------------------
[0.12749 s] [32mkilled[0m by 0-ts/test_2d_dfs.py::TestDFS::test_dfs_basic

self = <test_2d_dfs.TestDFS object at 0x7efc48d076d0>

    def test_dfs_basic(self):
>       assert depth_first_search(self.make_simple_grid(), (3, 0), 8) == (1, 2)
E       AssertionError

0-ts/test_2d_dfs.py:23: AssertionError
[34m[*][0m Mutation score [17.07731 s]: [1m[34m82.9%[0m
[36m   -[0m all: 70
[36m   -[0m killed: 57 (81.4%)
[36m   -[0m survived: 12 (17.1%)
[36m   -[0m incompetent: 0 (0.0%)
[36m   -[0m timeout: 1 (1.4%)
