import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binary_search_tree import BinarySearchTree

import pytest

@pytest.fixture
def create_tree():
    tree = BinarySearchTree()
    tree.insert(5)
    tree.insert(3)
    tree.insert(7)
    tree.insert(2)
    tree.insert(4)
    tree.insert(6)
    tree.insert(8)
    return tree

def test_insert(create_tree):
    assert create_tree.search(5) is not None
    assert create_tree.search(3) is not None
    assert create_tree.search(7) is not None
    assert create_tree.search(2) is not None
    assert create_tree.search(4) is not None
    assert create_tree.search(6) is not None
    assert create_tree.search(8) is not None

def test_min(create_tree):
    assert create_tree.min() == 2

def test_delete(create_tree):
    create_tree.delete(3)
    assert create_tree.search(3) is None

def test_search(create_tree):
    assert create_tree.search(6) is not None
    assert create_tree.search(9) is None

def test_in_order_traversal(create_tree):
    assert create_tree.in_order_traversal() == [2, 3, 4, 5, 6, 7, 8]

def test_merge(create_tree):
    tree_to_merge = BinarySearchTree()
    tree_to_merge.insert(10)
    tree_to_merge.insert(9)
    tree_to_merge.insert(11)
    create_tree.merge(tree_to_merge)
    assert create_tree.search(10) is not None
    assert create_tree.search(9) is not None
    assert create_tree.search(11) is not None