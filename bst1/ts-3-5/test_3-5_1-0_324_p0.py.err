import sys
import os

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binary_search_tree import BinarySearchTree

import pytest

@pytest.fixture
def bst():
    return BinarySearchTree()

def test_insert(bst):
    bst.insert(10)
    assert bst.head.value == 10

def test_min(bst):
    bst.insert(5)
    bst.insert(3)
    bst.insert(8)
    bst.insert(15)
    assert bst.min() == 3

def test_delete(bst):
    bst.insert(5)
    bst.insert(3)
    bst.insert(8)
    bst.insert(15)
    bst.delete(5)
    assert bst.search(5) is None

def test_search(bst):
    bst.insert(5)
    bst.insert(3)
    bst.insert(8)
    bst.insert(15)
    assert bst.search(8).value == 8
    assert bst.search(20) is None

def test_in_order_traversal(bst):
    bst.insert(5)
    bst.insert(3)
    bst.insert(8)
    bst.insert(15)
    assert bst.in_order_traversal() == [3, 5, 8, 15]

def test_merge(bst):
    bst.insert(5)
    bst.insert(3)
    bst.insert(8)

    tree_to_merge = BinarySearchTree()
    tree_to_merge.insert(10)
    tree_to_merge.insert(6)
    tree_to_merge.insert(15)

    bst.merge(tree_to_merge)

    assert bst.in_order_traversal() == [3, 5, 6, 8, 10, 15]