import os
import sys
from binary_search_tree import BinarySearchTree

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

import pytest

@pytest.fixture
def create_binary_search_tree():
    bst = BinarySearchTree()
    bst.insert(10)
    bst.insert(5)
    bst.insert(15)
    bst.insert(3)
    bst.insert(7)
    bst.insert(12)
    bst.insert(17)
    return bst

def test_insert(create_binary_search_tree):
    assert create_binary_search_tree.search(10) is not None
    assert create_binary_search_tree.search(3) is not None
    assert create_binary_search_tree.search(15) is not None

def test_min(create_binary_search_tree):
    assert create_binary_search_tree.min() == 3

def test_delete(create_binary_search_tree):
    create_binary_search_tree.delete(5)
    assert create_binary_search_tree.search(5) is None

def test_search(create_binary_search_tree):
    assert create_binary_search_tree.search(7) is not None
    assert create_binary_search_tree.search(100) is None

def test_in_order_traversal(create_binary_search_tree):
    assert create_binary_search_tree.in_order_traversal() == [3, 5, 7, 10, 12, 15, 17]

def test_merge(create_binary_search_tree):
    other_bst = BinarySearchTree()
    other_bst.insert(20)
    other_bst.insert(25)
    create_binary_search_tree.merge(other_bst)
    assert create_binary_search_tree.search(25) is not None
    assert create_binary_search_tree.search(20) is not None