import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binary_search_tree import BinarySearchTree

import pytest
from tree_node import BinaryTreeNode

@pytest.fixture
def sample_tree():
    tree = BinarySearchTree()
    for val in [8, 3, 10, 1, 6, 14, 4, 7, 13]:
        tree.insert(val)
    return tree

def test_insert(sample_tree):
    assert sample_tree.in_order_traversal() == [1, 3, 4, 6, 7, 8, 10, 13, 14]

def test_min(sample_tree):
    assert sample_tree.min() == 1

def test_delete(sample_tree):
    sample_tree.delete(6)
    assert sample_tree.in_order_traversal() == [1, 3, 4, 7, 8, 10, 13, 14]

def test_search(sample_tree):
    assert sample_tree.search(7).value == 7

def test_in_order_traversal(sample_tree):
    assert sample_tree.in_order_traversal() == [1, 3, 4, 6, 7, 8, 10, 13, 14]

def test_merge(sample_tree):
    tree2 = BinarySearchTree()
    for val in [15, 11, 17]:
        tree2.insert(val)
    
    sample_tree.merge(tree2)
    assert sample_tree.in_order_traversal() == [1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17]