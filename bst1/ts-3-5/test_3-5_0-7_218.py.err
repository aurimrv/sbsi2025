import os
import sys
import pytest

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binary_search_tree import BinarySearchTree

@pytest.fixture
def filled_bst():
    bst = BinarySearchTree()
    bst.insert(5)
    bst.insert(3)
    bst.insert(7)
    bst.insert(2)
    bst.insert(4)
    bst.insert(6)
    bst.insert(8)
    return bst

def test_insert(filled_bst):
    assert filled_bst.search(5) is not None
    assert filled_bst.search(3) is not None
    assert filled_bst.search(7) is not None

def test_min(filled_bst):
    assert filled_bst.min() == 2

def test_delete(filled_bst):
    filled_bst.delete(3)
    assert filled_bst.search(3) is None
    assert filled_bst.search(4) is not None

def test_search(filled_bst):
    assert filled_bst.search(7) is not None
    assert filled_bst.search(10) is None

def test_in_order_traversal(filled_bst):
    traversal = filled_bst.in_order_traversal()
    assert traversal == [2, 3, 4, 5, 6, 7, 8]

def test_merge(filled_bst):
    other_tree = BinarySearchTree()
    other_tree.insert(9)
    other_tree.insert(10)
    filled_bst.merge(other_tree)
    assert filled_bst.search(9) is not None
    assert filled_bst.search(10) is not None