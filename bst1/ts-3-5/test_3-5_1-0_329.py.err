import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binary_search_tree import BinarySearchTree, BinaryTreeNode

import pytest

@pytest.fixture
def create_sample_tree():
    sample_tree = BinarySearchTree()
    sample_tree.insert(5)
    sample_tree.insert(3)
    sample_tree.insert(7)
    sample_tree.insert(2)

    return sample_tree

def test_insert(create_sample_tree):
    assert create_sample_tree.search(2).value == 2
    assert create_sample_tree.search(5).value == 5
    assert create_sample_tree.search(7).value == 7

def test_min(create_sample_tree):
    assert create_sample_tree.min() == 2

def test_delete(create_sample_tree):
    create_sample_tree.delete(5)
    assert create_sample_tree.search(5) is None

def test_search(create_sample_tree):
    assert create_sample_tree.search(3).value == 3
    assert create_sample_tree.search(10) is None

def test_in_order_traversal(create_sample_tree):
    assert create_sample_tree.in_order_traversal() == [2, 3, 5, 7]

def test_merge(create_sample_tree):
    tree2 = BinarySearchTree()
    tree2.insert(1)
    tree2.insert(4)
    create_sample_tree.merge(tree2)
    
    assert create_sample_tree.in_order_traversal() == [1, 2, 3, 4, 5, 7]