[*] Start mutation process:
   - targets: binary_search_tree.py
   - tests: ts-3-5/test_3-5_0-9_275.py
[*] 7 tests passed:
   - test_3-5_0-9_275 [0.24170 s]
[*] Start mutants generation and execution:
   - [#   1] ASR binary_search_tree: 
--------------------------------------------------------------------------------
  57:                 return t2
  58:             if not t2:
  59:                 return t1
  60:             
- 61:             t1.value += t2.value
+ 61:             t1.value -= t2.value
  62:             
  63:             
  64:             t1.left = mergeOntoT1(t1.left, t2.left)
  65:             
--------------------------------------------------------------------------------
[0.22113 s] killed by ts-3-5/test_3-5_0-9_275.py::test_merge

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40363f5b40>

    def test_merge(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
    
        tree_to_merge = BinarySearchTree()
        tree_to_merge.insert(7)
    
        binary_search_tree.merge(tree_to_merge)
    
>       assert binary_search_tree.head.value == 12
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:62: AssertionError
   - [#   2] CDI binary_search_tree: 
--------------------------------------------------------------------------------
   1: from tree_node import BinaryTreeNode
   2: 
   3: class BinarySearchTree:
   4:     
-  5:     def __init__(self):
-  6:         self.head = None
-  7:     
+  5:     @classmethod
+  6:     def __init__(self):
+  7:         self.head = None
   8:     def insert(self, val):
   9:         if not (self.head):
  10:             self.head = BinaryTreeNode(val, None)
  11:             return
--------------------------------------------------------------------------------
[0.20299 s] survived
   - [#   3] CDI binary_search_tree: 
--------------------------------------------------------------------------------
   4:     
   5:     def __init__(self):
   6:         self.head = None
   7:     
-  8:     def insert(self, val):
-  9:         if not (self.head):
- 10:             self.head = BinaryTreeNode(val, None)
- 11:             return
- 12:         def add_node_recursive(node):
- 13:             if val < node.value:
- 14:                 if node.left:
- 15:                     add_node_recursive(node.left)
- 16:                 else:
- 17:                     node.left = BinaryTreeNode(val, node)
- 18:             
- 19:             elif node.right:
- 20:                 add_node_recursive(node.right)
- 21:             else:
- 22:                 node.right = BinaryTreeNode(val, node)
- 23:         add_node_recursive(self.head)
- 24:     
+  8:     @classmethod
+  9:     def insert(self, val):
+ 10:         if not (self.head):
+ 11:             self.head = BinaryTreeNode(val, None)
+ 12:             return
+ 13:         def add_node_recursive(node):
+ 14:             if val < node.value:
+ 15:                 if node.left:
+ 16:                     add_node_recursive(node.left)
+ 17:                 else:
+ 18:                     node.left = BinaryTreeNode(val, node)
+ 19:             
+ 20:             elif node.right:
+ 21:                 add_node_recursive(node.right)
+ 22:             else:
+ 23:                 node.right = BinaryTreeNode(val, node)
+ 24:         add_node_recursive(self.head)
  25:     def min(self):
  26:         return self.head.min().value
  27:     
  28:     def delete(self, value):
--------------------------------------------------------------------------------
[0.21634 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_single_node

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f403641dbd0>

    def test_insert_single_node(binary_search_tree):
>       binary_search_tree.insert(5)

ts-3-5/test_3-5_0-9_275.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'binary_search_tree.BinarySearchTree'>, val = 5

>   ???
E   AttributeError: type object 'BinarySearchTree' has no attribute 'head'

binary_search_tree:10: AttributeError
   - [#   4] CDI binary_search_tree: 
--------------------------------------------------------------------------------
  21:             else:
  22:                 node.right = BinaryTreeNode(val, node)
  23:         add_node_recursive(self.head)
  24:     
- 25:     def min(self):
- 26:         return self.head.min().value
- 27:     
+ 25:     @classmethod
+ 26:     def min(self):
+ 27:         return self.head.min().value
  28:     def delete(self, value):
  29:         self.head.delete(value)
  30:     
  31:     def search(self, value):
--------------------------------------------------------------------------------
[0.21971 s] killed by ts-3-5/test_3-5_0-9_275.py::test_min

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40364db7c0>

    def test_min(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.min() == 3

ts-3-5/test_3-5_0-9_275.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'binary_search_tree.BinarySearchTree'>

>   ???
E   AttributeError: type object 'BinarySearchTree' has no attribute 'head'

binary_search_tree:27: AttributeError
   - [#   5] CDI binary_search_tree: 
--------------------------------------------------------------------------------
  24:     
  25:     def min(self):
  26:         return self.head.min().value
  27:     
- 28:     def delete(self, value):
- 29:         self.head.delete(value)
- 30:     
+ 28:     @classmethod
+ 29:     def delete(self, value):
+ 30:         self.head.delete(value)
  31:     def search(self, value):
  32:         node = self.head
  33:         while node:
  34:             if value == node.value:
--------------------------------------------------------------------------------
[0.21545 s] killed by ts-3-5/test_3-5_0-9_275.py::test_delete

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40363d4400>

    def test_delete(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       binary_search_tree.delete(5)

ts-3-5/test_3-5_0-9_275.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'binary_search_tree.BinarySearchTree'>, value = 5

>   ???
E   AttributeError: type object 'BinarySearchTree' has no attribute 'head'

binary_search_tree:30: AttributeError
   - [#   6] CDI binary_search_tree: 
--------------------------------------------------------------------------------
  27:     
  28:     def delete(self, value):
  29:         self.head.delete(value)
  30:     
- 31:     def search(self, value):
- 32:         node = self.head
- 33:         while node:
- 34:             if value == node.value:
- 35:                 return node
- 36:             if value > node.value:
- 37:                 node = node.right
- 38:             else:
- 39:                 node = node.left
- 40:         
- 41:         return node
- 42:     
+ 31:     @classmethod
+ 32:     def search(self, value):
+ 33:         node = self.head
+ 34:         while node:
+ 35:             if value == node.value:
+ 36:                 return node
+ 37:             if value > node.value:
+ 38:                 node = node.right
+ 39:             else:
+ 40:                 node = node.left
+ 41:         
+ 42:         return node
  43:     def in_order_traversal(self):
  44:         output = []
  45:         def recur(node):
  46:             if node:
--------------------------------------------------------------------------------
[0.22336 s] killed by ts-3-5/test_3-5_0-9_275.py::test_search

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036118eb0>

    def test_search(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.search(3).value == 3

ts-3-5/test_3-5_0-9_275.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'binary_search_tree.BinarySearchTree'>, value = 3

>   ???
E   AttributeError: type object 'BinarySearchTree' has no attribute 'head'

binary_search_tree:33: AttributeError
   - [#   7] CDI binary_search_tree: 
--------------------------------------------------------------------------------
  39:                 node = node.left
  40:         
  41:         return node
  42:     
- 43:     def in_order_traversal(self):
- 44:         output = []
- 45:         def recur(node):
- 46:             if node:
- 47:                 recur(node.left)
- 48:                 output.append(node.value)
- 49:                 recur(node.right)
- 50:         recur(self.head)
- 51:         return output
- 52:     
+ 43:     @classmethod
+ 44:     def in_order_traversal(self):
+ 45:         output = []
+ 46:         def recur(node):
+ 47:             if node:
+ 48:                 recur(node.left)
+ 49:                 output.append(node.value)
+ 50:                 recur(node.right)
+ 51:         recur(self.head)
+ 52:         return output
  53:     def merge(self, tree):
  54:         
  55:         def mergeOntoT1(t1, t2):
  56:             if not t1:
--------------------------------------------------------------------------------
[0.22138 s] killed by ts-3-5/test_3-5_0-9_275.py::test_in_order_traversal

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40363d6980>

    def test_in_order_traversal(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.in_order_traversal() == [3, 5, 7]

ts-3-5/test_3-5_0-9_275.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'binary_search_tree.BinarySearchTree'>

>   ???
E   AttributeError: type object 'BinarySearchTree' has no attribute 'head'

binary_search_tree:51: AttributeError
   - [#   8] CDI binary_search_tree: 
--------------------------------------------------------------------------------
  49:                 recur(node.right)
  50:         recur(self.head)
  51:         return output
  52:     
- 53:     def merge(self, tree):
- 54:         
- 55:         def mergeOntoT1(t1, t2):
- 56:             if not t1:
- 57:                 return t2
- 58:             if not t2:
- 59:                 return t1
- 60:             
- 61:             t1.value += t2.value
- 62:             
+ 53:     @classmethod
+ 54:     def merge(self, tree):
+ 55:         
+ 56:         def mergeOntoT1(t1, t2):
+ 57:             if not t1:
+ 58:                 return t2
+ 59:             if not t2:
+ 60:                 return t1
+ 61:             
+ 62:             t1.value += t2.value
  63:             
- 64:             t1.left = mergeOntoT1(t1.left, t2.left)
- 65:             
+ 64:             
+ 65:             t1.left = mergeOntoT1(t1.left, t2.left)
  66:             
- 67:             t1.right = mergeOntoT1(t1.right, t2.right)
- 68:             
- 69:             return t1
- 70:         
- 71:         mergeOntoT1(self.head, tree.head)
+ 67:             
+ 68:             t1.right = mergeOntoT1(t1.right, t2.right)
+ 69:             
+ 70:             return t1
+ 71:         
+ 72:         mergeOntoT1(self.head, tree.head)
--------------------------------------------------------------------------------
[0.22259 s] killed by ts-3-5/test_3-5_0-9_275.py::test_merge

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036169900>

    def test_merge(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
    
        tree_to_merge = BinarySearchTree()
        tree_to_merge.insert(7)
    
>       binary_search_tree.merge(tree_to_merge)

ts-3-5/test_3-5_0-9_275.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'binary_search_tree.BinarySearchTree'>
tree = <binary_search_tree.BinarySearchTree object at 0x7f403616a7d0>

>   ???
E   AttributeError: type object 'BinarySearchTree' has no attribute 'head'

binary_search_tree:72: AttributeError
   - [#   9] COD binary_search_tree: 
--------------------------------------------------------------------------------
   5:     def __init__(self):
   6:         self.head = None
   7:     
   8:     def insert(self, val):
-  9:         if not (self.head):
+  9:         if self.head:
  10:             self.head = BinaryTreeNode(val, None)
  11:             return
  12:         def add_node_recursive(node):
  13:             if val < node.value:
--------------------------------------------------------------------------------
[0.21735 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_single_node

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036188340>

    def test_insert_single_node(binary_search_tree):
>       binary_search_tree.insert(5)

ts-3-5/test_3-5_0-9_275.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
binary_search_tree:23: in insert
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

node = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

binary_search_tree:13: AttributeError
   - [#  10] COD binary_search_tree: 
--------------------------------------------------------------------------------
  52:     
  53:     def merge(self, tree):
  54:         
  55:         def mergeOntoT1(t1, t2):
- 56:             if not t1:
+ 56:             if t1:
  57:                 return t2
  58:             if not t2:
  59:                 return t1
  60:             
--------------------------------------------------------------------------------
[0.21763 s] killed by ts-3-5/test_3-5_0-9_275.py::test_merge

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40363d57e0>

    def test_merge(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
    
        tree_to_merge = BinarySearchTree()
        tree_to_merge.insert(7)
    
        binary_search_tree.merge(tree_to_merge)
    
>       assert binary_search_tree.head.value == 12
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:62: AssertionError
   - [#  11] COD binary_search_tree: 
--------------------------------------------------------------------------------
  54:         
  55:         def mergeOntoT1(t1, t2):
  56:             if not t1:
  57:                 return t2
- 58:             if not t2:
+ 58:             if t2:
  59:                 return t1
  60:             
  61:             t1.value += t2.value
  62:             
--------------------------------------------------------------------------------
[0.21943 s] killed by ts-3-5/test_3-5_0-9_275.py::test_merge

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036491060>

    def test_merge(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
    
        tree_to_merge = BinarySearchTree()
        tree_to_merge.insert(7)
    
        binary_search_tree.merge(tree_to_merge)
    
>       assert binary_search_tree.head.value == 12
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:62: AssertionError
   - [#  12] COI binary_search_tree: 
--------------------------------------------------------------------------------
   5:     def __init__(self):
   6:         self.head = None
   7:     
   8:     def insert(self, val):
-  9:         if not (self.head):
+  9:         if not ((not (self.head))):
  10:             self.head = BinaryTreeNode(val, None)
  11:             return
  12:         def add_node_recursive(node):
  13:             if val < node.value:
--------------------------------------------------------------------------------
[0.21753 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_single_node

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40361fc730>

    def test_insert_single_node(binary_search_tree):
>       binary_search_tree.insert(5)

ts-3-5/test_3-5_0-9_275.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
binary_search_tree:23: in insert
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

node = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

binary_search_tree:13: AttributeError
   - [#  13] COI binary_search_tree: 
--------------------------------------------------------------------------------
   9:         if not (self.head):
  10:             self.head = BinaryTreeNode(val, None)
  11:             return
  12:         def add_node_recursive(node):
- 13:             if val < node.value:
+ 13:             if not (val < node.value):
  14:                 if node.left:
  15:                     add_node_recursive(node.left)
  16:                 else:
  17:                     node.left = BinaryTreeNode(val, node)
--------------------------------------------------------------------------------
[0.20512 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_multiple_nodes

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f403616bb80>

    def test_insert_multiple_nodes(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.head.left.value == 3
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:25: AssertionError
   - [#  14] COI binary_search_tree: 
--------------------------------------------------------------------------------
  10:             self.head = BinaryTreeNode(val, None)
  11:             return
  12:         def add_node_recursive(node):
  13:             if val < node.value:
- 14:                 if node.left:
+ 14:                 if not (node.left):
  15:                     add_node_recursive(node.left)
  16:                 else:
  17:                     node.left = BinaryTreeNode(val, node)
  18:             
--------------------------------------------------------------------------------
[0.19762 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_multiple_nodes

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036490af0>

    def test_insert_multiple_nodes(binary_search_tree):
        binary_search_tree.insert(5)
>       binary_search_tree.insert(3)

ts-3-5/test_3-5_0-9_275.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
binary_search_tree:23: in insert
    ???
binary_search_tree:15: in add_node_recursive
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

node = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

binary_search_tree:13: AttributeError
   - [#  15] COI binary_search_tree: 
--------------------------------------------------------------------------------
  15:                     add_node_recursive(node.left)
  16:                 else:
  17:                     node.left = BinaryTreeNode(val, node)
  18:             
- 19:             elif node.right:
+ 19:             elif not (node.right):
  20:                 add_node_recursive(node.right)
  21:             else:
  22:                 node.right = BinaryTreeNode(val, node)
  23:         add_node_recursive(self.head)
--------------------------------------------------------------------------------
[0.20762 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_multiple_nodes

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036080430>

    def test_insert_multiple_nodes(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
>       binary_search_tree.insert(7)

ts-3-5/test_3-5_0-9_275.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
binary_search_tree:23: in insert
    ???
binary_search_tree:20: in add_node_recursive
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

node = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

binary_search_tree:13: AttributeError
   - [#  16] COI binary_search_tree: 
--------------------------------------------------------------------------------
  29:         self.head.delete(value)
  30:     
  31:     def search(self, value):
  32:         node = self.head
- 33:         while node:
+ 33:         while not node:
  34:             if value == node.value:
  35:                 return node
  36:             if value > node.value:
  37:                 node = node.right
--------------------------------------------------------------------------------
[0.21103 s] killed by ts-3-5/test_3-5_0-9_275.py::test_search

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40361bd9c0>

    def test_search(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.search(3).value == 3
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:45: AssertionError
   - [#  17] COI binary_search_tree: 
--------------------------------------------------------------------------------
  30:     
  31:     def search(self, value):
  32:         node = self.head
  33:         while node:
- 34:             if value == node.value:
+ 34:             if not (value == node.value):
  35:                 return node
  36:             if value > node.value:
  37:                 node = node.right
  38:             else:
--------------------------------------------------------------------------------
[0.20138 s] killed by ts-3-5/test_3-5_0-9_275.py::test_search

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40363d8670>

    def test_search(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.search(3).value == 3
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:45: AssertionError
   - [#  18] COI binary_search_tree: 
--------------------------------------------------------------------------------
  32:         node = self.head
  33:         while node:
  34:             if value == node.value:
  35:                 return node
- 36:             if value > node.value:
+ 36:             if not (value > node.value):
  37:                 node = node.right
  38:             else:
  39:                 node = node.left
  40:         
--------------------------------------------------------------------------------
[0.22998 s] killed by ts-3-5/test_3-5_0-9_275.py::test_search

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40360dfdf0>

    def test_search(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.search(3).value == 3
E       AttributeError: 'NoneType' object has no attribute 'value'

ts-3-5/test_3-5_0-9_275.py:45: AttributeError
   - [#  19] COI binary_search_tree: 
--------------------------------------------------------------------------------
  42:     
  43:     def in_order_traversal(self):
  44:         output = []
  45:         def recur(node):
- 46:             if node:
+ 46:             if not node:
  47:                 recur(node.left)
  48:                 output.append(node.value)
  49:                 recur(node.right)
  50:         recur(self.head)
--------------------------------------------------------------------------------
[0.20713 s] killed by ts-3-5/test_3-5_0-9_275.py::test_in_order_traversal

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f403668bb50>

    def test_in_order_traversal(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.in_order_traversal() == [3, 5, 7]
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:51: AssertionError
   - [#  20] COI binary_search_tree: 
--------------------------------------------------------------------------------
  52:     
  53:     def merge(self, tree):
  54:         
  55:         def mergeOntoT1(t1, t2):
- 56:             if not t1:
+ 56:             if not ((not t1)):
  57:                 return t2
  58:             if not t2:
  59:                 return t1
  60:             
--------------------------------------------------------------------------------
[0.20001 s] killed by ts-3-5/test_3-5_0-9_275.py::test_merge

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40365177f0>

    def test_merge(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
    
        tree_to_merge = BinarySearchTree()
        tree_to_merge.insert(7)
    
        binary_search_tree.merge(tree_to_merge)
    
>       assert binary_search_tree.head.value == 12
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:62: AssertionError
   - [#  21] COI binary_search_tree: 
--------------------------------------------------------------------------------
  54:         
  55:         def mergeOntoT1(t1, t2):
  56:             if not t1:
  57:                 return t2
- 58:             if not t2:
+ 58:             if not ((not t2)):
  59:                 return t1
  60:             
  61:             t1.value += t2.value
  62:             
--------------------------------------------------------------------------------
[0.20662 s] killed by ts-3-5/test_3-5_0-9_275.py::test_merge

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40360dc1f0>

    def test_merge(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
    
        tree_to_merge = BinarySearchTree()
        tree_to_merge.insert(7)
    
        binary_search_tree.merge(tree_to_merge)
    
>       assert binary_search_tree.head.value == 12
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:62: AssertionError
   - [#  22] OIL binary_search_tree: 
--------------------------------------------------------------------------------
  35:                 return node
  36:             if value > node.value:
  37:                 node = node.right
  38:             else:
- 39:                 node = node.left
+ 39:                 node = node.leftbreak
  40:         
  41:         return node
  42:     
  43:     def in_order_traversal(self):
--------------------------------------------------------------------------------
[0.18496 s] survived
   - [#  23] ROR binary_search_tree: 
--------------------------------------------------------------------------------
   9:         if not (self.head):
  10:             self.head = BinaryTreeNode(val, None)
  11:             return
  12:         def add_node_recursive(node):
- 13:             if val < node.value:
+ 13:             if val > node.value:
  14:                 if node.left:
  15:                     add_node_recursive(node.left)
  16:                 else:
  17:                     node.left = BinaryTreeNode(val, node)
--------------------------------------------------------------------------------
[0.20723 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_multiple_nodes

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036130910>

    def test_insert_multiple_nodes(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.head.left.value == 3
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:25: AssertionError
   - [#  24] ROR binary_search_tree: 
--------------------------------------------------------------------------------
   9:         if not (self.head):
  10:             self.head = BinaryTreeNode(val, None)
  11:             return
  12:         def add_node_recursive(node):
- 13:             if val < node.value:
+ 13:             if val <= node.value:
  14:                 if node.left:
  15:                     add_node_recursive(node.left)
  16:                 else:
  17:                     node.left = BinaryTreeNode(val, node)
--------------------------------------------------------------------------------
[0.18913 s] survived
   - [#  25] ROR binary_search_tree: 
--------------------------------------------------------------------------------
  30:     
  31:     def search(self, value):
  32:         node = self.head
  33:         while node:
- 34:             if value == node.value:
+ 34:             if value != node.value:
  35:                 return node
  36:             if value > node.value:
  37:                 node = node.right
  38:             else:
--------------------------------------------------------------------------------
[0.21587 s] killed by ts-3-5/test_3-5_0-9_275.py::test_search

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40360788b0>

    def test_search(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.search(3).value == 3
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:45: AssertionError
   - [#  26] ROR binary_search_tree: 
--------------------------------------------------------------------------------
  32:         node = self.head
  33:         while node:
  34:             if value == node.value:
  35:                 return node
- 36:             if value > node.value:
+ 36:             if value < node.value:
  37:                 node = node.right
  38:             else:
  39:                 node = node.left
  40:         
--------------------------------------------------------------------------------
[0.21699 s] killed by ts-3-5/test_3-5_0-9_275.py::test_search

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036132e90>

    def test_search(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.search(3).value == 3
E       AttributeError: 'NoneType' object has no attribute 'value'

ts-3-5/test_3-5_0-9_275.py:45: AttributeError
   - [#  27] ROR binary_search_tree: 
--------------------------------------------------------------------------------
  32:         node = self.head
  33:         while node:
  34:             if value == node.value:
  35:                 return node
- 36:             if value > node.value:
+ 36:             if value >= node.value:
  37:                 node = node.right
  38:             else:
  39:                 node = node.left
  40:         
--------------------------------------------------------------------------------
[0.19431 s] survived
   - [#  28] SDI binary_search_tree: 
--------------------------------------------------------------------------------
   1: from tree_node import BinaryTreeNode
   2: 
   3: class BinarySearchTree:
   4:     
-  5:     def __init__(self):
-  6:         self.head = None
-  7:     
+  5:     @staticmethod
+  6:     def __init__(self):
+  7:         self.head = None
   8:     def insert(self, val):
   9:         if not (self.head):
  10:             self.head = BinaryTreeNode(val, None)
  11:             return
--------------------------------------------------------------------------------
[0.20997 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/bst1/ts-3-5/test_3-5_0-9_275.py:15: TypeError: BinarySearchTree.__init__() missing 1 required positional argument: 'self'

   - [#  29] SDI binary_search_tree: 
--------------------------------------------------------------------------------
   4:     
   5:     def __init__(self):
   6:         self.head = None
   7:     
-  8:     def insert(self, val):
-  9:         if not (self.head):
- 10:             self.head = BinaryTreeNode(val, None)
- 11:             return
- 12:         def add_node_recursive(node):
- 13:             if val < node.value:
- 14:                 if node.left:
- 15:                     add_node_recursive(node.left)
- 16:                 else:
- 17:                     node.left = BinaryTreeNode(val, node)
- 18:             
- 19:             elif node.right:
- 20:                 add_node_recursive(node.right)
- 21:             else:
- 22:                 node.right = BinaryTreeNode(val, node)
- 23:         add_node_recursive(self.head)
- 24:     
+  8:     @staticmethod
+  9:     def insert(self, val):
+ 10:         if not (self.head):
+ 11:             self.head = BinaryTreeNode(val, None)
+ 12:             return
+ 13:         def add_node_recursive(node):
+ 14:             if val < node.value:
+ 15:                 if node.left:
+ 16:                     add_node_recursive(node.left)
+ 17:                 else:
+ 18:                     node.left = BinaryTreeNode(val, node)
+ 19:             
+ 20:             elif node.right:
+ 21:                 add_node_recursive(node.right)
+ 22:             else:
+ 23:                 node.right = BinaryTreeNode(val, node)
+ 24:         add_node_recursive(self.head)
  25:     def min(self):
  26:         return self.head.min().value
  27:     
  28:     def delete(self, value):
--------------------------------------------------------------------------------
[0.20948 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/bst1/ts-3-5/test_3-5_0-9_275.py:18: TypeError: BinarySearchTree.insert() missing 1 required positional argument: 'val'

   - [#  30] SDI binary_search_tree: 
--------------------------------------------------------------------------------
  21:             else:
  22:                 node.right = BinaryTreeNode(val, node)
  23:         add_node_recursive(self.head)
  24:     
- 25:     def min(self):
- 26:         return self.head.min().value
- 27:     
+ 25:     @staticmethod
+ 26:     def min(self):
+ 27:         return self.head.min().value
  28:     def delete(self, value):
  29:         self.head.delete(value)
  30:     
  31:     def search(self, value):
--------------------------------------------------------------------------------
[0.21695 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/bst1/ts-3-5/test_3-5_0-9_275.py:32: TypeError: BinarySearchTree.min() missing 1 required positional argument: 'self'

   - [#  31] SDI binary_search_tree: 
--------------------------------------------------------------------------------
  24:     
  25:     def min(self):
  26:         return self.head.min().value
  27:     
- 28:     def delete(self, value):
- 29:         self.head.delete(value)
- 30:     
+ 28:     @staticmethod
+ 29:     def delete(self, value):
+ 30:         self.head.delete(value)
  31:     def search(self, value):
  32:         node = self.head
  33:         while node:
  34:             if value == node.value:
--------------------------------------------------------------------------------
[0.21012 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/bst1/ts-3-5/test_3-5_0-9_275.py:38: TypeError: BinarySearchTree.delete() missing 1 required positional argument: 'value'

   - [#  32] SDI binary_search_tree: 
--------------------------------------------------------------------------------
  27:     
  28:     def delete(self, value):
  29:         self.head.delete(value)
  30:     
- 31:     def search(self, value):
- 32:         node = self.head
- 33:         while node:
- 34:             if value == node.value:
- 35:                 return node
- 36:             if value > node.value:
- 37:                 node = node.right
- 38:             else:
- 39:                 node = node.left
- 40:         
- 41:         return node
- 42:     
+ 31:     @staticmethod
+ 32:     def search(self, value):
+ 33:         node = self.head
+ 34:         while node:
+ 35:             if value == node.value:
+ 36:                 return node
+ 37:             if value > node.value:
+ 38:                 node = node.right
+ 39:             else:
+ 40:                 node = node.left
+ 41:         
+ 42:         return node
  43:     def in_order_traversal(self):
  44:         output = []
  45:         def recur(node):
  46:             if node:
--------------------------------------------------------------------------------
[0.21555 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/bst1/ts-3-5/test_3-5_0-9_275.py:45: TypeError: BinarySearchTree.search() missing 1 required positional argument: 'value'

   - [#  33] SDI binary_search_tree: 
--------------------------------------------------------------------------------
  39:                 node = node.left
  40:         
  41:         return node
  42:     
- 43:     def in_order_traversal(self):
- 44:         output = []
- 45:         def recur(node):
- 46:             if node:
- 47:                 recur(node.left)
- 48:                 output.append(node.value)
- 49:                 recur(node.right)
- 50:         recur(self.head)
- 51:         return output
- 52:     
+ 43:     @staticmethod
+ 44:     def in_order_traversal(self):
+ 45:         output = []
+ 46:         def recur(node):
+ 47:             if node:
+ 48:                 recur(node.left)
+ 49:                 output.append(node.value)
+ 50:                 recur(node.right)
+ 51:         recur(self.head)
+ 52:         return output
  53:     def merge(self, tree):
  54:         
  55:         def mergeOntoT1(t1, t2):
  56:             if not t1:
--------------------------------------------------------------------------------
[0.21939 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/bst1/ts-3-5/test_3-5_0-9_275.py:51: TypeError: BinarySearchTree.in_order_traversal() missing 1 required positional argument: 'self'

   - [#  34] SDI binary_search_tree: 
--------------------------------------------------------------------------------
  49:                 recur(node.right)
  50:         recur(self.head)
  51:         return output
  52:     
- 53:     def merge(self, tree):
- 54:         
- 55:         def mergeOntoT1(t1, t2):
- 56:             if not t1:
- 57:                 return t2
- 58:             if not t2:
- 59:                 return t1
- 60:             
- 61:             t1.value += t2.value
- 62:             
+ 53:     @staticmethod
+ 54:     def merge(self, tree):
+ 55:         
+ 56:         def mergeOntoT1(t1, t2):
+ 57:             if not t1:
+ 58:                 return t2
+ 59:             if not t2:
+ 60:                 return t1
+ 61:             
+ 62:             t1.value += t2.value
  63:             
- 64:             t1.left = mergeOntoT1(t1.left, t2.left)
- 65:             
+ 64:             
+ 65:             t1.left = mergeOntoT1(t1.left, t2.left)
  66:             
- 67:             t1.right = mergeOntoT1(t1.right, t2.right)
- 68:             
- 69:             return t1
- 70:         
- 71:         mergeOntoT1(self.head, tree.head)
+ 67:             
+ 68:             t1.right = mergeOntoT1(t1.right, t2.right)
+ 69:             
+ 70:             return t1
+ 71:         
+ 72:         mergeOntoT1(self.head, tree.head)
--------------------------------------------------------------------------------
[0.23013 s] incompetent

TypeError: /home/lucca/teste/python_experiments2/bst1/ts-3-5/test_3-5_0-9_275.py:60: TypeError: BinarySearchTree.merge() missing 1 required positional argument: 'tree'

   - [#  35] SDL binary_search_tree: 
--------------------------------------------------------------------------------
   2: 
   3: class BinarySearchTree:
   4:     
   5:     def __init__(self):
-  6:         self.head = None
+  6:         pass
   7:     
   8:     def insert(self, val):
   9:         if not (self.head):
  10:             self.head = BinaryTreeNode(val, None)
--------------------------------------------------------------------------------
[0.20956 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_single_node

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40363da230>

    def test_insert_single_node(binary_search_tree):
>       binary_search_tree.insert(5)

ts-3-5/test_3-5_0-9_275.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7f40363da230>, val = 5

>   ???
E   AttributeError: 'BinarySearchTree' object has no attribute 'head'

binary_search_tree:9: AttributeError
   - [#  36] SDL binary_search_tree: 
--------------------------------------------------------------------------------
   6:         self.head = None
   7:     
   8:     def insert(self, val):
   9:         if not (self.head):
- 10:             self.head = BinaryTreeNode(val, None)
+ 10:             pass
  11:             return
  12:         def add_node_recursive(node):
  13:             if val < node.value:
  14:                 if node.left:
--------------------------------------------------------------------------------
[0.21495 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_single_node

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f403654cc10>

    def test_insert_single_node(binary_search_tree):
        binary_search_tree.insert(5)
>       assert binary_search_tree.head.value == 5
E       AttributeError: 'NoneType' object has no attribute 'value'

ts-3-5/test_3-5_0-9_275.py:19: AttributeError
   - [#  37] SDL binary_search_tree: 
--------------------------------------------------------------------------------
   7:     
   8:     def insert(self, val):
   9:         if not (self.head):
  10:             self.head = BinaryTreeNode(val, None)
- 11:             return
+ 11:             pass
  12:         def add_node_recursive(node):
  13:             if val < node.value:
  14:                 if node.left:
  15:                     add_node_recursive(node.left)
--------------------------------------------------------------------------------
[0.21400 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_multiple_nodes

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40364db6d0>

    def test_insert_multiple_nodes(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
        assert binary_search_tree.head.left.value == 3
>       assert binary_search_tree.head.right.value == 7
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:26: AssertionError
   - [#  38] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  11:             return
  12:         def add_node_recursive(node):
  13:             if val < node.value:
  14:                 if node.left:
- 15:                     add_node_recursive(node.left)
+ 15:                     pass
  16:                 else:
  17:                     node.left = BinaryTreeNode(val, node)
  18:             
  19:             elif node.right:
--------------------------------------------------------------------------------
[0.19426 s] survived
   - [#  39] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  13:             if val < node.value:
  14:                 if node.left:
  15:                     add_node_recursive(node.left)
  16:                 else:
- 17:                     node.left = BinaryTreeNode(val, node)
+ 17:                     pass
  18:             
  19:             elif node.right:
  20:                 add_node_recursive(node.right)
  21:             else:
--------------------------------------------------------------------------------
[0.21461 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_multiple_nodes

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036133c10>

    def test_insert_multiple_nodes(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.head.left.value == 3
E       AttributeError: 'NoneType' object has no attribute 'value'

ts-3-5/test_3-5_0-9_275.py:25: AttributeError
   - [#  40] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  16:                 else:
  17:                     node.left = BinaryTreeNode(val, node)
  18:             
  19:             elif node.right:
- 20:                 add_node_recursive(node.right)
+ 20:                 pass
  21:             else:
  22:                 node.right = BinaryTreeNode(val, node)
  23:         add_node_recursive(self.head)
  24:     
--------------------------------------------------------------------------------
[0.18890 s] survived
   - [#  41] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  18:             
  19:             elif node.right:
  20:                 add_node_recursive(node.right)
  21:             else:
- 22:                 node.right = BinaryTreeNode(val, node)
+ 22:                 pass
  23:         add_node_recursive(self.head)
  24:     
  25:     def min(self):
  26:         return self.head.min().value
--------------------------------------------------------------------------------
[0.21589 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_multiple_nodes

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036051c60>

    def test_insert_multiple_nodes(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
        assert binary_search_tree.head.left.value == 3
>       assert binary_search_tree.head.right.value == 7
E       AttributeError: 'NoneType' object has no attribute 'value'

ts-3-5/test_3-5_0-9_275.py:26: AttributeError
   - [#  42] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  19:             elif node.right:
  20:                 add_node_recursive(node.right)
  21:             else:
  22:                 node.right = BinaryTreeNode(val, node)
- 23:         add_node_recursive(self.head)
+ 23:         pass
  24:     
  25:     def min(self):
  26:         return self.head.min().value
  27:     
--------------------------------------------------------------------------------
[0.22393 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_multiple_nodes

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036517550>

    def test_insert_multiple_nodes(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.head.left.value == 3
E       AttributeError: 'NoneType' object has no attribute 'value'

ts-3-5/test_3-5_0-9_275.py:25: AttributeError
   - [#  43] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  22:                 node.right = BinaryTreeNode(val, node)
  23:         add_node_recursive(self.head)
  24:     
  25:     def min(self):
- 26:         return self.head.min().value
+ 26:         pass
  27:     
  28:     def delete(self, value):
  29:         self.head.delete(value)
  30:     
--------------------------------------------------------------------------------
[0.21030 s] killed by ts-3-5/test_3-5_0-9_275.py::test_min

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f403654ffa0>

    def test_min(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.min() == 3
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:32: AssertionError
   - [#  44] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  25:     def min(self):
  26:         return self.head.min().value
  27:     
  28:     def delete(self, value):
- 29:         self.head.delete(value)
+ 29:         pass
  30:     
  31:     def search(self, value):
  32:         node = self.head
  33:         while node:
--------------------------------------------------------------------------------
[0.21603 s] killed by ts-3-5/test_3-5_0-9_275.py::test_delete

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036091960>

    def test_delete(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
        binary_search_tree.delete(5)
>       assert binary_search_tree.head.value == 7
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:39: AssertionError
   - [#  45] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  28:     def delete(self, value):
  29:         self.head.delete(value)
  30:     
  31:     def search(self, value):
- 32:         node = self.head
+ 32:         pass
  33:         while node:
  34:             if value == node.value:
  35:                 return node
  36:             if value > node.value:
--------------------------------------------------------------------------------
[0.21772 s] killed by ts-3-5/test_3-5_0-9_275.py::test_search

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f403654ceb0>

    def test_search(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.search(3).value == 3

ts-3-5/test_3-5_0-9_275.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7f403654ceb0>, value = 3

>   ???
E   UnboundLocalError: local variable 'node' referenced before assignment

binary_search_tree:33: UnboundLocalError
   - [#  46] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  31:     def search(self, value):
  32:         node = self.head
  33:         while node:
  34:             if value == node.value:
- 35:                 return node
+ 35:                 pass
  36:             if value > node.value:
  37:                 node = node.right
  38:             else:
  39:                 node = node.left
--------------------------------------------------------------------------------
[0.21375 s] killed by ts-3-5/test_3-5_0-9_275.py::test_search

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40361316f0>

    def test_search(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.search(3).value == 3
E       AttributeError: 'NoneType' object has no attribute 'value'

ts-3-5/test_3-5_0-9_275.py:45: AttributeError
   - [#  47] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  33:         while node:
  34:             if value == node.value:
  35:                 return node
  36:             if value > node.value:
- 37:                 node = node.right
+ 37:                 pass
  38:             else:
  39:                 node = node.left
  40:         
  41:         return node
--------------------------------------------------------------------------------
[0.19161 s] survived
   - [#  48] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  35:                 return node
  36:             if value > node.value:
  37:                 node = node.right
  38:             else:
- 39:                 node = node.left
+ 39:                 pass
  40:         
  41:         return node
  42:     
  43:     def in_order_traversal(self):
--------------------------------------------------------------------------------
[5.00688 s] timeout
   - [#  49] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  37:                 node = node.right
  38:             else:
  39:                 node = node.left
  40:         
- 41:         return node
+ 41:         pass
  42:     
  43:     def in_order_traversal(self):
  44:         output = []
  45:         def recur(node):
--------------------------------------------------------------------------------
[0.21799 s] survived
   - [#  50] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  40:         
  41:         return node
  42:     
  43:     def in_order_traversal(self):
- 44:         output = []
+ 44:         pass
  45:         def recur(node):
  46:             if node:
  47:                 recur(node.left)
  48:                 output.append(node.value)
--------------------------------------------------------------------------------
[0.21544 s] killed by ts-3-5/test_3-5_0-9_275.py::test_in_order_traversal

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40364308e0>

    def test_in_order_traversal(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.in_order_traversal() == [3, 5, 7]

ts-3-5/test_3-5_0-9_275.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
binary_search_tree:50: in in_order_traversal
    ???
binary_search_tree:47: in recur
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

node = <tree_node.BinaryTreeNode object at 0x7f40363ff670>

>   ???
E   NameError: name 'output' is not defined

binary_search_tree:48: NameError
   - [#  51] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  43:     def in_order_traversal(self):
  44:         output = []
  45:         def recur(node):
  46:             if node:
- 47:                 recur(node.left)
+ 47:                 pass
  48:                 output.append(node.value)
  49:                 recur(node.right)
  50:         recur(self.head)
  51:         return output
--------------------------------------------------------------------------------
[0.21870 s] killed by ts-3-5/test_3-5_0-9_275.py::test_in_order_traversal

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40360907f0>

    def test_in_order_traversal(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.in_order_traversal() == [3, 5, 7]
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:51: AssertionError
   - [#  52] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  44:         output = []
  45:         def recur(node):
  46:             if node:
  47:                 recur(node.left)
- 48:                 output.append(node.value)
+ 48:                 pass
  49:                 recur(node.right)
  50:         recur(self.head)
  51:         return output
  52:     
--------------------------------------------------------------------------------
[0.22885 s] killed by ts-3-5/test_3-5_0-9_275.py::test_in_order_traversal

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40361327d0>

    def test_in_order_traversal(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.in_order_traversal() == [3, 5, 7]
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:51: AssertionError
   - [#  53] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  45:         def recur(node):
  46:             if node:
  47:                 recur(node.left)
  48:                 output.append(node.value)
- 49:                 recur(node.right)
+ 49:                 pass
  50:         recur(self.head)
  51:         return output
  52:     
  53:     def merge(self, tree):
--------------------------------------------------------------------------------
[0.21545 s] killed by ts-3-5/test_3-5_0-9_275.py::test_in_order_traversal

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036491fc0>

    def test_in_order_traversal(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.in_order_traversal() == [3, 5, 7]
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:51: AssertionError
   - [#  54] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  46:             if node:
  47:                 recur(node.left)
  48:                 output.append(node.value)
  49:                 recur(node.right)
- 50:         recur(self.head)
+ 50:         pass
  51:         return output
  52:     
  53:     def merge(self, tree):
  54:         
--------------------------------------------------------------------------------
[0.21196 s] killed by ts-3-5/test_3-5_0-9_275.py::test_in_order_traversal

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40363dbd30>

    def test_in_order_traversal(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.in_order_traversal() == [3, 5, 7]
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:51: AssertionError
   - [#  55] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  47:                 recur(node.left)
  48:                 output.append(node.value)
  49:                 recur(node.right)
  50:         recur(self.head)
- 51:         return output
+ 51:         pass
  52:     
  53:     def merge(self, tree):
  54:         
  55:         def mergeOntoT1(t1, t2):
--------------------------------------------------------------------------------
[0.20984 s] killed by ts-3-5/test_3-5_0-9_275.py::test_in_order_traversal

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40365e75b0>

    def test_in_order_traversal(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.in_order_traversal() == [3, 5, 7]
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:51: AssertionError
   - [#  56] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  53:     def merge(self, tree):
  54:         
  55:         def mergeOntoT1(t1, t2):
  56:             if not t1:
- 57:                 return t2
+ 57:                 pass
  58:             if not t2:
  59:                 return t1
  60:             
  61:             t1.value += t2.value
--------------------------------------------------------------------------------
[0.18997 s] survived
   - [#  57] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  55:         def mergeOntoT1(t1, t2):
  56:             if not t1:
  57:                 return t2
  58:             if not t2:
- 59:                 return t1
+ 59:                 pass
  60:             
  61:             t1.value += t2.value
  62:             
  63:             
--------------------------------------------------------------------------------
[0.22293 s] killed by ts-3-5/test_3-5_0-9_275.py::test_merge

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40360a1960>

    def test_merge(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
    
        tree_to_merge = BinarySearchTree()
        tree_to_merge.insert(7)
    
>       binary_search_tree.merge(tree_to_merge)

ts-3-5/test_3-5_0-9_275.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
binary_search_tree:71: in merge
    ???
binary_search_tree:64: in mergeOntoT1
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

t1 = <tree_node.BinaryTreeNode object at 0x7f40360a1690>, t2 = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

binary_search_tree:61: AttributeError
   - [#  58] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  60:             
  61:             t1.value += t2.value
  62:             
  63:             
- 64:             t1.left = mergeOntoT1(t1.left, t2.left)
+ 64:             pass
  65:             
  66:             
  67:             t1.right = mergeOntoT1(t1.right, t2.right)
  68:             
--------------------------------------------------------------------------------
[0.18776 s] survived
   - [#  59] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  63:             
  64:             t1.left = mergeOntoT1(t1.left, t2.left)
  65:             
  66:             
- 67:             t1.right = mergeOntoT1(t1.right, t2.right)
+ 67:             pass
  68:             
  69:             return t1
  70:         
  71:         mergeOntoT1(self.head, tree.head)
--------------------------------------------------------------------------------
[0.19114 s] survived
   - [#  60] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  65:             
  66:             
  67:             t1.right = mergeOntoT1(t1.right, t2.right)
  68:             
- 69:             return t1
+ 69:             pass
  70:         
  71:         mergeOntoT1(self.head, tree.head)
--------------------------------------------------------------------------------
[0.19022 s] survived
   - [#  61] SDL binary_search_tree: 
--------------------------------------------------------------------------------
  67:             t1.right = mergeOntoT1(t1.right, t2.right)
  68:             
  69:             return t1
  70:         
- 71:         mergeOntoT1(self.head, tree.head)
+ 71:         pass
--------------------------------------------------------------------------------
[0.21298 s] killed by ts-3-5/test_3-5_0-9_275.py::test_merge

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036133af0>

    def test_merge(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
    
        tree_to_merge = BinarySearchTree()
        tree_to_merge.insert(7)
    
        binary_search_tree.merge(tree_to_merge)
    
>       assert binary_search_tree.head.value == 12
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:62: AssertionError
   - [#  62] SVD binary_search_tree: 
--------------------------------------------------------------------------------
   2: 
   3: class BinarySearchTree:
   4:     
   5:     def __init__(self):
-  6:         self.head = None
+  6:         head = None
   7:     
   8:     def insert(self, val):
   9:         if not (self.head):
  10:             self.head = BinaryTreeNode(val, None)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  63] SVD binary_search_tree: 
--------------------------------------------------------------------------------
   5:     def __init__(self):
   6:         self.head = None
   7:     
   8:     def insert(self, val):
-  9:         if not (self.head):
+  9:         if not head:
  10:             self.head = BinaryTreeNode(val, None)
  11:             return
  12:         def add_node_recursive(node):
  13:             if val < node.value:
--------------------------------------------------------------------------------
[0.21033 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_single_node

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40361302e0>

    def test_insert_single_node(binary_search_tree):
>       binary_search_tree.insert(5)

ts-3-5/test_3-5_0-9_275.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7f40361302e0>, val = 5

>   ???
E   NameError: name 'head' is not defined

binary_search_tree:9: NameError
   - [#  64] SVD binary_search_tree: 
--------------------------------------------------------------------------------
   6:         self.head = None
   7:     
   8:     def insert(self, val):
   9:         if not (self.head):
- 10:             self.head = BinaryTreeNode(val, None)
+ 10:             head = BinaryTreeNode(val, None)
  11:             return
  12:         def add_node_recursive(node):
  13:             if val < node.value:
  14:                 if node.left:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  65] SVD binary_search_tree: 
--------------------------------------------------------------------------------
  19:             elif node.right:
  20:                 add_node_recursive(node.right)
  21:             else:
  22:                 node.right = BinaryTreeNode(val, node)
- 23:         add_node_recursive(self.head)
+ 23:         add_node_recursive(head)
  24:     
  25:     def min(self):
  26:         return self.head.min().value
  27:     
--------------------------------------------------------------------------------
[0.21253 s] killed by ts-3-5/test_3-5_0-9_275.py::test_insert_multiple_nodes

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40364da4a0>

    def test_insert_multiple_nodes(binary_search_tree):
        binary_search_tree.insert(5)
>       binary_search_tree.insert(3)

ts-3-5/test_3-5_0-9_275.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7f40364da4a0>, val = 3

>   ???
E   NameError: name 'head' is not defined

binary_search_tree:23: NameError
   - [#  66] SVD binary_search_tree: 
--------------------------------------------------------------------------------
  22:                 node.right = BinaryTreeNode(val, node)
  23:         add_node_recursive(self.head)
  24:     
  25:     def min(self):
- 26:         return self.head.min().value
+ 26:         return head.min().value
  27:     
  28:     def delete(self, value):
  29:         self.head.delete(value)
  30:     
--------------------------------------------------------------------------------
[0.21362 s] killed by ts-3-5/test_3-5_0-9_275.py::test_min

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f403654d780>

    def test_min(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.min() == 3

ts-3-5/test_3-5_0-9_275.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7f403654d780>

>   ???
E   NameError: name 'head' is not defined

binary_search_tree:26: NameError
   - [#  67] SVD binary_search_tree: 
--------------------------------------------------------------------------------
  25:     def min(self):
  26:         return self.head.min().value
  27:     
  28:     def delete(self, value):
- 29:         self.head.delete(value)
+ 29:         head.delete(value)
  30:     
  31:     def search(self, value):
  32:         node = self.head
  33:         while node:
--------------------------------------------------------------------------------
[0.21271 s] killed by ts-3-5/test_3-5_0-9_275.py::test_delete

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036188460>

    def test_delete(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       binary_search_tree.delete(5)

ts-3-5/test_3-5_0-9_275.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7f4036188460>, value = 5

>   ???
E   NameError: name 'head' is not defined

binary_search_tree:29: NameError
   - [#  68] SVD binary_search_tree: 
--------------------------------------------------------------------------------
  28:     def delete(self, value):
  29:         self.head.delete(value)
  30:     
  31:     def search(self, value):
- 32:         node = self.head
+ 32:         node = head
  33:         while node:
  34:             if value == node.value:
  35:                 return node
  36:             if value > node.value:
--------------------------------------------------------------------------------
[0.21750 s] killed by ts-3-5/test_3-5_0-9_275.py::test_search

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f403654e1a0>

    def test_search(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.search(3).value == 3

ts-3-5/test_3-5_0-9_275.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7f403654e1a0>, value = 3

>   ???
E   NameError: name 'head' is not defined

binary_search_tree:32: NameError
   - [#  69] SVD binary_search_tree: 
--------------------------------------------------------------------------------
  46:             if node:
  47:                 recur(node.left)
  48:                 output.append(node.value)
  49:                 recur(node.right)
- 50:         recur(self.head)
+ 50:         recur(head)
  51:         return output
  52:     
  53:     def merge(self, tree):
  54:         
--------------------------------------------------------------------------------
[0.21437 s] killed by ts-3-5/test_3-5_0-9_275.py::test_in_order_traversal

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40363d97e0>

    def test_in_order_traversal(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.in_order_traversal() == [3, 5, 7]

ts-3-5/test_3-5_0-9_275.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7f40363d97e0>

>   ???
E   NameError: name 'head' is not defined

binary_search_tree:50: NameError
   - [#  70] SVD binary_search_tree: 
--------------------------------------------------------------------------------
  67:             t1.right = mergeOntoT1(t1.right, t2.right)
  68:             
  69:             return t1
  70:         
- 71:         mergeOntoT1(self.head, tree.head)
+ 71:         mergeOntoT1(head, tree.head)
--------------------------------------------------------------------------------
[0.21557 s] killed by ts-3-5/test_3-5_0-9_275.py::test_merge

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f40360a05b0>

    def test_merge(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
    
        tree_to_merge = BinarySearchTree()
        tree_to_merge.insert(7)
    
>       binary_search_tree.merge(tree_to_merge)

ts-3-5/test_3-5_0-9_275.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <binary_search_tree.BinarySearchTree object at 0x7f40360a05b0>
tree = <binary_search_tree.BinarySearchTree object at 0x7f403610ffa0>

>   ???
E   NameError: name 'head' is not defined

binary_search_tree:71: NameError
   - [#  71] ZIL binary_search_tree: 
--------------------------------------------------------------------------------
  30:     
  31:     def search(self, value):
  32:         node = self.head
  33:         while node:
- 34:             if value == node.value:
- 35:                 return node
- 36:             if value > node.value:
- 37:                 node = node.right
- 38:             else:
- 39:                 node = node.left
+ 34:             break
+ 35:         
+ 36:         
+ 37:         
+ 38:         
+ 39:         
  40:         
  41:         return node
  42:     
  43:     def in_order_traversal(self):
--------------------------------------------------------------------------------
[0.24974 s] killed by ts-3-5/test_3-5_0-9_275.py::test_search

binary_search_tree = <binary_search_tree.BinarySearchTree object at 0x7f4036093fa0>

    def test_search(binary_search_tree):
        binary_search_tree.insert(5)
        binary_search_tree.insert(3)
        binary_search_tree.insert(7)
>       assert binary_search_tree.search(3).value == 3
E       AssertionError

ts-3-5/test_3-5_0-9_275.py:45: AssertionError
[*] Mutation score [22.11225 s]: 80.6%
   - all: 71
   - killed: 49 (69.0%)
   - survived: 12 (16.9%)
   - incompetent: 9 (12.7%)
   - timeout: 1 (1.4%)
