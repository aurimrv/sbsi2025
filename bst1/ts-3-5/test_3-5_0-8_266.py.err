import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binary_search_tree import BinarySearchTree

import pytest
from tree_node import BinaryTreeNode

@pytest.fixture
def create_sample_tree():
    tree = BinarySearchTree()
    tree.insert(8)
    tree.insert(3)
    tree.insert(10)
    tree.insert(1)
    tree.insert(6)
    tree.insert(14)
    return tree

def test_insert(create_sample_tree):
    tree = create_sample_tree
    assert tree.search(8) is not None
    assert tree.search(3) is not None
    assert tree.search(10) is not None
    assert tree.search(1) is not None
    assert tree.search(6) is not None
    assert tree.search(14) is not None

def test_min(create_sample_tree):
    tree = create_sample_tree
    assert tree.min() == 1

def test_delete(create_sample_tree):
    tree = create_sample_tree
    tree.delete(6)
    assert tree.search(6) is None

def test_search(create_sample_tree):
    tree = create_sample_tree
    assert tree.search(8) is not None
    assert tree.search(10) is not None
    assert tree.search(1) is not None
    assert tree.search(100) is None  # Not in the tree

def test_in_order_traversal(create_sample_tree):
    tree = create_sample_tree
    assert tree.in_order_traversal() == [1, 3, 6, 8, 10, 14]

def test_merge(create_sample_tree):
    tree1 = create_sample_tree
    tree2 = BinarySearchTree()
    tree2.insert(5)
    tree2.insert(7)
    tree1.merge(tree2)
    
    assert tree1.search(5) is not None
    assert tree1.search(7) is not None