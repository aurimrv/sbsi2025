import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binary_search_tree import BinarySearchTree, BinaryTreeNode

import pytest

@pytest.fixture
def sample_tree():
    tree = BinarySearchTree()
    tree.insert(8)
    tree.insert(3)
    tree.insert(10)
    tree.insert(1)
    tree.insert(6)
    tree.insert(14)
    return tree

def test_insert(sample_tree):
    assert sample_tree.search(8) is not None
    assert sample_tree.search(3) is not None
    assert sample_tree.search(10) is not None
    assert sample_tree.search(1) is not None
    assert sample_tree.search(6) is not None
    assert sample_tree.search(14) is not None

def test_min(sample_tree):
    assert sample_tree.min() == 1

def test_delete(sample_tree):
    sample_tree.delete(6)
    assert sample_tree.search(6) is None

def test_search(sample_tree):
    assert sample_tree.search(14) is not None
    assert sample_tree.search(100) is None

def test_in_order_traversal(sample_tree):
    assert sample_tree.in_order_traversal() == [1, 3, 6, 8, 10, 14]

def test_merge(sample_tree):
    tree_to_merge = BinarySearchTree()
    tree_to_merge.insert(5)
    tree_to_merge.insert(2)
    tree_to_merge.insert(12)

    sample_tree.merge(tree_to_merge)
    
    in_order_result = sample_tree.in_order_traversal()
    assert len(in_order_result) == 8
    assert in_order_result == [1, 2, 3, 5, 6, 8, 10, 12, 14]