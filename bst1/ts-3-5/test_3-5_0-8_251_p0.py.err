import pytest
import os
import sys

module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from binary_search_tree import BinarySearchTree

@pytest.fixture
def sample_tree():
    tree = BinarySearchTree()
    tree.insert(10)
    tree.insert(5)
    tree.insert(15)
    tree.insert(3)
    tree.insert(7)
    tree.insert(12)
    tree.insert(17)
    return tree

def test_insert(sample_tree):
    assert sample_tree.head.value == 10
    assert sample_tree.head.left.value == 5
    assert sample_tree.head.right.value == 15

def test_min(sample_tree):
    assert sample_tree.min() == 3

def test_delete(sample_tree):
    assert sample_tree.search(7) is not None
    sample_tree.delete(7)
    assert sample_tree.search(7) is None

def test_search(sample_tree):
    assert sample_tree.search(12).value == 12
    assert sample_tree.search(20) is None

def test_in_order_traversal(sample_tree):
    assert sample_tree.in_order_traversal() == [3, 5, 7, 10, 12, 15, 17]

def test_merge(sample_tree):
    tree2 = BinarySearchTree()
    tree2.insert(20)
    tree2.insert(25)

    sample_tree.merge(tree2)

    assert sample_tree.search(20) is not None
    assert sample_tree.search(25) is not None