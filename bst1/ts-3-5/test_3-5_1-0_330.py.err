import os
import sys
module_dir = os.path.dirname(os.path.abspath(__file__))
project_dir = os.path.abspath(os.path.join(module_dir, '..'))
sys.path.append(project_dir)

from tree_node import BinaryTreeNode
from binary_search_tree import BinarySearchTree

def test_insert_method():
    bst = BinarySearchTree()
    bst.insert(5)
    bst.insert(3)
    bst.insert(8)
    assert bst.in_order_traversal() == [3, 5, 8]

def test_min_method():
    bst = BinarySearchTree()
    bst.insert(7)
    bst.insert(10)
    bst.insert(5)
    assert bst.min() == 5

def test_delete_method():
    bst = BinarySearchTree()
    bst.insert(7)
    bst.insert(10)
    bst.insert(5)
    bst.delete(7)
    assert bst.in_order_traversal() == [5, 10]

def test_search_method():
    bst = BinarySearchTree()
    bst.insert(7)
    bst.insert(10)
    bst.insert(5)
    assert bst.search(10).value == 10

def test_in_order_traversal_method():
    bst = BinarySearchTree()
    bst.insert(7)
    bst.insert(10)
    bst.insert(5)
    assert bst.in_order_traversal() == [5, 7, 10]

def test_merge_method():
    bst1 = BinarySearchTree()
    bst1.insert(7)
    bst1.insert(10)
    bst2 = BinarySearchTree()
    bst2.insert(5)
    bst2.insert(8)
    merged = BinarySearchTree()
    merged.merge(bst1)
    merged.merge(bst2)
    assert merged.in_order_traversal() == [5, 7, 8, 10]