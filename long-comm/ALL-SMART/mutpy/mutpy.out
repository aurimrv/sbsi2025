[*] Start mutation process:
   - targets: longest_common_prefix.py
   - tests: ./ALL-SMART
[*] 38 tests passed:
   - test_longest_common_prefix_MOSA [0.06040 s]
   - test_longest_common_prefix_MIO [0.04713 s]
   - test_longest_common_prefix_WHOLE_SUITE [0.04688 s]
   - test_longest_common_prefix_DYNAMOSA [0.04470 s]
[*] Start mutants generation and execution:
   - [#   1] COD longest_common_prefix: 
--------------------------------------------------------------------------------
  11:     head = trie.head
  12:     
  13:     prefix = []
  14:     
- 15:     while (len(head) == 1 and trie.eof not in head):
+ 15:     while (len(head) == 1 and trie.eof in head):
  16:         (key, value) = head.popitem()
  17:         prefix.append(key)
  18:         head = value
  19:     
--------------------------------------------------------------------------------
[0.08346 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_0

def test_case_0():
        str_0 = 'O'
        var_0 = module_0.find_longest_common_prefix(str_0)
>       assert var_0 == 'O'
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:8: AssertionError
   - [#   2] COD longest_common_prefix: 
--------------------------------------------------------------------------------
  23:     """
  24:     Find the lcp in a list of words, using 'reduce' functions.
  25: 
  26:     """
- 27:     if not words:
+ 27:     if words:
  28:         return ''
  29:     
  30:     def common_start(w1, w2):
  31:         shorter = w1 if len(w1) < len(w2) else w2
--------------------------------------------------------------------------------
[0.08504 s] incompetent

TypeError: longest_common_prefix:37: TypeError: reduce() of empty iterable with no initial value

   - [#   3] COI longest_common_prefix: 
--------------------------------------------------------------------------------
  11:     head = trie.head
  12:     
  13:     prefix = []
  14:     
- 15:     while (len(head) == 1 and trie.eof not in head):
+ 15:     while not ((len(head) == 1 and trie.eof not in head)):
  16:         (key, value) = head.popitem()
  17:         prefix.append(key)
  18:         head = value
  19:     
--------------------------------------------------------------------------------
[0.08451 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_0

def test_case_0():
        str_0 = 'O'
        var_0 = module_0.find_longest_common_prefix(str_0)
>       assert var_0 == 'O'
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:8: AssertionError
   - [#   4] COI longest_common_prefix: 
--------------------------------------------------------------------------------
  23:     """
  24:     Find the lcp in a list of words, using 'reduce' functions.
  25: 
  26:     """
- 27:     if not words:
+ 27:     if not ((not words)):
  28:         return ''
  29:     
  30:     def common_start(w1, w2):
  31:         shorter = w1 if len(w1) < len(w2) else w2
--------------------------------------------------------------------------------
[0.08569 s] incompetent

TypeError: longest_common_prefix:37: TypeError: reduce() of empty iterable with no initial value

   - [#   5] COI longest_common_prefix: 
--------------------------------------------------------------------------------
  29:     
  30:     def common_start(w1, w2):
  31:         shorter = w1 if len(w1) < len(w2) else w2
  32:         for i in range(0, len(shorter)):
- 33:             if w1[i] != w2[i]:
+ 33:             if not (w1[i] != w2[i]):
  34:                 return shorter[:i]
  35:         return shorter
  36:     
  37:     return reduce(common_start, words)
--------------------------------------------------------------------------------
[0.08921 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_7

def test_case_7():
        str_0 = '\x0c(Jg^3#Sy{B`<'
        var_0 = module_0.find_longest_common_prefix_reduce(str_0)
>       assert var_0 == ''
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:45: AssertionError
   - [#   6] LCR longest_common_prefix: 
--------------------------------------------------------------------------------
  11:     head = trie.head
  12:     
  13:     prefix = []
  14:     
- 15:     while (len(head) == 1 and trie.eof not in head):
+ 15:     while (len(head) == 1 or trie.eof not in head):
  16:         (key, value) = head.popitem()
  17:         prefix.append(key)
  18:         head = value
  19:     
--------------------------------------------------------------------------------
[0.08351 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_0

def test_case_0():
        str_0 = 'O'
        var_0 = module_0.find_longest_common_prefix(str_0)
>       assert var_0 == 'O'
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:8: AssertionError
   - [#   7] OIL longest_common_prefix: 
--------------------------------------------------------------------------------
  15:     while (len(head) == 1 and trie.eof not in head):
  16:         (key, value) = head.popitem()
  17:         prefix.append(key)
  18:         head = value
- 19:     
+ 19:         break
  20:     return ''.join(prefix)
  21: 
  22: def find_longest_common_prefix_reduce(words: list):
  23:     """
--------------------------------------------------------------------------------
[0.09492 s] killed by ALL-SMART/test_longest_common_prefix_WHOLE_SUITE.py::test_case_0

def test_case_0():
        int_0 = -1419
        bool_0 = True
        dict_0 = {int_0: int_0, int_0: bool_0}
        var_0 = module_0.find_longest_common_prefix_reduce(dict_0)
        assert var_0 == -1419
        str_0 = ')v=z{U-B1'
        list_0 = [str_0, str_0, str_0]
        var_1 = module_0.find_longest_common_prefix_reduce(list_0)
        assert var_1 == ')v=z{U-B1'
        var_2 = module_0.find_longest_common_prefix(list_0)
>       assert var_2 == ')v=z{U-B1'
E       AssertionError

ALL-SMART/test_longest_common_prefix_WHOLE_SUITE.py:17: AssertionError
   - [#   8] OIL longest_common_prefix: 
--------------------------------------------------------------------------------
  31:         shorter = w1 if len(w1) < len(w2) else w2
  32:         for i in range(0, len(shorter)):
  33:             if w1[i] != w2[i]:
  34:                 return shorter[:i]
- 35:         return shorter
- 36:     
+ 35:             break
+ 36:         return shorter
  37:     return reduce(common_start, words)
--------------------------------------------------------------------------------
[0.07710 s] survived
   - [#   9] RIL longest_common_prefix: 
--------------------------------------------------------------------------------
  28:         return ''
  29:     
  30:     def common_start(w1, w2):
  31:         shorter = w1 if len(w1) < len(w2) else w2
- 32:         for i in range(0, len(shorter)):
+ 32:         for i in reversed(range(0, len(shorter))):
  33:             if w1[i] != w2[i]:
  34:                 return shorter[:i]
  35:         return shorter
  36:     
--------------------------------------------------------------------------------
[0.09327 s] killed by ALL-SMART/test_longest_common_prefix_MOSA.py::test_case_5

def test_case_5():
        bytes_0 = b'.\xbc\xde\x18\x0e\x05\xf2o'
        bytes_1 = b'\x89 ~\xebc8p\xa5\xe8\xf3E36\x810\x9f\xc6\xb1\xa1'
        list_0 = [bytes_1, bytes_0]
        var_0 = module_0.find_longest_common_prefix_reduce(list_0)
>       assert var_0 == b''
E       AssertionError

ALL-SMART/test_longest_common_prefix_MOSA.py:35: AssertionError
   - [#  10] ROR longest_common_prefix: 
--------------------------------------------------------------------------------
  11:     head = trie.head
  12:     
  13:     prefix = []
  14:     
- 15:     while (len(head) == 1 and trie.eof not in head):
+ 15:     while (len(head) != 1 and trie.eof not in head):
  16:         (key, value) = head.popitem()
  17:         prefix.append(key)
  18:         head = value
  19:     
--------------------------------------------------------------------------------
[0.08467 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_0

def test_case_0():
        str_0 = 'O'
        var_0 = module_0.find_longest_common_prefix(str_0)
>       assert var_0 == 'O'
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:8: AssertionError
   - [#  11] ROR longest_common_prefix: 
--------------------------------------------------------------------------------
  27:     if not words:
  28:         return ''
  29:     
  30:     def common_start(w1, w2):
- 31:         shorter = w1 if len(w1) < len(w2) else w2
+ 31:         shorter = w1 if len(w1) > len(w2) else w2
  32:         for i in range(0, len(shorter)):
  33:             if w1[i] != w2[i]:
  34:                 return shorter[:i]
  35:         return shorter
--------------------------------------------------------------------------------
[0.08492 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_7

def test_case_7():
        str_0 = '\x0c(Jg^3#Sy{B`<'
>       var_0 = module_0.find_longest_common_prefix_reduce(str_0)

ALL-SMART/test_longest_common_prefix_MIO.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
longest_common_prefix:37: in find_longest_common_prefix_reduce
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

w1 = '', w2 = 'J'

>   ???
E   IndexError: string index out of range

longest_common_prefix:33: IndexError
   - [#  12] ROR longest_common_prefix: 
--------------------------------------------------------------------------------
  27:     if not words:
  28:         return ''
  29:     
  30:     def common_start(w1, w2):
- 31:         shorter = w1 if len(w1) < len(w2) else w2
+ 31:         shorter = w1 if len(w1) <= len(w2) else w2
  32:         for i in range(0, len(shorter)):
  33:             if w1[i] != w2[i]:
  34:                 return shorter[:i]
  35:         return shorter
--------------------------------------------------------------------------------
[0.08024 s] survived
   - [#  13] ROR longest_common_prefix: 
--------------------------------------------------------------------------------
  29:     
  30:     def common_start(w1, w2):
  31:         shorter = w1 if len(w1) < len(w2) else w2
  32:         for i in range(0, len(shorter)):
- 33:             if w1[i] != w2[i]:
+ 33:             if w1[i] == w2[i]:
  34:                 return shorter[:i]
  35:         return shorter
  36:     
  37:     return reduce(common_start, words)
--------------------------------------------------------------------------------
[0.08542 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_7

def test_case_7():
        str_0 = '\x0c(Jg^3#Sy{B`<'
        var_0 = module_0.find_longest_common_prefix_reduce(str_0)
>       assert var_0 == ''
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:45: AssertionError
   - [#  14] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
   5:     '''
   6:     Find the longest common prefix in a list of words.
   7: 
   8:     '''
-  9:     trie = Trie(words)
+  9:     pass
  10:     
  11:     head = trie.head
  12:     
  13:     prefix = []
--------------------------------------------------------------------------------
[0.08097 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_0

def test_case_0():
        str_0 = 'O'
>       var_0 = module_0.find_longest_common_prefix(str_0)

ALL-SMART/test_longest_common_prefix_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

words = 'O'

>   ???
E   NameError: name 'trie' is not defined

longest_common_prefix:11: NameError
   - [#  15] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
   7: 
   8:     '''
   9:     trie = Trie(words)
  10:     
- 11:     head = trie.head
+ 11:     pass
  12:     
  13:     prefix = []
  14:     
  15:     while (len(head) == 1 and trie.eof not in head):
--------------------------------------------------------------------------------
[0.08228 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_0

def test_case_0():
        str_0 = 'O'
>       var_0 = module_0.find_longest_common_prefix(str_0)

ALL-SMART/test_longest_common_prefix_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

words = 'O'

>   ???
E   UnboundLocalError: local variable 'head' referenced before assignment

longest_common_prefix:15: UnboundLocalError
   - [#  16] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
   9:     trie = Trie(words)
  10:     
  11:     head = trie.head
  12:     
- 13:     prefix = []
+ 13:     pass
  14:     
  15:     while (len(head) == 1 and trie.eof not in head):
  16:         (key, value) = head.popitem()
  17:         prefix.append(key)
--------------------------------------------------------------------------------
[0.08055 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_0

def test_case_0():
        str_0 = 'O'
>       var_0 = module_0.find_longest_common_prefix(str_0)

ALL-SMART/test_longest_common_prefix_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

words = 'O'

>   ???
E   NameError: name 'prefix' is not defined

longest_common_prefix:17: NameError
   - [#  17] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
  12:     
  13:     prefix = []
  14:     
  15:     while (len(head) == 1 and trie.eof not in head):
- 16:         (key, value) = head.popitem()
+ 16:         pass
  17:         prefix.append(key)
  18:         head = value
  19:     
  20:     return ''.join(prefix)
--------------------------------------------------------------------------------
[0.08156 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_0

def test_case_0():
        str_0 = 'O'
>       var_0 = module_0.find_longest_common_prefix(str_0)

ALL-SMART/test_longest_common_prefix_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

words = 'O'

>   ???
E   NameError: name 'key' is not defined

longest_common_prefix:17: NameError
   - [#  18] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
  13:     prefix = []
  14:     
  15:     while (len(head) == 1 and trie.eof not in head):
  16:         (key, value) = head.popitem()
- 17:         prefix.append(key)
+ 17:         pass
  18:         head = value
  19:     
  20:     return ''.join(prefix)
  21: 
--------------------------------------------------------------------------------
[0.08454 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_0

def test_case_0():
        str_0 = 'O'
        var_0 = module_0.find_longest_common_prefix(str_0)
>       assert var_0 == 'O'
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:8: AssertionError
   - [#  19] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
  14:     
  15:     while (len(head) == 1 and trie.eof not in head):
  16:         (key, value) = head.popitem()
  17:         prefix.append(key)
- 18:         head = value
+ 18:         pass
  19:     
  20:     return ''.join(prefix)
  21: 
  22: def find_longest_common_prefix_reduce(words: list):
--------------------------------------------------------------------------------
[0.11676 s] killed by ALL-SMART/test_longest_common_prefix_WHOLE_SUITE.py::test_case_0

def test_case_0():
        int_0 = -1419
        bool_0 = True
        dict_0 = {int_0: int_0, int_0: bool_0}
        var_0 = module_0.find_longest_common_prefix_reduce(dict_0)
        assert var_0 == -1419
        str_0 = ')v=z{U-B1'
        list_0 = [str_0, str_0, str_0]
        var_1 = module_0.find_longest_common_prefix_reduce(list_0)
        assert var_1 == ')v=z{U-B1'
        var_2 = module_0.find_longest_common_prefix(list_0)
>       assert var_2 == ')v=z{U-B1'
E       AssertionError

ALL-SMART/test_longest_common_prefix_WHOLE_SUITE.py:17: AssertionError
   - [#  20] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
  16:         (key, value) = head.popitem()
  17:         prefix.append(key)
  18:         head = value
  19:     
- 20:     return ''.join(prefix)
+ 20:     pass
  21: 
  22: def find_longest_common_prefix_reduce(words: list):
  23:     """
  24:     Find the lcp in a list of words, using 'reduce' functions.
--------------------------------------------------------------------------------
[0.08424 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_0

def test_case_0():
        str_0 = 'O'
        var_0 = module_0.find_longest_common_prefix(str_0)
>       assert var_0 == 'O'
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:8: AssertionError
   - [#  21] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
  24:     Find the lcp in a list of words, using 'reduce' functions.
  25: 
  26:     """
  27:     if not words:
- 28:         return ''
+ 28:         pass
  29:     
  30:     def common_start(w1, w2):
  31:         shorter = w1 if len(w1) < len(w2) else w2
  32:         for i in range(0, len(shorter)):
--------------------------------------------------------------------------------
[0.08621 s] incompetent

TypeError: longest_common_prefix:37: TypeError: reduce() of empty iterable with no initial value

   - [#  22] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
  27:     if not words:
  28:         return ''
  29:     
  30:     def common_start(w1, w2):
- 31:         shorter = w1 if len(w1) < len(w2) else w2
+ 31:         pass
  32:         for i in range(0, len(shorter)):
  33:             if w1[i] != w2[i]:
  34:                 return shorter[:i]
  35:         return shorter
--------------------------------------------------------------------------------
[0.08647 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_7

def test_case_7():
        str_0 = '\x0c(Jg^3#Sy{B`<'
>       var_0 = module_0.find_longest_common_prefix_reduce(str_0)

ALL-SMART/test_longest_common_prefix_MIO.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
longest_common_prefix:37: in find_longest_common_prefix_reduce
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

w1 = '\x0c', w2 = '('

>   ???
E   NameError: name 'shorter' is not defined

longest_common_prefix:32: NameError
   - [#  23] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
  30:     def common_start(w1, w2):
  31:         shorter = w1 if len(w1) < len(w2) else w2
  32:         for i in range(0, len(shorter)):
  33:             if w1[i] != w2[i]:
- 34:                 return shorter[:i]
+ 34:                 pass
  35:         return shorter
  36:     
  37:     return reduce(common_start, words)
--------------------------------------------------------------------------------
[0.08865 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_7

def test_case_7():
        str_0 = '\x0c(Jg^3#Sy{B`<'
        var_0 = module_0.find_longest_common_prefix_reduce(str_0)
>       assert var_0 == ''
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:45: AssertionError
   - [#  24] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
  31:         shorter = w1 if len(w1) < len(w2) else w2
  32:         for i in range(0, len(shorter)):
  33:             if w1[i] != w2[i]:
  34:                 return shorter[:i]
- 35:         return shorter
+ 35:         pass
  36:     
  37:     return reduce(common_start, words)
--------------------------------------------------------------------------------
[0.08724 s] incompetent

TypeError: longest_common_prefix:31: TypeError: object of type 'NoneType' has no len()

   - [#  25] SDL longest_common_prefix: 
--------------------------------------------------------------------------------
  33:             if w1[i] != w2[i]:
  34:                 return shorter[:i]
  35:         return shorter
  36:     
- 37:     return reduce(common_start, words)
+ 37:     pass
--------------------------------------------------------------------------------
[0.08815 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_7

def test_case_7():
        str_0 = '\x0c(Jg^3#Sy{B`<'
        var_0 = module_0.find_longest_common_prefix_reduce(str_0)
>       assert var_0 == ''
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:45: AssertionError
   - [#  26] SIR longest_common_prefix: 
--------------------------------------------------------------------------------
  30:     def common_start(w1, w2):
  31:         shorter = w1 if len(w1) < len(w2) else w2
  32:         for i in range(0, len(shorter)):
  33:             if w1[i] != w2[i]:
- 34:                 return shorter[:i]
+ 34:                 return shorter[:]
  35:         return shorter
  36:     
  37:     return reduce(common_start, words)
--------------------------------------------------------------------------------
[0.08830 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_7

def test_case_7():
        str_0 = '\x0c(Jg^3#Sy{B`<'
        var_0 = module_0.find_longest_common_prefix_reduce(str_0)
>       assert var_0 == ''
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:45: AssertionError
   - [#  27] ZIL longest_common_prefix: 
--------------------------------------------------------------------------------
  12:     
  13:     prefix = []
  14:     
  15:     while (len(head) == 1 and trie.eof not in head):
- 16:         (key, value) = head.popitem()
- 17:         prefix.append(key)
- 18:         head = value
+ 16:         break
+ 17:     
+ 18:     
  19:     
  20:     return ''.join(prefix)
  21: 
  22: def find_longest_common_prefix_reduce(words: list):
--------------------------------------------------------------------------------
[0.08510 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_0

def test_case_0():
        str_0 = 'O'
        var_0 = module_0.find_longest_common_prefix(str_0)
>       assert var_0 == 'O'
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:8: AssertionError
   - [#  28] ZIL longest_common_prefix: 
--------------------------------------------------------------------------------
  29:     
  30:     def common_start(w1, w2):
  31:         shorter = w1 if len(w1) < len(w2) else w2
  32:         for i in range(0, len(shorter)):
- 33:             if w1[i] != w2[i]:
- 34:                 return shorter[:i]
+ 33:             break
+ 34:         
  35:         return shorter
  36:     
  37:     return reduce(common_start, words)
--------------------------------------------------------------------------------
[0.08512 s] killed by ALL-SMART/test_longest_common_prefix_MIO.py::test_case_7

def test_case_7():
        str_0 = '\x0c(Jg^3#Sy{B`<'
        var_0 = module_0.find_longest_common_prefix_reduce(str_0)
>       assert var_0 == ''
E       AssertionError

ALL-SMART/test_longest_common_prefix_MIO.py:45: AssertionError
[*] Mutation score [3.20014 s]: 91.7%
   - all: 28
   - killed: 22 (78.6%)
   - survived: 2 (7.1%)
   - incompetent: 4 (14.3%)
   - timeout: 0 (0.0%)
