[*] Start mutation process:
   - targets: find_duplicates.py
   - tests: ts-3-5/test_3-5_0-2_77.py
[*] 3 tests passed:
   - test_3-5_0-2_77 [0.12727 s]
[*] Start mutants generation and execution:
   - [#   1] ASR find_duplicates: 
--------------------------------------------------------------------------------
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
- 23:             ptr_1 += 1
+ 23:             ptr_1 -= 1
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
--------------------------------------------------------------------------------
[0.14433 s] survived
   - [#   2] ASR find_duplicates: 
--------------------------------------------------------------------------------
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
- 24:             ptr_2 += 1
+ 24:             ptr_2 -= 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
  28:             ptr_2 += 1
--------------------------------------------------------------------------------
[0.17232 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#   3] ASR find_duplicates: 
--------------------------------------------------------------------------------
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
- 26:             ptr_1 += 1
+ 26:             ptr_1 -= 1
  27:         else:
  28:             ptr_2 += 1
  29:     
  30:     return output
--------------------------------------------------------------------------------
[0.16402 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]

ts-3-5/test_3-5_0-2_77.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5], arr2 = [3, 4, 5, 6, 7]

>   ???
E   IndexError: list index out of range

find_duplicates:21: IndexError
   - [#   4] ASR find_duplicates: 
--------------------------------------------------------------------------------
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
- 28:             ptr_2 += 1
+ 28:             ptr_2 -= 1
  29:     
  30:     return output
  31: 
  32: def duplicates_bin_search(arr1, arr2):
--------------------------------------------------------------------------------
[0.13507 s] survived
   - [#   5] COI find_duplicates: 
--------------------------------------------------------------------------------
   4:     arr1_seen = set(arr1)
   5:     output = []
   6:     
   7:     for element in arr2:
-  8:         if element in arr1_seen:
+  8:         if not (element in arr1_seen):
   9:             output.append(element)
  10:     
  11:     return output
  12: 
--------------------------------------------------------------------------------
[0.16229 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_linear

def test_duplicates_linear():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_linear(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:12: AssertionError
   - [#   6] COI find_duplicates: 
--------------------------------------------------------------------------------
   4:     arr1_seen = set(arr1)
   5:     output = []
   6:     
   7:     for element in arr2:
-  8:         if element in arr1_seen:
+  8:         if element not in arr1_seen:
   9:             output.append(element)
  10:     
  11:     return output
  12: 
--------------------------------------------------------------------------------
[0.16538 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_linear

def test_duplicates_linear():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_linear(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:12: AssertionError
   - [#   7] COI find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
+ 19:     while not ((ptr_1 < len(arr1) and ptr_2 < len(arr2))):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.16261 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#   8] COI find_duplicates: 
--------------------------------------------------------------------------------
  17:     ptr_2 = 0
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
- 21:         if arr2[ptr_2] == arr1[ptr_1]:
+ 21:         if not (arr2[ptr_2] == arr1[ptr_1]):
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
--------------------------------------------------------------------------------
[0.16024 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#   9] COI find_duplicates: 
--------------------------------------------------------------------------------
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
- 25:         elif arr2[ptr_2] > arr1[ptr_1]:
+ 25:         elif not (arr2[ptr_2] > arr1[ptr_1]):
  26:             ptr_1 += 1
  27:         else:
  28:             ptr_2 += 1
  29:     
--------------------------------------------------------------------------------
[0.16435 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#  10] COI find_duplicates: 
--------------------------------------------------------------------------------
  35: 
  36:     '''
  37:     
  38:     
- 39:     if len(arr2) < len(arr1):
+ 39:     if not (len(arr2) < len(arr1)):
  40:         (arr1, arr2) = (arr2, arr1)
  41:     
  42:     output = []
  43:     
--------------------------------------------------------------------------------
[0.16258 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_bin_search

def test_duplicates_bin_search():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_bin_search(arr1, arr2) == [3, 4, 5]

ts-3-5/test_3-5_0-2_77.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
find_duplicates:45: in duplicates_bin_search
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list = [1, 2, 3, 4, 5], target = 6

    def binary_search(list, target):
        """
        Search a sorted list.
    
        :param list: the input sorted list
        :param target: the value that is to be found
        :return: index of target in list, or -1 if not found
        """
    
        # the initial left and right index
        l = 0
        r = len(list)
    
        # while left is less than right, if they cross then the value
        # couldn't have been found
        while l <= r:
    
            # get the midpoint of l and r
            mid = (r+l)//2
    
            # if the midpoint is equal to the target, return it
>           if list[mid] == target:
E           IndexError: list index out of range

binary_search.py:22: IndexError
   - [#  11] COI find_duplicates: 
--------------------------------------------------------------------------------
  41:     
  42:     output = []
  43:     
  44:     for element in arr1:
- 45:         if binary_search(arr2, element) >= 0:
+ 45:         if not (binary_search(arr2, element) >= 0):
  46:             output.append(element)
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.16452 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_bin_search

def test_duplicates_bin_search():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_bin_search(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:30: AssertionError
   - [#  12] LCR find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
+ 19:     while (ptr_1 < len(arr1) or ptr_2 < len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.17028 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]

ts-3-5/test_3-5_0-2_77.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5], arr2 = [3, 4, 5, 6, 7]

>   ???
E   IndexError: list index out of range

find_duplicates:21: IndexError
   - [#  13] OIL find_duplicates: 
--------------------------------------------------------------------------------
   6:     
   7:     for element in arr2:
   8:         if element in arr1_seen:
   9:             output.append(element)
- 10:     
+ 10:         break
  11:     return output
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
  14:     output = []
--------------------------------------------------------------------------------
[0.16642 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_linear

def test_duplicates_linear():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_linear(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:12: AssertionError
   - [#  14] OIL find_duplicates: 
--------------------------------------------------------------------------------
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
- 28:             ptr_2 += 1
+ 28:             ptr_2 += 1break
  29:     
  30:     return output
  31: 
  32: def duplicates_bin_search(arr1, arr2):
--------------------------------------------------------------------------------
[0.16784 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#  15] OIL find_duplicates: 
--------------------------------------------------------------------------------
  43:     
  44:     for element in arr1:
  45:         if binary_search(arr2, element) >= 0:
  46:             output.append(element)
- 47:     
+ 47:         break
  48:     return output
--------------------------------------------------------------------------------
[0.16008 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_bin_search

def test_duplicates_bin_search():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_bin_search(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:30: AssertionError
   - [#  16] RIL find_duplicates: 
--------------------------------------------------------------------------------
   3: def duplicates_linear(arr1, arr2):
   4:     arr1_seen = set(arr1)
   5:     output = []
   6:     
-  7:     for element in arr2:
+  7:     for element in reversed(arr2):
   8:         if element in arr1_seen:
   9:             output.append(element)
  10:     
  11:     return output
--------------------------------------------------------------------------------
[0.16345 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_linear

def test_duplicates_linear():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_linear(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:12: AssertionError
   - [#  17] RIL find_duplicates: 
--------------------------------------------------------------------------------
  40:         (arr1, arr2) = (arr2, arr1)
  41:     
  42:     output = []
  43:     
- 44:     for element in arr1:
+ 44:     for element in reversed(arr1):
  45:         if binary_search(arr2, element) >= 0:
  46:             output.append(element)
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.16813 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_bin_search

def test_duplicates_bin_search():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_bin_search(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:30: AssertionError
   - [#  18] ROR find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
+ 19:     while (ptr_1 > len(arr1) and ptr_2 < len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.16831 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#  19] ROR find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
+ 19:     while (ptr_1 <= len(arr1) and ptr_2 < len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.16699 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]

ts-3-5/test_3-5_0-2_77.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5], arr2 = [3, 4, 5, 6, 7]

>   ???
E   IndexError: list index out of range

find_duplicates:21: IndexError
   - [#  20] ROR find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
+ 19:     while (ptr_1 < len(arr1) and ptr_2 > len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.16010 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#  21] ROR find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
+ 19:     while (ptr_1 < len(arr1) and ptr_2 <= len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.13701 s] survived
   - [#  22] ROR find_duplicates: 
--------------------------------------------------------------------------------
  17:     ptr_2 = 0
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
- 21:         if arr2[ptr_2] == arr1[ptr_1]:
+ 21:         if arr2[ptr_2] != arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
--------------------------------------------------------------------------------
[0.17077 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#  23] ROR find_duplicates: 
--------------------------------------------------------------------------------
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
- 25:         elif arr2[ptr_2] > arr1[ptr_1]:
+ 25:         elif arr2[ptr_2] < arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
  28:             ptr_2 += 1
  29:     
--------------------------------------------------------------------------------
[0.15675 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#  24] ROR find_duplicates: 
--------------------------------------------------------------------------------
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
- 25:         elif arr2[ptr_2] > arr1[ptr_1]:
+ 25:         elif arr2[ptr_2] >= arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
  28:             ptr_2 += 1
  29:     
--------------------------------------------------------------------------------
[0.15649 s] survived
   - [#  25] ROR find_duplicates: 
--------------------------------------------------------------------------------
  35: 
  36:     '''
  37:     
  38:     
- 39:     if len(arr2) < len(arr1):
+ 39:     if len(arr2) > len(arr1):
  40:         (arr1, arr2) = (arr2, arr1)
  41:     
  42:     output = []
  43:     
--------------------------------------------------------------------------------
[0.13858 s] survived
   - [#  26] ROR find_duplicates: 
--------------------------------------------------------------------------------
  35: 
  36:     '''
  37:     
  38:     
- 39:     if len(arr2) < len(arr1):
+ 39:     if len(arr2) <= len(arr1):
  40:         (arr1, arr2) = (arr2, arr1)
  41:     
  42:     output = []
  43:     
--------------------------------------------------------------------------------
[0.18273 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_bin_search

def test_duplicates_bin_search():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_bin_search(arr1, arr2) == [3, 4, 5]

ts-3-5/test_3-5_0-2_77.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
find_duplicates:45: in duplicates_bin_search
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list = [1, 2, 3, 4, 5], target = 6

    def binary_search(list, target):
        """
        Search a sorted list.
    
        :param list: the input sorted list
        :param target: the value that is to be found
        :return: index of target in list, or -1 if not found
        """
    
        # the initial left and right index
        l = 0
        r = len(list)
    
        # while left is less than right, if they cross then the value
        # couldn't have been found
        while l <= r:
    
            # get the midpoint of l and r
            mid = (r+l)//2
    
            # if the midpoint is equal to the target, return it
>           if list[mid] == target:
E           IndexError: list index out of range

binary_search.py:22: IndexError
   - [#  27] ROR find_duplicates: 
--------------------------------------------------------------------------------
  41:     
  42:     output = []
  43:     
  44:     for element in arr1:
- 45:         if binary_search(arr2, element) >= 0:
+ 45:         if binary_search(arr2, element) <= 0:
  46:             output.append(element)
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.17641 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_bin_search

def test_duplicates_bin_search():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_bin_search(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:30: AssertionError
   - [#  28] ROR find_duplicates: 
--------------------------------------------------------------------------------
  41:     
  42:     output = []
  43:     
  44:     for element in arr1:
- 45:         if binary_search(arr2, element) >= 0:
+ 45:         if binary_search(arr2, element) > 0:
  46:             output.append(element)
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.17629 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_bin_search

def test_duplicates_bin_search():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_bin_search(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:30: AssertionError
   - [#  29] SDL find_duplicates: 
--------------------------------------------------------------------------------
   1: from binary_search import binary_search
   2: 
   3: def duplicates_linear(arr1, arr2):
-  4:     arr1_seen = set(arr1)
+  4:     pass
   5:     output = []
   6:     
   7:     for element in arr2:
   8:         if element in arr1_seen:
--------------------------------------------------------------------------------
[0.16247 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_linear

def test_duplicates_linear():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_linear(arr1, arr2) == [3, 4, 5]

ts-3-5/test_3-5_0-2_77.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5], arr2 = [3, 4, 5, 6, 7]

>   ???
E   NameError: name 'arr1_seen' is not defined

find_duplicates:8: NameError
   - [#  30] SDL find_duplicates: 
--------------------------------------------------------------------------------
   1: from binary_search import binary_search
   2: 
   3: def duplicates_linear(arr1, arr2):
   4:     arr1_seen = set(arr1)
-  5:     output = []
+  5:     pass
   6:     
   7:     for element in arr2:
   8:         if element in arr1_seen:
   9:             output.append(element)
--------------------------------------------------------------------------------
[0.16736 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_linear

def test_duplicates_linear():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_linear(arr1, arr2) == [3, 4, 5]

ts-3-5/test_3-5_0-2_77.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5], arr2 = [3, 4, 5, 6, 7]

>   ???
E   NameError: name 'output' is not defined

find_duplicates:9: NameError
   - [#  31] SDL find_duplicates: 
--------------------------------------------------------------------------------
   5:     output = []
   6:     
   7:     for element in arr2:
   8:         if element in arr1_seen:
-  9:             output.append(element)
+  9:             pass
  10:     
  11:     return output
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
--------------------------------------------------------------------------------
[0.15922 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_linear

def test_duplicates_linear():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_linear(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:12: AssertionError
   - [#  32] SDL find_duplicates: 
--------------------------------------------------------------------------------
   7:     for element in arr2:
   8:         if element in arr1_seen:
   9:             output.append(element)
  10:     
- 11:     return output
+ 11:     pass
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
  14:     output = []
  15:     
--------------------------------------------------------------------------------
[0.16121 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_linear

def test_duplicates_linear():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_linear(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:12: AssertionError
   - [#  33] SDL find_duplicates: 
--------------------------------------------------------------------------------
  10:     
  11:     return output
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
- 14:     output = []
+ 14:     pass
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
--------------------------------------------------------------------------------
[0.16302 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]

ts-3-5/test_3-5_0-2_77.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5], arr2 = [3, 4, 5, 6, 7]

>   ???
E   NameError: name 'output' is not defined

find_duplicates:22: NameError
   - [#  34] SDL find_duplicates: 
--------------------------------------------------------------------------------
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
  14:     output = []
  15:     
- 16:     ptr_1 = 0
+ 16:     pass
  17:     ptr_2 = 0
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
--------------------------------------------------------------------------------
[0.16297 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]

ts-3-5/test_3-5_0-2_77.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5], arr2 = [3, 4, 5, 6, 7]

>   ???
E   UnboundLocalError: local variable 'ptr_1' referenced before assignment

find_duplicates:19: UnboundLocalError
   - [#  35] SDL find_duplicates: 
--------------------------------------------------------------------------------
  13: def duplicates_pre_sorted(arr1, arr2):
  14:     output = []
  15:     
  16:     ptr_1 = 0
- 17:     ptr_2 = 0
+ 17:     pass
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
--------------------------------------------------------------------------------
[0.16314 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]

ts-3-5/test_3-5_0-2_77.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5], arr2 = [3, 4, 5, 6, 7]

>   ???
E   UnboundLocalError: local variable 'ptr_2' referenced before assignment

find_duplicates:19: UnboundLocalError
   - [#  36] SDL find_duplicates: 
--------------------------------------------------------------------------------
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
- 22:             output.append(arr1[ptr_1])
+ 22:             pass
  23:             ptr_1 += 1
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.16320 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#  37] SDL find_duplicates: 
--------------------------------------------------------------------------------
  26:             ptr_1 += 1
  27:         else:
  28:             ptr_2 += 1
  29:     
- 30:     return output
+ 30:     pass
  31: 
  32: def duplicates_bin_search(arr1, arr2):
  33:     '''
  34:     Find duplicates in 2 sets, where one is much larger than the other.
--------------------------------------------------------------------------------
[0.16874 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#  38] SDL find_duplicates: 
--------------------------------------------------------------------------------
  36:     '''
  37:     
  38:     
  39:     if len(arr2) < len(arr1):
- 40:         (arr1, arr2) = (arr2, arr1)
+ 40:         pass
  41:     
  42:     output = []
  43:     
  44:     for element in arr1:
--------------------------------------------------------------------------------
[0.13615 s] survived
   - [#  39] SDL find_duplicates: 
--------------------------------------------------------------------------------
  38:     
  39:     if len(arr2) < len(arr1):
  40:         (arr1, arr2) = (arr2, arr1)
  41:     
- 42:     output = []
+ 42:     pass
  43:     
  44:     for element in arr1:
  45:         if binary_search(arr2, element) >= 0:
  46:             output.append(element)
--------------------------------------------------------------------------------
[0.16162 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_bin_search

def test_duplicates_bin_search():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_bin_search(arr1, arr2) == [3, 4, 5]

ts-3-5/test_3-5_0-2_77.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5], arr2 = [3, 4, 5, 6, 7]

>   ???
E   NameError: name 'output' is not defined

find_duplicates:46: NameError
   - [#  40] SDL find_duplicates: 
--------------------------------------------------------------------------------
  42:     output = []
  43:     
  44:     for element in arr1:
  45:         if binary_search(arr2, element) >= 0:
- 46:             output.append(element)
+ 46:             pass
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.16353 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_bin_search

def test_duplicates_bin_search():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_bin_search(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:30: AssertionError
   - [#  41] SDL find_duplicates: 
--------------------------------------------------------------------------------
  44:     for element in arr1:
  45:         if binary_search(arr2, element) >= 0:
  46:             output.append(element)
  47:     
- 48:     return output
+ 48:     pass
--------------------------------------------------------------------------------
[0.16031 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_bin_search

def test_duplicates_bin_search():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_bin_search(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:30: AssertionError
   - [#  42] ZIL find_duplicates: 
--------------------------------------------------------------------------------
   4:     arr1_seen = set(arr1)
   5:     output = []
   6:     
   7:     for element in arr2:
-  8:         if element in arr1_seen:
-  9:             output.append(element)
+  8:         break
+  9:     
  10:     
  11:     return output
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
--------------------------------------------------------------------------------
[0.16474 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_linear

def test_duplicates_linear():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_linear(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:12: AssertionError
   - [#  43] ZIL find_duplicates: 
--------------------------------------------------------------------------------
  17:     ptr_2 = 0
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
- 21:         if arr2[ptr_2] == arr1[ptr_1]:
- 22:             output.append(arr1[ptr_1])
- 23:             ptr_1 += 1
- 24:             ptr_2 += 1
- 25:         elif arr2[ptr_2] > arr1[ptr_1]:
- 26:             ptr_1 += 1
- 27:         else:
- 28:             ptr_2 += 1
+ 21:         break
+ 22:     
+ 23:     
+ 24:     
+ 25:     
+ 26:     
+ 27:     
+ 28:     
  29:     
  30:     return output
  31: 
  32: def duplicates_bin_search(arr1, arr2):
--------------------------------------------------------------------------------
[0.16795 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_pre_sorted

def test_duplicates_pre_sorted():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_pre_sorted(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:21: AssertionError
   - [#  44] ZIL find_duplicates: 
--------------------------------------------------------------------------------
  41:     
  42:     output = []
  43:     
  44:     for element in arr1:
- 45:         if binary_search(arr2, element) >= 0:
- 46:             output.append(element)
+ 45:         break
+ 46:     
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.17385 s] killed by ts-3-5/test_3-5_0-2_77.py::test_duplicates_bin_search

def test_duplicates_bin_search():
        arr1 = [1, 2, 3, 4, 5]
        arr2 = [3, 4, 5, 6, 7]
>       assert duplicates_bin_search(arr1, arr2) == [3, 4, 5]
E       AssertionError

ts-3-5/test_3-5_0-2_77.py:30: AssertionError
[*] Mutation score [8.31393 s]: 86.4%
   - all: 44
   - killed: 38 (86.4%)
   - survived: 6 (13.6%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
