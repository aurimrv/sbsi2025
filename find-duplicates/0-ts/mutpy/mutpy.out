[34m[*][0m Start mutation process:
[36m   -[0m targets: find_duplicates.py
[36m   -[0m tests: ./0-ts
[34m[*][0m 4 tests passed:
[36m   -[0m test_find_duplicates [0.16162 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] ASR find_duplicates: 
--------------------------------------------------------------------------------
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
[34m- 23:             ptr_1 += 1[0m
[32m+ 23:             ptr_1 -= 1[0m
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
--------------------------------------------------------------------------------
[0.12501 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#   2] ASR find_duplicates: 
--------------------------------------------------------------------------------
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
[34m- 24:             ptr_2 += 1[0m
[32m+ 24:             ptr_2 -= 1[0m
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
  28:             ptr_2 += 1
--------------------------------------------------------------------------------
[0.09950 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#   3] ASR find_duplicates: 
--------------------------------------------------------------------------------
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
[34m- 26:             ptr_1 += 1[0m
[32m+ 26:             ptr_1 -= 1[0m
  27:         else:
  28:             ptr_2 += 1
  29:     
  30:     return output
--------------------------------------------------------------------------------
[0.12648 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]

0-ts/test_find_duplicates.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5, 6], arr2 = [1, 2, 3, 7, 8, 9]

>   ???
E   IndexError: list index out of range

find_duplicates:21: IndexError
[36m   -[0m [#   4] ASR find_duplicates: 
--------------------------------------------------------------------------------
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
[34m- 28:             ptr_2 += 1[0m
[32m+ 28:             ptr_2 -= 1[0m
  29:     
  30:     return output
  31: 
  32: def duplicates_bin_search(arr1, arr2):
--------------------------------------------------------------------------------
[0.07906 s] [31msurvived[0m
[36m   -[0m [#   5] COI find_duplicates: 
--------------------------------------------------------------------------------
   4:     arr1_seen = set(arr1)
   5:     output = []
   6:     
   7:     for element in arr2:
[34m-  8:         if element in arr1_seen:[0m
[32m+  8:         if not (element in arr1_seen):[0m
   9:             output.append(element)
  10:     
  11:     return output
  12: 
--------------------------------------------------------------------------------
[0.11928 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_linear

def test_linear():
>       assert duplicates_linear([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:5: AssertionError
[36m   -[0m [#   6] COI find_duplicates: 
--------------------------------------------------------------------------------
   4:     arr1_seen = set(arr1)
   5:     output = []
   6:     
   7:     for element in arr2:
[34m-  8:         if element in arr1_seen:[0m
[32m+  8:         if element not in arr1_seen:[0m
   9:             output.append(element)
  10:     
  11:     return output
  12: 
--------------------------------------------------------------------------------
[0.09708 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_linear

def test_linear():
>       assert duplicates_linear([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:5: AssertionError
[36m   -[0m [#   7] COI find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
[34m- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):[0m
[32m+ 19:     while not ((ptr_1 < len(arr1) and ptr_2 < len(arr2))):[0m
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.11448 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#   8] COI find_duplicates: 
--------------------------------------------------------------------------------
  17:     ptr_2 = 0
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
[34m- 21:         if arr2[ptr_2] == arr1[ptr_1]:[0m
[32m+ 21:         if not (arr2[ptr_2] == arr1[ptr_1]):[0m
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
--------------------------------------------------------------------------------
[0.09513 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#   9] COI find_duplicates: 
--------------------------------------------------------------------------------
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
[34m- 25:         elif arr2[ptr_2] > arr1[ptr_1]:[0m
[32m+ 25:         elif not (arr2[ptr_2] > arr1[ptr_1]):[0m
  26:             ptr_1 += 1
  27:         else:
  28:             ptr_2 += 1
  29:     
--------------------------------------------------------------------------------
[0.08660 s] [31msurvived[0m
[36m   -[0m [#  10] COI find_duplicates: 
--------------------------------------------------------------------------------
  35: 
  36:     '''
  37:     
  38:     
[34m- 39:     if len(arr2) < len(arr1):[0m
[32m+ 39:     if not (len(arr2) < len(arr1)):[0m
  40:         (arr1, arr2) = (arr2, arr1)
  41:     
  42:     output = []
  43:     
--------------------------------------------------------------------------------
[0.12454 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]

0-ts/test_find_duplicates.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
find_duplicates:45: in duplicates_bin_search
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list = [1, 2, 3, 4, 5, 6], target = 7

    def binary_search(list, target):
        """
        Search a sorted list.
    
        :param list: the input sorted list
        :param target: the value that is to be found
        :return: index of target in list, or -1 if not found
        """
    
        # the initial left and right index
        l = 0
        r = len(list)
    
        # while left is less than right, if they cross then the value
        # couldn't have been found
        while l <= r:
    
            # get the midpoint of l and r
            mid = (r+l)//2
    
            # if the midpoint is equal to the target, return it
>           if list[mid] == target:
E           IndexError: list index out of range

binary_search.py:22: IndexError
[36m   -[0m [#  11] COI find_duplicates: 
--------------------------------------------------------------------------------
  41:     
  42:     output = []
  43:     
  44:     for element in arr1:
[34m- 45:         if binary_search(arr2, element) >= 0:[0m
[32m+ 45:         if not (binary_search(arr2, element) >= 0):[0m
  46:             output.append(element)
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.12700 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:13: AssertionError
[36m   -[0m [#  12] CRP find_duplicates: 
--------------------------------------------------------------------------------
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
  14:     output = []
  15:     
[34m- 16:     ptr_1 = 0[0m
[32m+ 16:     ptr_1 = 1[0m
  17:     ptr_2 = 0
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
--------------------------------------------------------------------------------
[0.11777 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#  13] CRP find_duplicates: 
--------------------------------------------------------------------------------
  13: def duplicates_pre_sorted(arr1, arr2):
  14:     output = []
  15:     
  16:     ptr_1 = 0
[34m- 17:     ptr_2 = 0[0m
[32m+ 17:     ptr_2 = 1[0m
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
--------------------------------------------------------------------------------
[0.10029 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#  14] CRP find_duplicates: 
--------------------------------------------------------------------------------
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
[34m- 23:             ptr_1 += 1[0m
[32m+ 23:             ptr_1 += 2[0m
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
--------------------------------------------------------------------------------
[0.09499 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#  15] CRP find_duplicates: 
--------------------------------------------------------------------------------
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
[34m- 24:             ptr_2 += 1[0m
[32m+ 24:             ptr_2 += 2[0m
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
  28:             ptr_2 += 1
--------------------------------------------------------------------------------
[0.12641 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#  16] CRP find_duplicates: 
--------------------------------------------------------------------------------
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
[34m- 26:             ptr_1 += 1[0m
[32m+ 26:             ptr_1 += 2[0m
  27:         else:
  28:             ptr_2 += 1
  29:     
  30:     return output
--------------------------------------------------------------------------------
[0.10849 s] [31msurvived[0m
[36m   -[0m [#  17] CRP find_duplicates: 
--------------------------------------------------------------------------------
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
[34m- 28:             ptr_2 += 1[0m
[32m+ 28:             ptr_2 += 2[0m
  29:     
  30:     return output
  31: 
  32: def duplicates_bin_search(arr1, arr2):
--------------------------------------------------------------------------------
[0.11089 s] [31msurvived[0m
[36m   -[0m [#  18] CRP find_duplicates: 
--------------------------------------------------------------------------------
  41:     
  42:     output = []
  43:     
  44:     for element in arr1:
[34m- 45:         if binary_search(arr2, element) >= 0:[0m
[32m+ 45:         if binary_search(arr2, element) >= 1:[0m
  46:             output.append(element)
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.12584 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:13: AssertionError
[36m   -[0m [#  19] LCR find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
[34m- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):[0m
[32m+ 19:     while (ptr_1 < len(arr1) or ptr_2 < len(arr2)):[0m
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.11750 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]

0-ts/test_find_duplicates.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5, 6], arr2 = [1, 2, 3, 7, 8, 9]

>   ???
E   IndexError: list index out of range

find_duplicates:21: IndexError
[36m   -[0m [#  20] OIL find_duplicates: 
--------------------------------------------------------------------------------
   6:     
   7:     for element in arr2:
   8:         if element in arr1_seen:
   9:             output.append(element)
[34m- 10:     [0m
[32m+ 10:         break[0m
  11:     return output
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
  14:     output = []
--------------------------------------------------------------------------------
[0.11563 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_linear

def test_linear():
>       assert duplicates_linear([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:5: AssertionError
[36m   -[0m [#  21] OIL find_duplicates: 
--------------------------------------------------------------------------------
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
  27:         else:
[34m- 28:             ptr_2 += 1[0m
[32m+ 28:             ptr_2 += 1break[0m
  29:     
  30:     return output
  31: 
  32: def duplicates_bin_search(arr1, arr2):
--------------------------------------------------------------------------------
[0.12322 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#  22] OIL find_duplicates: 
--------------------------------------------------------------------------------
  43:     
  44:     for element in arr1:
  45:         if binary_search(arr2, element) >= 0:
  46:             output.append(element)
[34m- 47:     [0m
[32m+ 47:         break[0m
  48:     return output
--------------------------------------------------------------------------------
[0.11782 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:13: AssertionError
[36m   -[0m [#  23] RIL find_duplicates: 
--------------------------------------------------------------------------------
   3: def duplicates_linear(arr1, arr2):
   4:     arr1_seen = set(arr1)
   5:     output = []
   6:     
[34m-  7:     for element in arr2:[0m
[32m+  7:     for element in reversed(arr2):[0m
   8:         if element in arr1_seen:
   9:             output.append(element)
  10:     
  11:     return output
--------------------------------------------------------------------------------
[0.14700 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_linear

def test_linear():
>       assert duplicates_linear([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:5: AssertionError
[36m   -[0m [#  24] RIL find_duplicates: 
--------------------------------------------------------------------------------
  40:         (arr1, arr2) = (arr2, arr1)
  41:     
  42:     output = []
  43:     
[34m- 44:     for element in arr1:[0m
[32m+ 44:     for element in reversed(arr1):[0m
  45:         if binary_search(arr2, element) >= 0:
  46:             output.append(element)
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.14710 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:13: AssertionError
[36m   -[0m [#  25] ROR find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
[34m- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):[0m
[32m+ 19:     while (ptr_1 > len(arr1) and ptr_2 < len(arr2)):[0m
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.14373 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#  26] ROR find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
[34m- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):[0m
[32m+ 19:     while (ptr_1 <= len(arr1) and ptr_2 < len(arr2)):[0m
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.11771 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]

0-ts/test_find_duplicates.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5, 6], arr2 = [1, 2, 3, 7, 8, 9]

>   ???
E   IndexError: list index out of range

find_duplicates:21: IndexError
[36m   -[0m [#  27] ROR find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
[34m- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):[0m
[32m+ 19:     while (ptr_1 < len(arr1) and ptr_2 > len(arr2)):[0m
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.12715 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#  28] ROR find_duplicates: 
--------------------------------------------------------------------------------
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
[34m- 19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):[0m
[32m+ 19:     while (ptr_1 < len(arr1) and ptr_2 <= len(arr2)):[0m
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.11008 s] [31msurvived[0m
[36m   -[0m [#  29] ROR find_duplicates: 
--------------------------------------------------------------------------------
  17:     ptr_2 = 0
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
[34m- 21:         if arr2[ptr_2] == arr1[ptr_1]:[0m
[32m+ 21:         if arr2[ptr_2] != arr1[ptr_1]:[0m
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
--------------------------------------------------------------------------------
[0.09721 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#  30] ROR find_duplicates: 
--------------------------------------------------------------------------------
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
[34m- 25:         elif arr2[ptr_2] > arr1[ptr_1]:[0m
[32m+ 25:         elif arr2[ptr_2] < arr1[ptr_1]:[0m
  26:             ptr_1 += 1
  27:         else:
  28:             ptr_2 += 1
  29:     
--------------------------------------------------------------------------------
[0.11031 s] [31msurvived[0m
[36m   -[0m [#  31] ROR find_duplicates: 
--------------------------------------------------------------------------------
  21:         if arr2[ptr_2] == arr1[ptr_1]:
  22:             output.append(arr1[ptr_1])
  23:             ptr_1 += 1
  24:             ptr_2 += 1
[34m- 25:         elif arr2[ptr_2] > arr1[ptr_1]:[0m
[32m+ 25:         elif arr2[ptr_2] >= arr1[ptr_1]:[0m
  26:             ptr_1 += 1
  27:         else:
  28:             ptr_2 += 1
  29:     
--------------------------------------------------------------------------------
[0.08610 s] [31msurvived[0m
[36m   -[0m [#  32] ROR find_duplicates: 
--------------------------------------------------------------------------------
  35: 
  36:     '''
  37:     
  38:     
[34m- 39:     if len(arr2) < len(arr1):[0m
[32m+ 39:     if len(arr2) > len(arr1):[0m
  40:         (arr1, arr2) = (arr2, arr1)
  41:     
  42:     output = []
  43:     
--------------------------------------------------------------------------------
[0.10180 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
        assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9,10,11,12,13,14,15]) == [1,2,3]

0-ts/test_find_duplicates.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
find_duplicates:45: in duplicates_bin_search
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list = [1, 2, 3, 4, 5, 6], target = 7

    def binary_search(list, target):
        """
        Search a sorted list.
    
        :param list: the input sorted list
        :param target: the value that is to be found
        :return: index of target in list, or -1 if not found
        """
    
        # the initial left and right index
        l = 0
        r = len(list)
    
        # while left is less than right, if they cross then the value
        # couldn't have been found
        while l <= r:
    
            # get the midpoint of l and r
            mid = (r+l)//2
    
            # if the midpoint is equal to the target, return it
>           if list[mid] == target:
E           IndexError: list index out of range

binary_search.py:22: IndexError
[36m   -[0m [#  33] ROR find_duplicates: 
--------------------------------------------------------------------------------
  35: 
  36:     '''
  37:     
  38:     
[34m- 39:     if len(arr2) < len(arr1):[0m
[32m+ 39:     if len(arr2) <= len(arr1):[0m
  40:         (arr1, arr2) = (arr2, arr1)
  41:     
  42:     output = []
  43:     
--------------------------------------------------------------------------------
[0.12877 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]

0-ts/test_find_duplicates.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
find_duplicates:45: in duplicates_bin_search
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list = [1, 2, 3, 4, 5, 6], target = 7

    def binary_search(list, target):
        """
        Search a sorted list.
    
        :param list: the input sorted list
        :param target: the value that is to be found
        :return: index of target in list, or -1 if not found
        """
    
        # the initial left and right index
        l = 0
        r = len(list)
    
        # while left is less than right, if they cross then the value
        # couldn't have been found
        while l <= r:
    
            # get the midpoint of l and r
            mid = (r+l)//2
    
            # if the midpoint is equal to the target, return it
>           if list[mid] == target:
E           IndexError: list index out of range

binary_search.py:22: IndexError
[36m   -[0m [#  34] ROR find_duplicates: 
--------------------------------------------------------------------------------
  41:     
  42:     output = []
  43:     
  44:     for element in arr1:
[34m- 45:         if binary_search(arr2, element) >= 0:[0m
[32m+ 45:         if binary_search(arr2, element) <= 0:[0m
  46:             output.append(element)
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.09823 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:13: AssertionError
[36m   -[0m [#  35] ROR find_duplicates: 
--------------------------------------------------------------------------------
  41:     
  42:     output = []
  43:     
  44:     for element in arr1:
[34m- 45:         if binary_search(arr2, element) >= 0:[0m
[32m+ 45:         if binary_search(arr2, element) > 0:[0m
  46:             output.append(element)
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.10885 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:13: AssertionError
[36m   -[0m [#  36] SDL find_duplicates: 
--------------------------------------------------------------------------------
   1: from binary_search import binary_search
   2: 
   3: def duplicates_linear(arr1, arr2):
[34m-  4:     arr1_seen = set(arr1)[0m
[32m+  4:     pass[0m
   5:     output = []
   6:     
   7:     for element in arr2:
   8:         if element in arr1_seen:
--------------------------------------------------------------------------------
[0.09747 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_linear

def test_linear():
>       assert duplicates_linear([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]

0-ts/test_find_duplicates.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5, 6], arr2 = [1, 2, 3, 7, 8, 9]

>   ???
E   NameError: name 'arr1_seen' is not defined

find_duplicates:8: NameError
[36m   -[0m [#  37] SDL find_duplicates: 
--------------------------------------------------------------------------------
   1: from binary_search import binary_search
   2: 
   3: def duplicates_linear(arr1, arr2):
   4:     arr1_seen = set(arr1)
[34m-  5:     output = [][0m
[32m+  5:     pass[0m
   6:     
   7:     for element in arr2:
   8:         if element in arr1_seen:
   9:             output.append(element)
--------------------------------------------------------------------------------
[0.09678 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_linear

def test_linear():
>       assert duplicates_linear([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]

0-ts/test_find_duplicates.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5, 6], arr2 = [1, 2, 3, 7, 8, 9]

>   ???
E   NameError: name 'output' is not defined

find_duplicates:9: NameError
[36m   -[0m [#  38] SDL find_duplicates: 
--------------------------------------------------------------------------------
   5:     output = []
   6:     
   7:     for element in arr2:
   8:         if element in arr1_seen:
[34m-  9:             output.append(element)[0m
[32m+  9:             pass[0m
  10:     
  11:     return output
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
--------------------------------------------------------------------------------
[0.09519 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_linear

def test_linear():
>       assert duplicates_linear([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:5: AssertionError
[36m   -[0m [#  39] SDL find_duplicates: 
--------------------------------------------------------------------------------
   7:     for element in arr2:
   8:         if element in arr1_seen:
   9:             output.append(element)
  10:     
[34m- 11:     return output[0m
[32m+ 11:     pass[0m
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
  14:     output = []
  15:     
--------------------------------------------------------------------------------
[0.09960 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_linear

def test_linear():
>       assert duplicates_linear([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:5: AssertionError
[36m   -[0m [#  40] SDL find_duplicates: 
--------------------------------------------------------------------------------
  10:     
  11:     return output
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
[34m- 14:     output = [][0m
[32m+ 14:     pass[0m
  15:     
  16:     ptr_1 = 0
  17:     ptr_2 = 0
  18:     
--------------------------------------------------------------------------------
[0.12479 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]

0-ts/test_find_duplicates.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5, 6], arr2 = [1, 2, 3, 7, 8, 9]

>   ???
E   NameError: name 'output' is not defined

find_duplicates:22: NameError
[36m   -[0m [#  41] SDL find_duplicates: 
--------------------------------------------------------------------------------
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
  14:     output = []
  15:     
[34m- 16:     ptr_1 = 0[0m
[32m+ 16:     pass[0m
  17:     ptr_2 = 0
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
--------------------------------------------------------------------------------
[0.11931 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]

0-ts/test_find_duplicates.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5, 6], arr2 = [1, 2, 3, 7, 8, 9]

>   ???
E   UnboundLocalError: local variable 'ptr_1' referenced before assignment

find_duplicates:19: UnboundLocalError
[36m   -[0m [#  42] SDL find_duplicates: 
--------------------------------------------------------------------------------
  13: def duplicates_pre_sorted(arr1, arr2):
  14:     output = []
  15:     
  16:     ptr_1 = 0
[34m- 17:     ptr_2 = 0[0m
[32m+ 17:     pass[0m
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
--------------------------------------------------------------------------------
[0.09702 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]

0-ts/test_find_duplicates.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5, 6], arr2 = [1, 2, 3, 7, 8, 9]

>   ???
E   UnboundLocalError: local variable 'ptr_2' referenced before assignment

find_duplicates:19: UnboundLocalError
[36m   -[0m [#  43] SDL find_duplicates: 
--------------------------------------------------------------------------------
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
  21:         if arr2[ptr_2] == arr1[ptr_1]:
[34m- 22:             output.append(arr1[ptr_1])[0m
[32m+ 22:             pass[0m
  23:             ptr_1 += 1
  24:             ptr_2 += 1
  25:         elif arr2[ptr_2] > arr1[ptr_1]:
  26:             ptr_1 += 1
--------------------------------------------------------------------------------
[0.10057 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#  44] SDL find_duplicates: 
--------------------------------------------------------------------------------
  26:             ptr_1 += 1
  27:         else:
  28:             ptr_2 += 1
  29:     
[34m- 30:     return output[0m
[32m+ 30:     pass[0m
  31: 
  32: def duplicates_bin_search(arr1, arr2):
  33:     '''
  34:     Find duplicates in 2 sets, where one is much larger than the other.
--------------------------------------------------------------------------------
[0.09562 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#  45] SDL find_duplicates: 
--------------------------------------------------------------------------------
  36:     '''
  37:     
  38:     
  39:     if len(arr2) < len(arr1):
[34m- 40:         (arr1, arr2) = (arr2, arr1)[0m
[32m+ 40:         pass[0m
  41:     
  42:     output = []
  43:     
  44:     for element in arr1:
--------------------------------------------------------------------------------
[0.12573 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search_second_shorter

def test_bin_search_second_shorter():
>       assert duplicates_bin_search([1,2,3,7,8,9,10,11,12,13,14,15],[1,2,3,4,5,6]) == [1,2,3]

0-ts/test_find_duplicates.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
find_duplicates:45: in duplicates_bin_search
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

list = [1, 2, 3, 4, 5, 6], target = 7

    def binary_search(list, target):
        """
        Search a sorted list.
    
        :param list: the input sorted list
        :param target: the value that is to be found
        :return: index of target in list, or -1 if not found
        """
    
        # the initial left and right index
        l = 0
        r = len(list)
    
        # while left is less than right, if they cross then the value
        # couldn't have been found
        while l <= r:
    
            # get the midpoint of l and r
            mid = (r+l)//2
    
            # if the midpoint is equal to the target, return it
>           if list[mid] == target:
E           IndexError: list index out of range

binary_search.py:22: IndexError
[36m   -[0m [#  46] SDL find_duplicates: 
--------------------------------------------------------------------------------
  38:     
  39:     if len(arr2) < len(arr1):
  40:         (arr1, arr2) = (arr2, arr1)
  41:     
[34m- 42:     output = [][0m
[32m+ 42:     pass[0m
  43:     
  44:     for element in arr1:
  45:         if binary_search(arr2, element) >= 0:
  46:             output.append(element)
--------------------------------------------------------------------------------
[0.12652 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]

0-ts/test_find_duplicates.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

arr1 = [1, 2, 3, 4, 5, 6], arr2 = [1, 2, 3, 7, 8, 9]

>   ???
E   NameError: name 'output' is not defined

find_duplicates:46: NameError
[36m   -[0m [#  47] SDL find_duplicates: 
--------------------------------------------------------------------------------
  42:     output = []
  43:     
  44:     for element in arr1:
  45:         if binary_search(arr2, element) >= 0:
[34m- 46:             output.append(element)[0m
[32m+ 46:             pass[0m
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.12040 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:13: AssertionError
[36m   -[0m [#  48] SDL find_duplicates: 
--------------------------------------------------------------------------------
  44:     for element in arr1:
  45:         if binary_search(arr2, element) >= 0:
  46:             output.append(element)
  47:     
[34m- 48:     return output[0m
[32m+ 48:     pass[0m
--------------------------------------------------------------------------------
[0.12406 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:13: AssertionError
[36m   -[0m [#  49] ZIL find_duplicates: 
--------------------------------------------------------------------------------
   4:     arr1_seen = set(arr1)
   5:     output = []
   6:     
   7:     for element in arr2:
[34m-  8:         if element in arr1_seen:[0m
[34m-  9:             output.append(element)[0m
[32m+  8:         break[0m
[32m+  9:     [0m
  10:     
  11:     return output
  12: 
  13: def duplicates_pre_sorted(arr1, arr2):
--------------------------------------------------------------------------------
[0.12004 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_linear

def test_linear():
>       assert duplicates_linear([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:5: AssertionError
[36m   -[0m [#  50] ZIL find_duplicates: 
--------------------------------------------------------------------------------
  17:     ptr_2 = 0
  18:     
  19:     while (ptr_1 < len(arr1) and ptr_2 < len(arr2)):
  20:         
[34m- 21:         if arr2[ptr_2] == arr1[ptr_1]:[0m
[34m- 22:             output.append(arr1[ptr_1])[0m
[34m- 23:             ptr_1 += 1[0m
[34m- 24:             ptr_2 += 1[0m
[34m- 25:         elif arr2[ptr_2] > arr1[ptr_1]:[0m
[34m- 26:             ptr_1 += 1[0m
[34m- 27:         else:[0m
[34m- 28:             ptr_2 += 1[0m
[32m+ 21:         break[0m
[32m+ 22:     [0m
[32m+ 23:     [0m
[32m+ 24:     [0m
[32m+ 25:     [0m
[32m+ 26:     [0m
[32m+ 27:     [0m
[32m+ 28:     [0m
  29:     
  30:     return output
  31: 
  32: def duplicates_bin_search(arr1, arr2):
--------------------------------------------------------------------------------
[0.12646 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_pre_sorted

def test_pre_sorted():
>       assert duplicates_pre_sorted([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:9: AssertionError
[36m   -[0m [#  51] ZIL find_duplicates: 
--------------------------------------------------------------------------------
  41:     
  42:     output = []
  43:     
  44:     for element in arr1:
[34m- 45:         if binary_search(arr2, element) >= 0:[0m
[34m- 46:             output.append(element)[0m
[32m+ 45:         break[0m
[32m+ 46:     [0m
  47:     
  48:     return output
--------------------------------------------------------------------------------
[0.15110 s] [32mkilled[0m by 0-ts/test_find_duplicates.py::test_bin_search

def test_bin_search():
>       assert duplicates_bin_search([1,2,3,4,5,6],[1,2,3,7,8,9]) == [1,2,3]
E       AssertionError

0-ts/test_find_duplicates.py:13: AssertionError
[34m[*][0m Mutation score [8.49777 s]: [1m[34m86.3%[0m
[36m   -[0m all: 51
[36m   -[0m killed: 44 (86.3%)
[36m   -[0m survived: 7 (13.7%)
[36m   -[0m incompetent: 0 (0.0%)
[36m   -[0m timeout: 0 (0.0%)
